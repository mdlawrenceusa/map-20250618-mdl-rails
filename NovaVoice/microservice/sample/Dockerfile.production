# NovaVoice Microservice Production Dockerfile
# Optimized Node.js build for voice AI telephony

# Base image
FROM node:18-alpine as base

# Install system dependencies
RUN apk add --no-cache \
    curl \
    dumb-init \
    && rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /app

# Environment variables
ENV NODE_ENV=production \
    PORT=3000 \
    AWS_REGION=us-east-1

# Dependencies stage
FROM base as dependencies

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production && \
    npm cache clean --force

# Development dependencies for TypeScript compilation
RUN npm install --only=development

# Copy source code
COPY . .

# Compile TypeScript
RUN npm run build

# Remove development dependencies
RUN npm prune --production

# Production stage
FROM base as production

# Create app user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Copy production dependencies
COPY --from=dependencies --chown=nodejs:nodejs /app/node_modules ./node_modules

# Copy compiled application
COPY --from=dependencies --chown=nodejs:nodejs /app/dist ./dist
COPY --from=dependencies --chown=nodejs:nodejs /app/package*.json ./

# Create necessary directories
RUN mkdir -p transcripts logs && \
    chown -R nodejs:nodejs transcripts logs

# Switch to nodejs user
USER nodejs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start application
CMD ["node", "dist/server.js"]