# NovaVoice Production Dockerfile
# Multi-stage build for optimized production deployment

# Base image with Ruby and system dependencies
FROM ruby:3.2-slim as base

# Install system dependencies
RUN apt-get update -qq && \
    apt-get install -y \
      build-essential \
      libpq-dev \
      libvips \
      pkg-config \
      curl \
      git \
      nodejs \
      npm \
      libyaml-dev && \
    rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Install specific Node.js version for better compatibility
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs

# Environment variables
ENV RAILS_ENV=production \
    BUNDLE_DEPLOYMENT=1 \
    BUNDLE_PATH=/usr/local/bundle \
    BUNDLE_WITHOUT=development:test

# Dependencies stage
FROM base as dependencies

# Copy Gemfile and install gems
COPY Gemfile Gemfile.lock ./
RUN bundle install && \
    bundle exec bootsnap precompile --gemfile && \
    rm -rf ~/.bundle/ "${BUNDLE_PATH}"/ruby/*/cache "${BUNDLE_PATH}"/ruby/*/bundler/gems/*/.git

# Copy package.json and install node modules (if any)
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Application stage
FROM base as application

# Copy installed gems from dependencies stage
COPY --from=dependencies $BUNDLE_PATH $BUNDLE_PATH
COPY --from=dependencies /app/node_modules ./node_modules

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p tmp/pids tmp/cache tmp/sockets log storage

# Precompile assets and bootsnap
RUN SECRET_KEY_BASE_DUMMY=1 bundle exec rails assets:precompile && \
    bundle exec bootsnap precompile app/ lib/ && \
    rm -rf node_modules tmp/cache/assets

# Set proper permissions
RUN groupadd --gid 1000 rails && \
    useradd --uid 1000 --gid rails --shell /bin/bash --create-home rails && \
    chown -R rails:rails /app

# Production stage
FROM base as production

# Copy application from application stage
COPY --from=application --chown=rails:rails /app /app
COPY --from=dependencies $BUNDLE_PATH $BUNDLE_PATH

# Install runtime dependencies only
RUN apt-get update -qq && \
    apt-get install -y \
      libpq5 \
      libvips \
      curl \
      postgresql-client && \
    rm -rf /var/lib/apt/lists/*

# Switch to rails user
USER rails

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:3000/up || exit 1

# Set entrypoint
COPY --chown=rails:rails docker-entrypoint.sh /usr/bin/
RUN chmod +x /usr/bin/docker-entrypoint.sh
ENTRYPOINT ["docker-entrypoint.sh"]

# Default command
CMD ["bundle", "exec", "puma", "-C", "config/puma.rb"]