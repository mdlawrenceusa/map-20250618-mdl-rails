# Name of your application. Used to uniquely configure containers.
service: nova_voice

# Name of the container image.
image: nova-voice/production

# Deploy to these servers.
servers:
  web:
    hosts:
      - localhost  # Deploy on current EC2 instance

# Kamal Proxy configuration for novavoice.gospelshare.com
# SSL termination handled by CloudFront, so we use HTTP internally
proxy:
  ssl: false  # CloudFront handles SSL termination
  host: novavoice.gospelshare.com

# Credentials for your image host.
registry:
  # Using AWS ECR for container registry
  server: 302296110959.dkr.ecr.us-east-1.amazonaws.com
  username: AWS

  # ECR token retrieved via AWS CLI
  password:
    - KAMAL_REGISTRY_PASSWORD

# Container configuration with IAM role-based security
# No environment variables - all credentials from AWS Secrets Manager/Parameter Store
env:
  clear:
    # Minimal environment configuration
    RAILS_ENV: production
    RAILS_LOG_TO_STDOUT: true
    AWS_REGION: us-east-1
    PORT: 8080  # Use port 8080 to avoid conflict with microservice on 3000

# SSH configuration for local deployment
ssh:
  user: ec2-user

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f
  dbc: app exec --interactive --reuse "bin/rails dbconsole"


# Use a persistent storage volume for sqlite database files and local Active Storage files.
# Recommended to change this to a mounted volume path that is backed up off server.
volumes:
  - "nova_voice_storage:/rails/storage"


# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
asset_path: /rails/public/assets

# Configure the image builder.
builder:
  arch: amd64

  # # Build image via remote server (useful for faster amd64 builds on arm64 computers)
  # remote: ssh://docker@docker-builder-server
  #
  # # Pass arguments and secrets to the Docker build process
  # args:
  #   RUBY_VERSION: ruby-3.2.8
  # secrets:
  #   - GITHUB_TOKEN
  #   - RAILS_MASTER_KEY

# Use a different ssh user than root
# ssh:
#   user: app

# Use accessory services (secrets come from .kamal/secrets).
accessories:
  redis:
    image: redis:7.0
    host: localhost
    port: "127.0.0.1:6379:6379"
    volumes:
      - "nova_voice_redis_data:/data"
    cmd: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  microservice:
    image: nova-voice/microservice
    host: localhost  
    port: "127.0.0.1:3001:3000"
    env:
      clear:
        NODE_ENV: production
        PORT: 3000
        AWS_REGION: us-east-1
    # Note: IAM role will be handled via EC2 instance profile
    volumes:
      - "nova_voice_transcripts:/app/transcripts"
