{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "aws-cdk-lib": "^2.202.0",
    "constructs": "^10.0.0"
  },
  "dependencyClosure": {
    "@aws-cdk/asset-awscli-v1": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.AwsCliV1",
          "packageId": "Amazon.CDK.Asset.AwsCliV1"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-awscli-go",
          "packageName": "awscliv1"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-awscli-v1",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.awscli.v1"
        },
        "js": {
          "npm": "@aws-cdk/asset-awscli-v1"
        },
        "python": {
          "distName": "aws-cdk.asset-awscli-v1",
          "module": "aws_cdk.asset_awscli_v1"
        }
      }
    },
    "@aws-cdk/asset-node-proxy-agent-v6": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.NodeProxyAgentV6",
          "packageId": "Amazon.CDK.Asset.NodeProxyAgentV6"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-node-proxy-agent-go",
          "packageName": "nodeproxyagentv6"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-node-proxy-agent-v6",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.node.proxy.agent.v6"
        },
        "js": {
          "npm": "@aws-cdk/asset-node-proxy-agent-v6"
        },
        "python": {
          "distName": "aws-cdk.asset-node-proxy-agent-v6",
          "module": "aws_cdk.asset_node_proxy_agent_v6"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "go": {
          "moduleName": "github.com/cdklabs/cloud-assembly-schema-go"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "aws-cdk-lib": {
      "submodules": {
        "aws-cdk-lib.alexa_ask": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Alexa.Ask"
            },
            "java": {
              "package": "software.amazon.awscdk.alexa.ask"
            },
            "python": {
              "module": "aws_cdk.alexa_ask"
            }
          }
        },
        "aws-cdk-lib.assertions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assertions"
            },
            "java": {
              "package": "software.amazon.awscdk.assertions"
            },
            "python": {
              "module": "aws_cdk.assertions"
            }
          }
        },
        "aws-cdk-lib.assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.assets"
            },
            "python": {
              "module": "aws_cdk.assets"
            }
          }
        },
        "aws-cdk-lib.aws_accessanalyzer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AccessAnalyzer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.accessanalyzer"
            },
            "python": {
              "module": "aws_cdk.aws_accessanalyzer"
            }
          }
        },
        "aws-cdk-lib.aws_acmpca": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ACMPCA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.acmpca"
            },
            "python": {
              "module": "aws_cdk.aws_acmpca"
            }
          }
        },
        "aws-cdk-lib.aws_amazonmq": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmazonMQ"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amazonmq"
            },
            "python": {
              "module": "aws_cdk.aws_amazonmq"
            }
          }
        },
        "aws-cdk-lib.aws_amplify": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Amplify"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplify"
            },
            "python": {
              "module": "aws_cdk.aws_amplify"
            }
          }
        },
        "aws-cdk-lib.aws_amplifyuibuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmplifyUIBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplifyuibuilder"
            },
            "python": {
              "module": "aws_cdk.aws_amplifyuibuilder"
            }
          }
        },
        "aws-cdk-lib.aws_apigateway": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APIGateway"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigateway"
            },
            "python": {
              "module": "aws_cdk.aws_apigateway"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Apigatewayv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigatewayv2"
            },
            "python": {
              "module": "aws_cdk.aws_apigatewayv2"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2_authorizers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AwsApigatewayv2Authorizers"
            },
            "java": {
              "package": "software.amazon.awscdk.aws_apigatewayv2_authorizers"
            },
            "python": {
              "module": "aws_cdk.aws_apigatewayv2_authorizers"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2_integrations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AwsApigatewayv2Integrations"
            },
            "java": {
              "package": "software.amazon.awscdk.aws_apigatewayv2_integrations"
            },
            "python": {
              "module": "aws_cdk.aws_apigatewayv2_integrations"
            }
          }
        },
        "aws-cdk-lib.aws_appconfig": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppConfig"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appconfig"
            },
            "python": {
              "module": "aws_cdk.aws_appconfig"
            }
          }
        },
        "aws-cdk-lib.aws_appflow": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppFlow"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appflow"
            },
            "python": {
              "module": "aws_cdk.aws_appflow"
            }
          }
        },
        "aws-cdk-lib.aws_appintegrations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppIntegrations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appintegrations"
            },
            "python": {
              "module": "aws_cdk.aws_appintegrations"
            }
          }
        },
        "aws-cdk-lib.aws_applicationautoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationautoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_applicationautoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_applicationinsights": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationInsights"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationinsights"
            },
            "python": {
              "module": "aws_cdk.aws_applicationinsights"
            }
          }
        },
        "aws-cdk-lib.aws_applicationsignals": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.ApplicationSignals"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationsignals"
            },
            "python": {
              "module": "aws_cdk.aws_applicationsignals"
            }
          }
        },
        "aws-cdk-lib.aws_appmesh": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppMesh"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appmesh"
            },
            "python": {
              "module": "aws_cdk.aws_appmesh"
            }
          }
        },
        "aws-cdk-lib.aws_apprunner": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppRunner"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apprunner"
            },
            "python": {
              "module": "aws_cdk.aws_apprunner"
            }
          }
        },
        "aws-cdk-lib.aws_appstream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppStream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appstream"
            },
            "python": {
              "module": "aws_cdk.aws_appstream"
            }
          }
        },
        "aws-cdk-lib.aws_appsync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appsync"
            },
            "python": {
              "module": "aws_cdk.aws_appsync"
            }
          }
        },
        "aws-cdk-lib.aws_apptest": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.AppTest"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apptest"
            },
            "python": {
              "module": "aws_cdk.aws_apptest"
            }
          }
        },
        "aws-cdk-lib.aws_aps": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.aps"
            },
            "python": {
              "module": "aws_cdk.aws_aps"
            }
          }
        },
        "aws-cdk-lib.aws_arczonalshift": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.ARCZonalShift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.arczonalshift"
            },
            "python": {
              "module": "aws_cdk.aws_arczonalshift"
            }
          }
        },
        "aws-cdk-lib.aws_athena": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Athena"
            },
            "java": {
              "package": "software.amazon.awscdk.services.athena"
            },
            "python": {
              "module": "aws_cdk.aws_athena"
            }
          }
        },
        "aws-cdk-lib.aws_auditmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AuditManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.auditmanager"
            },
            "python": {
              "module": "aws_cdk.aws_auditmanager"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_common": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.Common"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.common"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_common"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_hooktargets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.HookTargets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.hooktargets"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_hooktargets"
            }
          }
        },
        "aws-cdk-lib.aws_autoscalingplans": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScalingPlans"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscalingplans"
            },
            "python": {
              "module": "aws_cdk.aws_autoscalingplans"
            }
          }
        },
        "aws-cdk-lib.aws_b2bi": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.B2BI"
            },
            "java": {
              "package": "software.amazon.awscdk.services.b2bi"
            },
            "python": {
              "module": "aws_cdk.aws_b2bi"
            }
          }
        },
        "aws-cdk-lib.aws_backup": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Backup"
            },
            "java": {
              "package": "software.amazon.awscdk.services.backup"
            },
            "python": {
              "module": "aws_cdk.aws_backup"
            }
          }
        },
        "aws-cdk-lib.aws_backupgateway": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.BackupGateway"
            },
            "java": {
              "package": "software.amazon.awscdk.services.backupgateway"
            },
            "python": {
              "module": "aws_cdk.aws_backupgateway"
            }
          }
        },
        "aws-cdk-lib.aws_batch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Batch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.batch"
            },
            "python": {
              "module": "aws_cdk.aws_batch"
            }
          }
        },
        "aws-cdk-lib.aws_bcmdataexports": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.BCMDataExports"
            },
            "java": {
              "package": "software.amazon.awscdk.services.bcmdataexports"
            },
            "python": {
              "module": "aws_cdk.aws_bcmdataexports"
            }
          }
        },
        "aws-cdk-lib.aws_bedrock": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Bedrock"
            },
            "java": {
              "package": "software.amazon.awscdk.services.bedrock"
            },
            "python": {
              "module": "aws_cdk.aws_bedrock"
            }
          }
        },
        "aws-cdk-lib.aws_billingconductor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.BillingConductor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.billingconductor"
            },
            "python": {
              "module": "aws_cdk.aws_billingconductor"
            }
          }
        },
        "aws-cdk-lib.aws_budgets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Budgets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.budgets"
            },
            "python": {
              "module": "aws_cdk.aws_budgets"
            }
          }
        },
        "aws-cdk-lib.aws_cassandra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cassandra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cassandra"
            },
            "python": {
              "module": "aws_cdk.aws_cassandra"
            }
          }
        },
        "aws-cdk-lib.aws_ce": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CE"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ce"
            },
            "python": {
              "module": "aws_cdk.aws_ce"
            }
          }
        },
        "aws-cdk-lib.aws_certificatemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CertificateManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.certificatemanager"
            },
            "python": {
              "module": "aws_cdk.aws_certificatemanager"
            }
          }
        },
        "aws-cdk-lib.aws_chatbot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Chatbot"
            },
            "java": {
              "package": "software.amazon.awscdk.services.chatbot"
            },
            "python": {
              "module": "aws_cdk.aws_chatbot"
            }
          }
        },
        "aws-cdk-lib.aws_cleanrooms": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.CleanRooms"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cleanrooms"
            },
            "python": {
              "module": "aws_cdk.aws_cleanrooms"
            }
          }
        },
        "aws-cdk-lib.aws_cleanroomsml": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.CleanRoomsML"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cleanroomsml"
            },
            "python": {
              "module": "aws_cdk.aws_cleanroomsml"
            }
          }
        },
        "aws-cdk-lib.aws_cloud9": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cloud9"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloud9"
            },
            "python": {
              "module": "aws_cdk.aws_cloud9"
            }
          }
        },
        "aws-cdk-lib.aws_cloudformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudformation"
            },
            "python": {
              "module": "aws_cdk.aws_cloudformation"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront.experimental": {},
        "aws-cdk-lib.aws_cloudfront_origins": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront.Origins"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront.origins"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront_origins"
            }
          }
        },
        "aws-cdk-lib.aws_cloudtrail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudTrail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudtrail"
            },
            "python": {
              "module": "aws_cdk.aws_cloudtrail"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch.actions"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codeartifact": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeArtifact"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeartifact"
            },
            "python": {
              "module": "aws_cdk.aws_codeartifact"
            }
          }
        },
        "aws-cdk-lib.aws_codebuild": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeBuild"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codebuild"
            },
            "python": {
              "module": "aws_cdk.aws_codebuild"
            }
          }
        },
        "aws-cdk-lib.aws_codecommit": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeCommit"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codecommit"
            },
            "python": {
              "module": "aws_cdk.aws_codecommit"
            }
          }
        },
        "aws-cdk-lib.aws_codeconnections": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.CodeConnections"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeconnections"
            },
            "python": {
              "module": "aws_cdk.aws_codeconnections"
            }
          }
        },
        "aws-cdk-lib.aws_codedeploy": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeDeploy"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codedeploy"
            },
            "python": {
              "module": "aws_cdk.aws_codedeploy"
            }
          }
        },
        "aws-cdk-lib.aws_codeguruprofiler": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruProfiler"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeguruprofiler"
            },
            "python": {
              "module": "aws_cdk.aws_codeguruprofiler"
            }
          }
        },
        "aws-cdk-lib.aws_codegurureviewer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruReviewer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codegurureviewer"
            },
            "python": {
              "module": "aws_cdk.aws_codegurureviewer"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline.actions"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codestar": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Codestar"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestar"
            },
            "python": {
              "module": "aws_cdk.aws_codestar"
            }
          }
        },
        "aws-cdk-lib.aws_codestarconnections": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarConnections"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarconnections"
            },
            "python": {
              "module": "aws_cdk.aws_codestarconnections"
            }
          }
        },
        "aws-cdk-lib.aws_codestarnotifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarNotifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarnotifications"
            },
            "python": {
              "module": "aws_cdk.aws_codestarnotifications"
            }
          }
        },
        "aws-cdk-lib.aws_cognito": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cognito"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cognito"
            },
            "python": {
              "module": "aws_cdk.aws_cognito"
            }
          }
        },
        "aws-cdk-lib.aws_cognito_identitypool": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cognito.Identitypool"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cognito.identitypool"
            },
            "python": {
              "module": "aws_cdk.aws_cognito_identitypool"
            }
          }
        },
        "aws-cdk-lib.aws_comprehend": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Comprehend"
            },
            "java": {
              "package": "software.amazon.awscdk.services.comprehend"
            },
            "python": {
              "module": "aws_cdk.aws_comprehend"
            }
          }
        },
        "aws-cdk-lib.aws_config": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Config"
            },
            "java": {
              "package": "software.amazon.awscdk.services.config"
            },
            "python": {
              "module": "aws_cdk.aws_config"
            }
          }
        },
        "aws-cdk-lib.aws_connect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Connect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connect"
            },
            "python": {
              "module": "aws_cdk.aws_connect"
            }
          }
        },
        "aws-cdk-lib.aws_connectcampaigns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ConnectCampaigns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connectcampaigns"
            },
            "python": {
              "module": "aws_cdk.aws_connectcampaigns"
            }
          }
        },
        "aws-cdk-lib.aws_connectcampaignsv2": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.ConnectCampaignsV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connectcampaignsv2"
            },
            "python": {
              "module": "aws_cdk.aws_connectcampaignsv2"
            }
          }
        },
        "aws-cdk-lib.aws_controltower": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ControlTower"
            },
            "java": {
              "package": "software.amazon.awscdk.services.controltower"
            },
            "python": {
              "module": "aws_cdk.aws_controltower"
            }
          }
        },
        "aws-cdk-lib.aws_cur": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CUR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cur"
            },
            "python": {
              "module": "aws_cdk.aws_cur"
            }
          }
        },
        "aws-cdk-lib.aws_customerprofiles": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CustomerProfiles"
            },
            "java": {
              "package": "software.amazon.awscdk.services.customerprofiles"
            },
            "python": {
              "module": "aws_cdk.aws_customerprofiles"
            }
          }
        },
        "aws-cdk-lib.aws_databrew": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataBrew"
            },
            "java": {
              "package": "software.amazon.awscdk.services.databrew"
            },
            "python": {
              "module": "aws_cdk.aws_databrew"
            }
          }
        },
        "aws-cdk-lib.aws_datapipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataPipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datapipeline"
            },
            "python": {
              "module": "aws_cdk.aws_datapipeline"
            }
          }
        },
        "aws-cdk-lib.aws_datasync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datasync"
            },
            "python": {
              "module": "aws_cdk.aws_datasync"
            }
          }
        },
        "aws-cdk-lib.aws_datazone": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.DataZone"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datazone"
            },
            "python": {
              "module": "aws_cdk.aws_datazone"
            }
          }
        },
        "aws-cdk-lib.aws_dax": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DAX"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dax"
            },
            "python": {
              "module": "aws_cdk.aws_dax"
            }
          }
        },
        "aws-cdk-lib.aws_deadline": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Deadline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.deadline"
            },
            "python": {
              "module": "aws_cdk.aws_deadline"
            }
          }
        },
        "aws-cdk-lib.aws_detective": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Detective"
            },
            "java": {
              "package": "software.amazon.awscdk.services.detective"
            },
            "python": {
              "module": "aws_cdk.aws_detective"
            }
          }
        },
        "aws-cdk-lib.aws_devicefarm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DeviceFarm"
            },
            "java": {
              "package": "software.amazon.awscdk.services.devicefarm"
            },
            "python": {
              "module": "aws_cdk.aws_devicefarm"
            }
          }
        },
        "aws-cdk-lib.aws_devopsguru": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DevOpsGuru"
            },
            "java": {
              "package": "software.amazon.awscdk.services.devopsguru"
            },
            "python": {
              "module": "aws_cdk.aws_devopsguru"
            }
          }
        },
        "aws-cdk-lib.aws_directoryservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DirectoryService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.directoryservice"
            },
            "python": {
              "module": "aws_cdk.aws_directoryservice"
            }
          }
        },
        "aws-cdk-lib.aws_dlm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DLM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dlm"
            },
            "python": {
              "module": "aws_cdk.aws_dlm"
            }
          }
        },
        "aws-cdk-lib.aws_dms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dms"
            },
            "python": {
              "module": "aws_cdk.aws_dms"
            }
          }
        },
        "aws-cdk-lib.aws_docdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DocDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.docdb"
            },
            "python": {
              "module": "aws_cdk.aws_docdb"
            }
          }
        },
        "aws-cdk-lib.aws_docdbelastic": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DocDBElastic"
            },
            "java": {
              "package": "software.amazon.awscdk.services.docdbelastic"
            },
            "python": {
              "module": "aws_cdk.aws_docdbelastic"
            }
          }
        },
        "aws-cdk-lib.aws_dsql": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.DSQL"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dsql"
            },
            "python": {
              "module": "aws_cdk.aws_dsql"
            }
          }
        },
        "aws-cdk-lib.aws_dynamodb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DynamoDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dynamodb"
            },
            "python": {
              "module": "aws_cdk.aws_dynamodb"
            }
          }
        },
        "aws-cdk-lib.aws_ec2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EC2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ec2"
            },
            "python": {
              "module": "aws_cdk.aws_ec2"
            }
          }
        },
        "aws-cdk-lib.aws_ecr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr"
            },
            "python": {
              "module": "aws_cdk.aws_ecr"
            }
          }
        },
        "aws-cdk-lib.aws_ecr_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ecr.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr.assets"
            },
            "python": {
              "module": "aws_cdk.aws_ecr_assets"
            }
          }
        },
        "aws-cdk-lib.aws_ecs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs"
            },
            "python": {
              "module": "aws_cdk.aws_ecs"
            }
          }
        },
        "aws-cdk-lib.aws_ecs_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_ecs_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_efs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EFS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.efs"
            },
            "python": {
              "module": "aws_cdk.aws_efs"
            }
          }
        },
        "aws-cdk-lib.aws_eks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EKS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eks"
            },
            "python": {
              "module": "aws_cdk.aws_eks"
            }
          }
        },
        "aws-cdk-lib.aws_elasticache": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElastiCache"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticache"
            },
            "python": {
              "module": "aws_cdk.aws_elasticache"
            }
          }
        },
        "aws-cdk-lib.aws_elasticbeanstalk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticBeanstalk"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticbeanstalk"
            },
            "python": {
              "module": "aws_cdk.aws_elasticbeanstalk"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancing": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancing"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancing"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.actions"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_actions"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.targets"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_targets"
            }
          }
        },
        "aws-cdk-lib.aws_elasticsearch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Elasticsearch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticsearch"
            },
            "python": {
              "module": "aws_cdk.aws_elasticsearch"
            }
          }
        },
        "aws-cdk-lib.aws_emr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emr"
            },
            "python": {
              "module": "aws_cdk.aws_emr"
            }
          }
        },
        "aws-cdk-lib.aws_emrcontainers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMRContainers"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emrcontainers"
            },
            "python": {
              "module": "aws_cdk.aws_emrcontainers"
            }
          }
        },
        "aws-cdk-lib.aws_emrserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMRServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emrserverless"
            },
            "python": {
              "module": "aws_cdk.aws_emrserverless"
            }
          }
        },
        "aws-cdk-lib.aws_entityresolution": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.EntityResolution"
            },
            "java": {
              "package": "software.amazon.awscdk.services.entityresolution"
            },
            "python": {
              "module": "aws_cdk.aws_entityresolution"
            }
          }
        },
        "aws-cdk-lib.aws_events": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events"
            },
            "python": {
              "module": "aws_cdk.aws_events"
            }
          }
        },
        "aws-cdk-lib.aws_events_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events.targets"
            },
            "python": {
              "module": "aws_cdk.aws_events_targets"
            }
          }
        },
        "aws-cdk-lib.aws_eventschemas": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EventSchemas"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eventschemas"
            },
            "python": {
              "module": "aws_cdk.aws_eventschemas"
            }
          }
        },
        "aws-cdk-lib.aws_evidently": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Evidently"
            },
            "java": {
              "package": "software.amazon.awscdk.services.evidently"
            },
            "python": {
              "module": "aws_cdk.aws_evidently"
            }
          }
        },
        "aws-cdk-lib.aws_evs": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.EVS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.evs"
            },
            "python": {
              "module": "aws_cdk.aws_evs"
            }
          }
        },
        "aws-cdk-lib.aws_finspace": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FinSpace"
            },
            "java": {
              "package": "software.amazon.awscdk.services.finspace"
            },
            "python": {
              "module": "aws_cdk.aws_finspace"
            }
          }
        },
        "aws-cdk-lib.aws_fis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FIS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fis"
            },
            "python": {
              "module": "aws_cdk.aws_fis"
            }
          }
        },
        "aws-cdk-lib.aws_fms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fms"
            },
            "python": {
              "module": "aws_cdk.aws_fms"
            }
          }
        },
        "aws-cdk-lib.aws_forecast": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Forecast"
            },
            "java": {
              "package": "software.amazon.awscdk.services.forecast"
            },
            "python": {
              "module": "aws_cdk.aws_forecast"
            }
          }
        },
        "aws-cdk-lib.aws_frauddetector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FraudDetector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.frauddetector"
            },
            "python": {
              "module": "aws_cdk.aws_frauddetector"
            }
          }
        },
        "aws-cdk-lib.aws_fsx": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FSx"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fsx"
            },
            "python": {
              "module": "aws_cdk.aws_fsx"
            }
          }
        },
        "aws-cdk-lib.aws_gamelift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GameLift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.gamelift"
            },
            "python": {
              "module": "aws_cdk.aws_gamelift"
            }
          }
        },
        "aws-cdk-lib.aws_gameliftstreams": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.GameLiftStreams"
            },
            "java": {
              "package": "software.amazon.awscdk.services.gameliftstreams"
            },
            "python": {
              "module": "aws_cdk.aws_gameliftstreams"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator_endpoints": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator.Endpoints"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator.endpoints"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator_endpoints"
            }
          }
        },
        "aws-cdk-lib.aws_glue": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Glue"
            },
            "java": {
              "package": "software.amazon.awscdk.services.glue"
            },
            "python": {
              "module": "aws_cdk.aws_glue"
            }
          }
        },
        "aws-cdk-lib.aws_grafana": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Grafana"
            },
            "java": {
              "package": "software.amazon.awscdk.services.grafana"
            },
            "python": {
              "module": "aws_cdk.aws_grafana"
            }
          }
        },
        "aws-cdk-lib.aws_greengrass": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Greengrass"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrass"
            },
            "python": {
              "module": "aws_cdk.aws_greengrass"
            }
          }
        },
        "aws-cdk-lib.aws_greengrassv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GreengrassV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrassv2"
            },
            "python": {
              "module": "aws_cdk.aws_greengrassv2"
            }
          }
        },
        "aws-cdk-lib.aws_groundstation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GroundStation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.groundstation"
            },
            "python": {
              "module": "aws_cdk.aws_groundstation"
            }
          }
        },
        "aws-cdk-lib.aws_guardduty": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GuardDuty"
            },
            "java": {
              "package": "software.amazon.awscdk.services.guardduty"
            },
            "python": {
              "module": "aws_cdk.aws_guardduty"
            }
          }
        },
        "aws-cdk-lib.aws_healthimaging": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.HealthImaging"
            },
            "java": {
              "package": "software.amazon.awscdk.services.healthimaging"
            },
            "python": {
              "module": "aws_cdk.aws_healthimaging"
            }
          }
        },
        "aws-cdk-lib.aws_healthlake": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.HealthLake"
            },
            "java": {
              "package": "software.amazon.awscdk.services.healthlake"
            },
            "python": {
              "module": "aws_cdk.aws_healthlake"
            }
          }
        },
        "aws-cdk-lib.aws_iam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iam"
            },
            "python": {
              "module": "aws_cdk.aws_iam"
            }
          }
        },
        "aws-cdk-lib.aws_identitystore": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IdentityStore"
            },
            "java": {
              "package": "software.amazon.awscdk.services.identitystore"
            },
            "python": {
              "module": "aws_cdk.aws_identitystore"
            }
          }
        },
        "aws-cdk-lib.aws_imagebuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ImageBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.imagebuilder"
            },
            "python": {
              "module": "aws_cdk.aws_imagebuilder"
            }
          }
        },
        "aws-cdk-lib.aws_inspector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Inspector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspector"
            },
            "python": {
              "module": "aws_cdk.aws_inspector"
            }
          }
        },
        "aws-cdk-lib.aws_inspectorv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.InspectorV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspectorv2"
            },
            "python": {
              "module": "aws_cdk.aws_inspectorv2"
            }
          }
        },
        "aws-cdk-lib.aws_internetmonitor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.InternetMonitor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.internetmonitor"
            },
            "python": {
              "module": "aws_cdk.aws_internetmonitor"
            }
          }
        },
        "aws-cdk-lib.aws_invoicing": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Invoicing"
            },
            "java": {
              "package": "software.amazon.awscdk.services.invoicing"
            },
            "python": {
              "module": "aws_cdk.aws_invoicing"
            }
          }
        },
        "aws-cdk-lib.aws_iot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoT"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iot"
            },
            "python": {
              "module": "aws_cdk.aws_iot"
            }
          }
        },
        "aws-cdk-lib.aws_iotanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_iotanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_iotcoredeviceadvisor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTCoreDeviceAdvisor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotcoredeviceadvisor"
            },
            "python": {
              "module": "aws_cdk.aws_iotcoredeviceadvisor"
            }
          }
        },
        "aws-cdk-lib.aws_iotevents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTEvents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotevents"
            },
            "python": {
              "module": "aws_cdk.aws_iotevents"
            }
          }
        },
        "aws-cdk-lib.aws_iotfleethub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTFleetHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotfleethub"
            },
            "python": {
              "module": "aws_cdk.aws_iotfleethub"
            }
          }
        },
        "aws-cdk-lib.aws_iotfleetwise": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTFleetWise"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotfleetwise"
            },
            "python": {
              "module": "aws_cdk.aws_iotfleetwise"
            }
          }
        },
        "aws-cdk-lib.aws_iotsitewise": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTSiteWise"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotsitewise"
            },
            "python": {
              "module": "aws_cdk.aws_iotsitewise"
            }
          }
        },
        "aws-cdk-lib.aws_iotthingsgraph": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTThingsGraph"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotthingsgraph"
            },
            "python": {
              "module": "aws_cdk.aws_iotthingsgraph"
            }
          }
        },
        "aws-cdk-lib.aws_iottwinmaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTTwinMaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iottwinmaker"
            },
            "python": {
              "module": "aws_cdk.aws_iottwinmaker"
            }
          }
        },
        "aws-cdk-lib.aws_iotwireless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTWireless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotwireless"
            },
            "python": {
              "module": "aws_cdk.aws_iotwireless"
            }
          }
        },
        "aws-cdk-lib.aws_ivs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ivs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ivs"
            },
            "python": {
              "module": "aws_cdk.aws_ivs"
            }
          }
        },
        "aws-cdk-lib.aws_ivschat": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IVSChat"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ivschat"
            },
            "python": {
              "module": "aws_cdk.aws_ivschat"
            }
          }
        },
        "aws-cdk-lib.aws_kafkaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KafkaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kafkaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_kafkaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_kendra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kendra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kendra"
            },
            "python": {
              "module": "aws_cdk.aws_kendra"
            }
          }
        },
        "aws-cdk-lib.aws_kendraranking": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KendraRanking"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kendraranking"
            },
            "python": {
              "module": "aws_cdk.aws_kendraranking"
            }
          }
        },
        "aws-cdk-lib.aws_kinesis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kinesis"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesis"
            },
            "python": {
              "module": "aws_cdk.aws_kinesis"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalyticsv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalyticsV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalyticsv2"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalyticsv2"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisfirehose": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisFirehose"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisfirehose"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisfirehose"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisvideo": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisVideo"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisvideo"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisvideo"
            }
          }
        },
        "aws-cdk-lib.aws_kms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kms"
            },
            "python": {
              "module": "aws_cdk.aws_kms"
            }
          }
        },
        "aws-cdk-lib.aws_lakeformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LakeFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lakeformation"
            },
            "python": {
              "module": "aws_cdk.aws_lakeformation"
            }
          }
        },
        "aws-cdk-lib.aws_lambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda"
            },
            "python": {
              "module": "aws_cdk.aws_lambda"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_event_sources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.EventSources"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.eventsources"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_event_sources"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_nodejs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Nodejs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.nodejs"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_nodejs"
            }
          }
        },
        "aws-cdk-lib.aws_launchwizard": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.LaunchWizard"
            },
            "java": {
              "package": "software.amazon.awscdk.services.launchwizard"
            },
            "python": {
              "module": "aws_cdk.aws_launchwizard"
            }
          }
        },
        "aws-cdk-lib.aws_lex": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lex"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lex"
            },
            "python": {
              "module": "aws_cdk.aws_lex"
            }
          }
        },
        "aws-cdk-lib.aws_licensemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LicenseManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.licensemanager"
            },
            "python": {
              "module": "aws_cdk.aws_licensemanager"
            }
          }
        },
        "aws-cdk-lib.aws_lightsail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lightsail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lightsail"
            },
            "python": {
              "module": "aws_cdk.aws_lightsail"
            }
          }
        },
        "aws-cdk-lib.aws_location": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Location"
            },
            "java": {
              "package": "software.amazon.awscdk.services.location"
            },
            "python": {
              "module": "aws_cdk.aws_location"
            }
          }
        },
        "aws-cdk-lib.aws_logs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs"
            },
            "python": {
              "module": "aws_cdk.aws_logs"
            }
          }
        },
        "aws-cdk-lib.aws_logs_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_logs_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutequipment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutEquipment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutequipment"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutequipment"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutmetrics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutMetrics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutmetrics"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutmetrics"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutvision": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutVision"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutvision"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutvision"
            }
          }
        },
        "aws-cdk-lib.aws_m2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.M2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.m2"
            },
            "python": {
              "module": "aws_cdk.aws_m2"
            }
          }
        },
        "aws-cdk-lib.aws_macie": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Macie"
            },
            "java": {
              "package": "software.amazon.awscdk.services.macie"
            },
            "python": {
              "module": "aws_cdk.aws_macie"
            }
          }
        },
        "aws-cdk-lib.aws_managedblockchain": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ManagedBlockchain"
            },
            "java": {
              "package": "software.amazon.awscdk.services.managedblockchain"
            },
            "python": {
              "module": "aws_cdk.aws_managedblockchain"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconvert": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConvert"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconvert"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconvert"
            }
          }
        },
        "aws-cdk-lib.aws_medialive": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaLive"
            },
            "java": {
              "package": "software.amazon.awscdk.services.medialive"
            },
            "python": {
              "module": "aws_cdk.aws_medialive"
            }
          }
        },
        "aws-cdk-lib.aws_mediapackage": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaPackage"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediapackage"
            },
            "python": {
              "module": "aws_cdk.aws_mediapackage"
            }
          }
        },
        "aws-cdk-lib.aws_mediapackagev2": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.MediaPackageV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediapackagev2"
            },
            "python": {
              "module": "aws_cdk.aws_mediapackagev2"
            }
          }
        },
        "aws-cdk-lib.aws_mediastore": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaStore"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediastore"
            },
            "python": {
              "module": "aws_cdk.aws_mediastore"
            }
          }
        },
        "aws-cdk-lib.aws_mediatailor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaTailor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediatailor"
            },
            "python": {
              "module": "aws_cdk.aws_mediatailor"
            }
          }
        },
        "aws-cdk-lib.aws_memorydb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MemoryDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.memorydb"
            },
            "python": {
              "module": "aws_cdk.aws_memorydb"
            }
          }
        },
        "aws-cdk-lib.aws_msk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MSK"
            },
            "java": {
              "package": "software.amazon.awscdk.services.msk"
            },
            "python": {
              "module": "aws_cdk.aws_msk"
            }
          }
        },
        "aws-cdk-lib.aws_mwaa": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MWAA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mwaa"
            },
            "python": {
              "module": "aws_cdk.aws_mwaa"
            }
          }
        },
        "aws-cdk-lib.aws_neptune": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Neptune"
            },
            "java": {
              "package": "software.amazon.awscdk.services.neptune"
            },
            "python": {
              "module": "aws_cdk.aws_neptune"
            }
          }
        },
        "aws-cdk-lib.aws_neptunegraph": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.NeptuneGraph"
            },
            "java": {
              "package": "software.amazon.awscdk.services.neptunegraph"
            },
            "python": {
              "module": "aws_cdk.aws_neptunegraph"
            }
          }
        },
        "aws-cdk-lib.aws_networkfirewall": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkFirewall"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkfirewall"
            },
            "python": {
              "module": "aws_cdk.aws_networkfirewall"
            }
          }
        },
        "aws-cdk-lib.aws_networkmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkmanager"
            },
            "python": {
              "module": "aws_cdk.aws_networkmanager"
            }
          }
        },
        "aws-cdk-lib.aws_nimblestudio": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NimbleStudio"
            },
            "java": {
              "package": "software.amazon.awscdk.services.nimblestudio"
            },
            "python": {
              "module": "aws_cdk.aws_nimblestudio"
            }
          }
        },
        "aws-cdk-lib.aws_notifications": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Notifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.notifications"
            },
            "python": {
              "module": "aws_cdk.aws_notifications"
            }
          }
        },
        "aws-cdk-lib.aws_notificationscontacts": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.NotificationsContacts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.notificationscontacts"
            },
            "python": {
              "module": "aws_cdk.aws_notificationscontacts"
            }
          }
        },
        "aws-cdk-lib.aws_oam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Oam"
            },
            "java": {
              "package": "software.amazon.awscdk.services.oam"
            },
            "python": {
              "module": "aws_cdk.aws_oam"
            }
          }
        },
        "aws-cdk-lib.aws_omics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Omics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.omics"
            },
            "python": {
              "module": "aws_cdk.aws_omics"
            }
          }
        },
        "aws-cdk-lib.aws_opensearchserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpenSearchServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opensearchserverless"
            },
            "python": {
              "module": "aws_cdk.aws_opensearchserverless"
            }
          }
        },
        "aws-cdk-lib.aws_opensearchservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpenSearchService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opensearchservice"
            },
            "python": {
              "module": "aws_cdk.aws_opensearchservice"
            }
          }
        },
        "aws-cdk-lib.aws_opsworks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworks"
            },
            "python": {
              "module": "aws_cdk.aws_opsworks"
            }
          }
        },
        "aws-cdk-lib.aws_opsworkscm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorksCM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworkscm"
            },
            "python": {
              "module": "aws_cdk.aws_opsworkscm"
            }
          }
        },
        "aws-cdk-lib.aws_organizations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Organizations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.organizations"
            },
            "python": {
              "module": "aws_cdk.aws_organizations"
            }
          }
        },
        "aws-cdk-lib.aws_osis": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.OSIS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.osis"
            },
            "python": {
              "module": "aws_cdk.aws_osis"
            }
          }
        },
        "aws-cdk-lib.aws_panorama": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Panorama"
            },
            "java": {
              "package": "software.amazon.awscdk.services.panorama"
            },
            "python": {
              "module": "aws_cdk.aws_panorama"
            }
          }
        },
        "aws-cdk-lib.aws_paymentcryptography": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.PaymentCryptography"
            },
            "java": {
              "package": "software.amazon.awscdk.services.paymentcryptography"
            },
            "python": {
              "module": "aws_cdk.aws_paymentcryptography"
            }
          }
        },
        "aws-cdk-lib.aws_pcaconnectorad": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.PCAConnectorAD"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pcaconnectorad"
            },
            "python": {
              "module": "aws_cdk.aws_pcaconnectorad"
            }
          }
        },
        "aws-cdk-lib.aws_pcaconnectorscep": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.PCAConnectorSCEP"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pcaconnectorscep"
            },
            "python": {
              "module": "aws_cdk.aws_pcaconnectorscep"
            }
          }
        },
        "aws-cdk-lib.aws_pcs": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.PCS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pcs"
            },
            "python": {
              "module": "aws_cdk.aws_pcs"
            }
          }
        },
        "aws-cdk-lib.aws_personalize": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Personalize"
            },
            "java": {
              "package": "software.amazon.awscdk.services.personalize"
            },
            "python": {
              "module": "aws_cdk.aws_personalize"
            }
          }
        },
        "aws-cdk-lib.aws_pinpoint": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Pinpoint"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpoint"
            },
            "python": {
              "module": "aws_cdk.aws_pinpoint"
            }
          }
        },
        "aws-cdk-lib.aws_pinpointemail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.PinpointEmail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpointemail"
            },
            "python": {
              "module": "aws_cdk.aws_pinpointemail"
            }
          }
        },
        "aws-cdk-lib.aws_pipes": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Pipes"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pipes"
            },
            "python": {
              "module": "aws_cdk.aws_pipes"
            }
          }
        },
        "aws-cdk-lib.aws_proton": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Proton"
            },
            "java": {
              "package": "software.amazon.awscdk.services.proton"
            },
            "python": {
              "module": "aws_cdk.aws_proton"
            }
          }
        },
        "aws-cdk-lib.aws_qbusiness": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.QBusiness"
            },
            "java": {
              "package": "software.amazon.awscdk.services.qbusiness"
            },
            "python": {
              "module": "aws_cdk.aws_qbusiness"
            }
          }
        },
        "aws-cdk-lib.aws_qldb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QLDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.qldb"
            },
            "python": {
              "module": "aws_cdk.aws_qldb"
            }
          }
        },
        "aws-cdk-lib.aws_quicksight": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QuickSight"
            },
            "java": {
              "package": "software.amazon.awscdk.services.quicksight"
            },
            "python": {
              "module": "aws_cdk.aws_quicksight"
            }
          }
        },
        "aws-cdk-lib.aws_ram": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ram"
            },
            "python": {
              "module": "aws_cdk.aws_ram"
            }
          }
        },
        "aws-cdk-lib.aws_rbin": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Rbin"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rbin"
            },
            "python": {
              "module": "aws_cdk.aws_rbin"
            }
          }
        },
        "aws-cdk-lib.aws_rds": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RDS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rds"
            },
            "python": {
              "module": "aws_cdk.aws_rds"
            }
          }
        },
        "aws-cdk-lib.aws_redshift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Redshift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.redshift"
            },
            "python": {
              "module": "aws_cdk.aws_redshift"
            }
          }
        },
        "aws-cdk-lib.aws_redshiftserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RedshiftServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.redshiftserverless"
            },
            "python": {
              "module": "aws_cdk.aws_redshiftserverless"
            }
          }
        },
        "aws-cdk-lib.aws_refactorspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RefactorSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.refactorspaces"
            },
            "python": {
              "module": "aws_cdk.aws_refactorspaces"
            }
          }
        },
        "aws-cdk-lib.aws_rekognition": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Rekognition"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rekognition"
            },
            "python": {
              "module": "aws_cdk.aws_rekognition"
            }
          }
        },
        "aws-cdk-lib.aws_resiliencehub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResilienceHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resiliencehub"
            },
            "python": {
              "module": "aws_cdk.aws_resiliencehub"
            }
          }
        },
        "aws-cdk-lib.aws_resourceexplorer2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResourceExplorer2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resourceexplorer2"
            },
            "python": {
              "module": "aws_cdk.aws_resourceexplorer2"
            }
          }
        },
        "aws-cdk-lib.aws_resourcegroups": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResourceGroups"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resourcegroups"
            },
            "python": {
              "module": "aws_cdk.aws_resourcegroups"
            }
          }
        },
        "aws-cdk-lib.aws_robomaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RoboMaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.robomaker"
            },
            "python": {
              "module": "aws_cdk.aws_robomaker"
            }
          }
        },
        "aws-cdk-lib.aws_rolesanywhere": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RolesAnywhere"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rolesanywhere"
            },
            "python": {
              "module": "aws_cdk.aws_rolesanywhere"
            }
          }
        },
        "aws-cdk-lib.aws_route53": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53"
            },
            "python": {
              "module": "aws_cdk.aws_route53"
            }
          }
        },
        "aws-cdk-lib.aws_route53_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_route53_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_route53_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.targets"
            },
            "python": {
              "module": "aws_cdk.aws_route53_targets"
            }
          }
        },
        "aws-cdk-lib.aws_route53profiles": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Route53Profiles"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53profiles"
            },
            "python": {
              "module": "aws_cdk.aws_route53profiles"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoverycontrol": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryControl"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoverycontrol"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoverycontrol"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoveryreadiness": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryReadiness"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoveryreadiness"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoveryreadiness"
            }
          }
        },
        "aws-cdk-lib.aws_route53resolver": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53Resolver"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53resolver"
            },
            "python": {
              "module": "aws_cdk.aws_route53resolver"
            }
          }
        },
        "aws-cdk-lib.aws_rum": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RUM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rum"
            },
            "python": {
              "module": "aws_cdk.aws_rum"
            }
          }
        },
        "aws-cdk-lib.aws_s3": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3"
            },
            "python": {
              "module": "aws_cdk.aws_s3"
            }
          }
        },
        "aws-cdk-lib.aws_s3_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.assets"
            },
            "python": {
              "module": "aws_cdk.aws_s3_assets"
            }
          }
        },
        "aws-cdk-lib.aws_s3_deployment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Deployment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.deployment"
            },
            "python": {
              "module": "aws_cdk.aws_s3_deployment"
            }
          }
        },
        "aws-cdk-lib.aws_s3_notifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Notifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.notifications"
            },
            "python": {
              "module": "aws_cdk.aws_s3_notifications"
            }
          }
        },
        "aws-cdk-lib.aws_s3express": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.S3Express"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3express"
            },
            "python": {
              "module": "aws_cdk.aws_s3express"
            }
          }
        },
        "aws-cdk-lib.aws_s3objectlambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3ObjectLambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3objectlambda"
            },
            "python": {
              "module": "aws_cdk.aws_s3objectlambda"
            }
          }
        },
        "aws-cdk-lib.aws_s3outposts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3Outposts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3outposts"
            },
            "python": {
              "module": "aws_cdk.aws_s3outposts"
            }
          }
        },
        "aws-cdk-lib.aws_s3tables": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.S3Tables"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3tables"
            },
            "python": {
              "module": "aws_cdk.aws_s3tables"
            }
          }
        },
        "aws-cdk-lib.aws_sagemaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Sagemaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sagemaker"
            },
            "python": {
              "module": "aws_cdk.aws_sagemaker"
            }
          }
        },
        "aws-cdk-lib.aws_sam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sam"
            },
            "python": {
              "module": "aws_cdk.aws_sam"
            }
          }
        },
        "aws-cdk-lib.aws_scheduler": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Scheduler"
            },
            "java": {
              "package": "software.amazon.awscdk.services.scheduler"
            },
            "python": {
              "module": "aws_cdk.aws_scheduler"
            }
          }
        },
        "aws-cdk-lib.aws_scheduler_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Scheduler.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.scheduler.targets"
            },
            "python": {
              "module": "aws_cdk.aws_scheduler_targets"
            }
          }
        },
        "aws-cdk-lib.aws_sdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sdb"
            },
            "python": {
              "module": "aws_cdk.aws_sdb"
            }
          }
        },
        "aws-cdk-lib.aws_secretsmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecretsManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.secretsmanager"
            },
            "python": {
              "module": "aws_cdk.aws_secretsmanager"
            }
          }
        },
        "aws-cdk-lib.aws_securityhub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecurityHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.securityhub"
            },
            "python": {
              "module": "aws_cdk.aws_securityhub"
            }
          }
        },
        "aws-cdk-lib.aws_securitylake": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.SecurityLake"
            },
            "java": {
              "package": "software.amazon.awscdk.services.securitylake"
            },
            "python": {
              "module": "aws_cdk.aws_securitylake"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalog": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalog"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalog"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalog"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalogappregistry": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalogappregistry"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalogappregistry"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalogappregistry"
            }
          }
        },
        "aws-cdk-lib.aws_servicediscovery": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ServiceDiscovery"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicediscovery"
            },
            "python": {
              "module": "aws_cdk.aws_servicediscovery"
            }
          }
        },
        "aws-cdk-lib.aws_ses": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses"
            },
            "python": {
              "module": "aws_cdk.aws_ses"
            }
          }
        },
        "aws-cdk-lib.aws_ses_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses.actions"
            },
            "python": {
              "module": "aws_cdk.aws_ses_actions"
            }
          }
        },
        "aws-cdk-lib.aws_shield": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Shield"
            },
            "java": {
              "package": "software.amazon.awscdk.services.shield"
            },
            "python": {
              "module": "aws_cdk.aws_shield"
            }
          }
        },
        "aws-cdk-lib.aws_signer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Signer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.signer"
            },
            "python": {
              "module": "aws_cdk.aws_signer"
            }
          }
        },
        "aws-cdk-lib.aws_simspaceweaver": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SimSpaceWeaver"
            },
            "java": {
              "package": "software.amazon.awscdk.services.simspaceweaver"
            },
            "python": {
              "module": "aws_cdk.aws_simspaceweaver"
            }
          }
        },
        "aws-cdk-lib.aws_sns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns"
            },
            "python": {
              "module": "aws_cdk.aws_sns"
            }
          }
        },
        "aws-cdk-lib.aws_sns_subscriptions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS.Subscriptions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns.subscriptions"
            },
            "python": {
              "module": "aws_cdk.aws_sns_subscriptions"
            }
          }
        },
        "aws-cdk-lib.aws_sqs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SQS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sqs"
            },
            "python": {
              "module": "aws_cdk.aws_sqs"
            }
          }
        },
        "aws-cdk-lib.aws_ssm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssm"
            },
            "python": {
              "module": "aws_cdk.aws_ssm"
            }
          }
        },
        "aws-cdk-lib.aws_ssmcontacts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMContacts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmcontacts"
            },
            "python": {
              "module": "aws_cdk.aws_ssmcontacts"
            }
          }
        },
        "aws-cdk-lib.aws_ssmguiconnect": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.SSMGuiConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmguiconnect"
            },
            "python": {
              "module": "aws_cdk.aws_ssmguiconnect"
            }
          }
        },
        "aws-cdk-lib.aws_ssmincidents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMIncidents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmincidents"
            },
            "python": {
              "module": "aws_cdk.aws_ssmincidents"
            }
          }
        },
        "aws-cdk-lib.aws_ssmquicksetup": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.SSMQuickSetup"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmquicksetup"
            },
            "python": {
              "module": "aws_cdk.aws_ssmquicksetup"
            }
          }
        },
        "aws-cdk-lib.aws_sso": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSO"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sso"
            },
            "python": {
              "module": "aws_cdk.aws_sso"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions_tasks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions.Tasks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions.tasks"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions_tasks"
            }
          }
        },
        "aws-cdk-lib.aws_supportapp": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SupportApp"
            },
            "java": {
              "package": "software.amazon.awscdk.services.supportapp"
            },
            "python": {
              "module": "aws_cdk.aws_supportapp"
            }
          }
        },
        "aws-cdk-lib.aws_synthetics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Synthetics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.synthetics"
            },
            "python": {
              "module": "aws_cdk.aws_synthetics"
            }
          }
        },
        "aws-cdk-lib.aws_systemsmanagersap": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SystemsManagerSAP"
            },
            "java": {
              "package": "software.amazon.awscdk.services.systemsmanagersap"
            },
            "python": {
              "module": "aws_cdk.aws_systemsmanagersap"
            }
          }
        },
        "aws-cdk-lib.aws_timestream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Timestream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.timestream"
            },
            "python": {
              "module": "aws_cdk.aws_timestream"
            }
          }
        },
        "aws-cdk-lib.aws_transfer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Transfer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.transfer"
            },
            "python": {
              "module": "aws_cdk.aws_transfer"
            }
          }
        },
        "aws-cdk-lib.aws_verifiedpermissions": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.VerifiedPermissions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.verifiedpermissions"
            },
            "python": {
              "module": "aws_cdk.aws_verifiedpermissions"
            }
          }
        },
        "aws-cdk-lib.aws_voiceid": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.VoiceID"
            },
            "java": {
              "package": "software.amazon.awscdk.services.voiceid"
            },
            "python": {
              "module": "aws_cdk.aws_voiceid"
            }
          }
        },
        "aws-cdk-lib.aws_vpclattice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.VpcLattice"
            },
            "java": {
              "package": "software.amazon.awscdk.services.vpclattice"
            },
            "python": {
              "module": "aws_cdk.aws_vpclattice"
            }
          }
        },
        "aws-cdk-lib.aws_waf": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAF"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf"
            },
            "python": {
              "module": "aws_cdk.aws_waf"
            }
          }
        },
        "aws-cdk-lib.aws_wafregional": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFRegional"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf.regional"
            },
            "python": {
              "module": "aws_cdk.aws_wafregional"
            }
          }
        },
        "aws-cdk-lib.aws_wafv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wafv2"
            },
            "python": {
              "module": "aws_cdk.aws_wafv2"
            }
          }
        },
        "aws-cdk-lib.aws_wisdom": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Wisdom"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wisdom"
            },
            "python": {
              "module": "aws_cdk.aws_wisdom"
            }
          }
        },
        "aws-cdk-lib.aws_workspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WorkSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspaces"
            },
            "python": {
              "module": "aws_cdk.aws_workspaces"
            }
          }
        },
        "aws-cdk-lib.aws_workspacesthinclient": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.WorkSpacesThinClient"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspacesthinclient"
            },
            "python": {
              "module": "aws_cdk.aws_workspacesthinclient"
            }
          }
        },
        "aws-cdk-lib.aws_workspacesweb": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.WorkSpacesWeb"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspacesweb"
            },
            "python": {
              "module": "aws_cdk.aws_workspacesweb"
            }
          }
        },
        "aws-cdk-lib.aws_xray": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.XRay"
            },
            "java": {
              "package": "software.amazon.awscdk.services.xray"
            },
            "python": {
              "module": "aws_cdk.aws_xray"
            }
          }
        },
        "aws-cdk-lib.cloud_assembly_schema": {},
        "aws-cdk-lib.cloudformation_include": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CloudFormation.Include"
            },
            "java": {
              "package": "software.amazon.awscdk.cloudformation.include"
            },
            "python": {
              "module": "aws_cdk.cloudformation_include"
            }
          }
        },
        "aws-cdk-lib.custom_resources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CustomResources"
            },
            "java": {
              "package": "software.amazon.awscdk.customresources"
            },
            "python": {
              "module": "aws_cdk.custom_resources"
            }
          }
        },
        "aws-cdk-lib.cx_api": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CXAPI"
            },
            "java": {
              "package": "software.amazon.awscdk.cxapi"
            },
            "python": {
              "module": "aws_cdk.cx_api"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_awscli": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.AwsCli"
            },
            "java": {
              "package": "software.amazon.awscdk.lambdalayer.awscli"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_awscli"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_node_proxy_agent": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.NodeProxyAgent"
            },
            "java": {
              "package": "software.amazon.awscdk.lambda.layer.node.proxy.agent"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_node_proxy_agent"
            }
          }
        },
        "aws-cdk-lib.pipelines": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Pipelines"
            },
            "java": {
              "package": "software.amazon.awscdk.pipelines"
            },
            "python": {
              "module": "aws_cdk.pipelines"
            }
          }
        },
        "aws-cdk-lib.region_info": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.RegionInfo"
            },
            "java": {
              "package": "software.amazon.awscdk.regioninfo"
            },
            "python": {
              "module": "aws_cdk.region_info"
            }
          }
        },
        "aws-cdk-lib.triggers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Triggers"
            },
            "java": {
              "package": "software.amazon.awscdk.triggers"
            },
            "python": {
              "module": "aws_cdk.triggers"
            }
          }
        }
      },
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK.Lib"
        },
        "go": {
          "moduleName": "github.com/aws/aws-cdk-go",
          "packageName": "awscdk"
        },
        "java": {
          "maven": {
            "artifactId": "aws-cdk-lib",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "aws-cdk-lib"
        },
        "python": {
          "distName": "aws-cdk-lib",
          "module": "aws_cdk"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::Glue",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "5.7.18 (build 7d9997b)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "glue"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-glue-alpha",
  "readme": {
    "markdown": "# AWS Glue Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.\n\n## README\n\n[AWS Glue](https://aws.amazon.com/glue/) is a serverless data integration\nservice that makes it easier to discover, prepare, move, and integrate data\nfrom multiple sources for analytics, machine learning (ML), and application\ndevelopment.\n\nThe Glue L2 construct has convenience methods working backwards from common\nuse cases and sets required parameters to defaults that align with recommended\nbest practices for each job type. It also provides customers with a balance\nbetween flexibility via optional parameter overrides, and opinionated\ninterfaces that discouraging anti-patterns, resulting in reduced time to develop\nand deploy new resources.\n\n### References\n\n* [Glue Launch Announcement](https://aws.amazon.com/blogs/aws/launch-aws-glue-now-generally-available/)\n* [Glue Documentation](https://docs.aws.amazon.com/glue/index.html)\n* [Glue L1 (CloudFormation) Constructs](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/AWS_Glue.html)\n* Prior version of the [@aws-cdk/aws-glue-alpha module](https://github.com/aws/aws-cdk/blob/v2.51.1/packages/%40aws-cdk/aws-glue/README.md)\n\n## Create a Glue Job\n\nA Job encapsulates a script that connects to data sources, processes\nthem, and then writes output to a data target. There are four types of Glue\nJobs: Spark (ETL and Streaming), Python Shell, Ray, and Flex Jobs. Most\nof the required parameters for these jobs are common across all types,\nbut there are a few differences depending on the languages supported\nand features provided by each type. For all job types, the L2 defaults\nto AWS best practice recommendations, such as:\n\n* Use of Secrets Manager for Connection JDBC strings\n* Glue job autoscaling\n* Default parameter values for Glue job creation\n\nThis iteration of the L2 construct introduces breaking changes to\nthe existing glue-alpha-module, but these changes streamline the developer\nexperience, introduce new constants for defaults, and replacing synth-time\nvalidations with interface contracts for enforcement of the parameter combinations\nthat Glue supports. As an opinionated construct, the Glue L2 construct does\nnot allow developers to create resources that use non-current versions\nof Glue or deprecated language dependencies (e.g. deprecated versions of Python).\nAs always, L1s allow you to specify a wider range of parameters if you need\nor want to use alternative configurations.\n\nOptional and required parameters for each job are enforced via interface\nrather than validation; see [Glue's public documentation](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api.html)\nfor more granular details.\n\n### Spark Jobs\n\n1. **ETL Jobs**\n\nETL jobs support pySpark and Scala languages, for which there are separate but\nsimilar constructors. ETL jobs default to the G2 worker type, but you can\noverride this default with other supported worker type values (G1, G2, G4\nand G8). ETL jobs defaults to Glue version 4.0, which you can override to 3.0.\nThe following ETL features are enabled by default:\n`—enable-metrics, —enable-spark-ui, —enable-continuous-cloudwatch-log.`\nYou can find more details about version, worker type and other features in\n[Glue's public documentation](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-jobs-job.html).\n\nReference the pyspark-etl-jobs.test.ts and scalaspark-etl-jobs.test.ts unit tests\nfor examples of required-only and optional job parameters when creating these\ntypes of jobs.\n\nFor the sake of brevity, examples are shown using the pySpark job variety.\n\nExample with only required parameters:\n\n```ts\nimport * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PySparkEtlJob(stack, 'PySparkETLJob', {\n  role,\n  script,\n  jobName: 'PySparkETLJob',\n});\n```\n\nExample with optional override parameters:\n\n```ts\nimport * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PySparkEtlJob(stack, 'PySparkETLJob', {\n  jobName: 'PySparkETLJobCustomName',\n  description: 'This is a description',\n  role,\n  script,\n  glueVersion: glue.GlueVersion.V3_0,\n  continuousLogging: { enabled: false },\n  workerType: glue.WorkerType.G_2X,\n  maxConcurrentRuns: 100,\n  timeout: cdk.Duration.hours(2),\n  connections: [glue.Connection.fromConnectionName(stack, 'Connection', 'connectionName')],\n  securityConfiguration: glue.SecurityConfiguration.fromSecurityConfigurationName(stack, 'SecurityConfig', 'securityConfigName'),\n  tags: {\n    FirstTagName: 'FirstTagValue',\n    SecondTagName: 'SecondTagValue',\n    XTagName: 'XTagValue',\n  },\n  numberOfWorkers: 2,\n  maxRetries: 2,\n});\n```\n\n**Streaming Jobs**\n\nStreaming jobs are similar to ETL jobs, except that they perform ETL on data\nstreams using the Apache Spark Structured Streaming framework. Some Spark\njob features are not available to Streaming ETL jobs. They support Scala\nand pySpark languages. PySpark streaming jobs default Python 3.9,\nwhich you can override with any non-deprecated version of Python. It\ndefaults to the G2 worker type and Glue 4.0, both of which you can override.\nThe following best practice features are enabled by default:\n`—enable-metrics, —enable-spark-ui, —enable-continuous-cloudwatch-log`.\n\nReference the pyspark-streaming-jobs.test.ts and scalaspark-streaming-jobs.test.ts\nunit tests for examples of required-only and optional job parameters when creating\nthese types of jobs.\n\nExample with only required parameters:\n\n```ts\nimport * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PySparkStreamingJob(stack, 'ImportedJob', { role, script });\n```\n\nExample with optional override parameters:\n\n```ts\nimport * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PySparkStreamingJob(stack, 'PySparkStreamingJob', {\n  jobName: 'PySparkStreamingJobCustomName',\n  description: 'This is a description',\n  role,\n  script,\n  glueVersion: glue.GlueVersion.V3_0,\n  continuousLogging: { enabled: false },\n  workerType: glue.WorkerType.G_2X,\n  maxConcurrentRuns: 100,\n  timeout: cdk.Duration.hours(2),\n  connections: [glue.Connection.fromConnectionName(stack, 'Connection', 'connectionName')],\n  securityConfiguration: glue.SecurityConfiguration.fromSecurityConfigurationName(stack, 'SecurityConfig', 'securityConfigName'),\n  tags: {\n    FirstTagName: 'FirstTagValue',\n    SecondTagName: 'SecondTagValue',\n    XTagName: 'XTagValue',\n  },\n  numberOfWorkers: 2,\n  maxRetries: 2,\n});\n```\n\n**Flex Jobs**\n\nThe flexible execution class is appropriate for non-urgent jobs such as\npre-production jobs, testing, and one-time data loads. Flexible jobs default\nto Glue version 3.0 and worker type `G_2X`. The following best practice\nfeatures are enabled by default:\n`—enable-metrics, —enable-spark-ui, —enable-continuous-cloudwatch-log`\n\nReference the pyspark-flex-etl-jobs.test.ts and scalaspark-flex-etl-jobs.test.ts\nunit tests for examples of required-only and optional job parameters when creating\nthese types of jobs.\n\nExample with only required parameters:\n\n```ts\nimport * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PySparkFlexEtlJob(stack, 'ImportedJob', { role, script });\n```\n\nExample with optional override parameters:\n\n```ts\nimport * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PySparkEtlJob(stack, 'pySparkEtlJob', {\n  jobName: 'pySparkEtlJob',\n  description: 'This is a description',\n  role,\n  script,\n  glueVersion: glue.GlueVersion.V3_0,\n  continuousLogging: { enabled: false },\n  workerType: glue.WorkerType.G_2X,\n  maxConcurrentRuns: 100,\n  timeout: cdk.Duration.hours(2),\n  connections: [glue.Connection.fromConnectionName(stack, 'Connection', 'connectionName')],\n  securityConfiguration: glue.SecurityConfiguration.fromSecurityConfigurationName(stack, 'SecurityConfig', 'securityConfigName'),\n  tags: {\n    FirstTagName: 'FirstTagValue',\n    SecondTagName: 'SecondTagValue',\n    XTagName: 'XTagValue',\n  },\n  numberOfWorkers: 2,\n  maxRetries: 2,\n});\n```\n\n### Python Shell Jobs\n\nPython shell jobs support a Python version that depends on the AWS Glue\nversion you use. These can be used to schedule and run tasks that don't\nrequire an Apache Spark environment. Python shell jobs default to\nPython 3.9 and a MaxCapacity of `0.0625`. Python 3.9 supports pre-loaded\nanalytics libraries using the `library-set=analytics` flag, which is\nenabled by default.\n\nReference the pyspark-shell-job.test.ts unit tests for examples of\nrequired-only and optional job parameters when creating these types of jobs.\n\nExample with only required parameters:\n\n```ts\nimport * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PythonShellJob(stack, 'ImportedJob', { role, script });\n```\n\nExample with optional override parameters:\n\n```ts\nimport * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PythonShellJob(stack, 'PythonShellJob', {\n  jobName: 'PythonShellJobCustomName',\n  description: 'This is a description',\n  pythonVersion: glue.PythonVersion.TWO,\n  maxCapacity: glue.MaxCapacity.DPU_1,\n  role,\n  script,\n  glueVersion: glue.GlueVersion.V2_0,\n  continuousLogging: { enabled: false },\n  workerType: glue.WorkerType.G_2X,\n  maxConcurrentRuns: 100,\n  timeout: cdk.Duration.hours(2),\n  connections: [glue.Connection.fromConnectionName(stack, 'Connection', 'connectionName')],\n  securityConfiguration: glue.SecurityConfiguration.fromSecurityConfigurationName(stack, 'SecurityConfig', 'securityConfigName'),\n  tags: {\n    FirstTagName: 'FirstTagValue',\n    SecondTagName: 'SecondTagValue',\n    XTagName: 'XTagValue',\n  },\n  numberOfWorkers: 2,\n  maxRetries: 2,\n});\n```\n\n### Ray Jobs\n\nGlue Ray jobs use worker type Z.2X and Glue version 4.0. These are not\noverrideable since these are the only configuration that Glue Ray jobs\ncurrently support. The runtime defaults to Ray2.4 and min workers defaults to 3.\n\nReference the ray-job.test.ts unit tests for examples of required-only and\noptional job parameters when creating these types of jobs.\n\nExample with only required parameters:\n\n```ts\nimport * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.RayJob(stack, 'ImportedJob', { role, script });\n```\n\nExample with optional override parameters:\n\n```ts\nimport * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.RayJob(stack, 'ImportedJob', {\n  role,\n  script,\n  jobName: 'RayCustomJobName',\n  description: 'This is a description',\n  workerType: glue.WorkerType.Z_2X,\n  numberOfWorkers: 5,\n  runtime: glue.Runtime.RAY_TWO_FOUR,\n  maxRetries: 3,\n  maxConcurrentRuns: 100,\n  timeout: cdk.Duration.hours(2),\n  connections: [glue.Connection.fromConnectionName(stack, 'Connection', 'connectionName')],\n  securityConfiguration: glue.SecurityConfiguration.fromSecurityConfigurationName(stack, 'SecurityConfig', 'securityConfigName'),\n  tags: {\n    FirstTagName: 'FirstTagValue',\n    SecondTagName: 'SecondTagValue',\n    XTagName: 'XTagValue',\n  },\n});\n```\n\n### Enable Job Run Queuing\n\nAWS Glue job queuing monitors your account level quotas and limits. If quotas or limits are insufficient to start a Glue job run, AWS Glue will automatically queue the job and wait for limits to free up. Once limits become available, AWS Glue will retry the job run. Glue jobs will queue for limits like max concurrent job runs per account, max concurrent Data Processing Units (DPU), and resource unavailable due to IP address exhaustion in Amazon Virtual Private Cloud (Amazon VPC).\n\nEnable job run queuing by setting the `jobRunQueuingEnabled` property to `true`.\n\n```ts\nimport * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PySparkEtlJob(stack, 'PySparkETLJob', {\n  role,\n  script,\n  jobName: 'PySparkETLJob',\n  jobRunQueuingEnabled: true\n});\n```\n\n### Uploading scripts from the CDK app repository to S3\n\nSimilar to other L2 constructs, the Glue L2 automates uploading / updating\nscripts to S3 via an optional fromAsset parameter pointing to a script\nin the local file structure. You provide the existing S3 bucket and\npath to which you'd like the script to be uploaded.\n\nReference the unit tests for examples of repo and S3 code target examples.\n\n### Workflow Triggers\n\nYou can use Glue workflows to create and visualize complex\nextract, transform, and load (ETL) activities involving multiple crawlers,\njobs, and triggers. Standalone triggers are an anti-pattern, so you must\ncreate triggers from within a workflow using the L2 construct.\n\nWithin a workflow object, there are functions to create different\ntypes of triggers with actions and predicates. You then add those triggers\nto jobs.\n\nStartOnCreation defaults to true for all trigger types, but you can\noverride it if you prefer for your trigger not to start on creation.\n\nReference the workflow-triggers.test.ts unit tests for examples of creating\nworkflows and triggers.\n\n1. **On-Demand Triggers**\n\nOn-demand triggers can start glue jobs or crawlers. This construct provides\nconvenience functions to create on-demand crawler or job triggers. The constructor\ntakes an optional description parameter, but abstracts the requirement of an\nactions list using the job or crawler objects using conditional types.\n\n1. **Scheduled Triggers**\n\nYou can create scheduled triggers using cron expressions. This construct\nprovides daily, weekly, and monthly convenience functions,\nas well as a custom function that allows you to create your own\ncustom timing using the [existing event Schedule class](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_events.Schedule.html)\nwithout having to build your own cron expressions. The L2 extracts\nthe expression that Glue requires from the Schedule object. The constructor\ntakes an optional description and a list of jobs or crawlers as actions.\n\n#### **3. Notify  Event Triggers**\n\nThere are two types of notify event triggers: batching and non-batching.\nFor batching triggers, you must specify `BatchSize`. For non-batching\ntriggers, `BatchSize` defaults to 1. For both triggers, `BatchWindow`\ndefaults to 900 seconds, but you can override the window to align with\nyour workload's requirements.\n\n#### **4. Conditional Triggers**\n\nConditional triggers have a predicate and actions associated with them.\nThe trigger actions are executed when the predicateCondition is true.\n\n### Connection Properties\n\nA `Connection` allows Glue jobs, crawlers and development endpoints to access\ncertain types of data stores.\n\n***Secrets Management\n    **You must specify JDBC connection credentials in Secrets Manager and\n    provide the Secrets Manager Key name as a property to the job connection.\n\n* **Networking - the CDK determines the best fit subnet for Glue connection\nconfiguration\n    **The prior version of the glue-alpha-module requires the developer to\n    specify the subnet of the Connection when it’s defined. Now, you can still\n    specify the specific subnet you want to use, but are no longer required\n    to. You are only required to provide a VPC and either a public or private\n    subnet selection. Without a specific subnet provided, the L2 leverages the\n    existing [EC2 Subnet Selection](https://docs.aws.amazon.com/cdk/api/v2/python/aws_cdk.aws_ec2/SubnetSelection.html)\n    library to make the best choice selection for the subnet.\n\n```ts\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\nnew glue.Connection(this, 'MyConnection', {\n  type: glue.ConnectionType.NETWORK,\n  // The security groups granting AWS Glue inbound access to the data source within the VPC\n  securityGroups: [securityGroup],\n  // The VPC subnet which contains the data source\n  subnet,\n});\n```\n\nFor RDS `Connection` by JDBC, it is recommended to manage credentials using AWS Secrets Manager. To use Secret, specify `SECRET_ID` in `properties` like the following code. Note that in this case, the subnet must have a route to the AWS Secrets Manager VPC endpoint or to the AWS Secrets Manager endpoint through a NAT gateway.\n\n```ts\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\ndeclare const db: rds.DatabaseCluster;\nnew glue.Connection(this, \"RdsConnection\", {\n  type: glue.ConnectionType.JDBC,\n  securityGroups: [securityGroup],\n  subnet,\n  properties: {\n    JDBC_CONNECTION_URL: `jdbc:mysql://${db.clusterEndpoint.socketAddress}/databasename`,\n    JDBC_ENFORCE_SSL: \"false\",\n    SECRET_ID: db.secret!.secretName,\n  },\n});\n```\n\nIf you need to use a connection type that doesn't exist as a static member on `ConnectionType`, you can instantiate a `ConnectionType` object, e.g: `new glue.ConnectionType('NEW_TYPE')`.\n\nSee [Adding a Connection to Your Data Store](https://docs.aws.amazon.com/glue/latest/dg/populate-add-connection.html) and [Connection Structure](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-connections.html#aws-glue-api-catalog-connections-Connection) documentation for more information on the supported data stores and their configurations.\n\n## SecurityConfiguration\n\nA `SecurityConfiguration` is a set of security properties that can be used by AWS Glue to encrypt data at rest.\n\n```ts\nnew glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});\n```\n\nBy default, a shared KMS key is created for use with the encryption configurations that require one. You can also supply your own key for each encryption config, for example, for CloudWatch encryption:\n\n```ts\ndeclare const key: kms.Key;\nnew glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n    kmsKey: key,\n  },\n});\n```\n\nSee [documentation](https://docs.aws.amazon.com/glue/latest/dg/encryption-security-configuration.html) for more info for Glue encrypting data written by Crawlers, Jobs, and Development Endpoints.\n\n## Database\n\nA `Database` is a logical grouping of `Tables` in the Glue Catalog.\n\n```ts\nnew glue.Database(this, 'MyDatabase', {\n  databaseName: 'my_database',\n  description: 'my_database_description',\n});\n```\n\n## Table\n\nA Glue table describes a table of data in S3: its structure (column names and types), location of data (S3 objects with a common prefix in a S3 bucket), and format for the files (Json, Avro, Parquet, etc.):\n\n```ts\ndeclare const myDatabase: glue.Database;\nnew glue.S3Table(this, 'MyTable', {\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }, {\n    name: 'col2',\n    type: glue.Schema.array(glue.Schema.STRING),\n    comment: 'col2 is an array of strings' // comment is optional\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n```\n\nBy default, a S3 bucket will be created to store the table's data but you can manually pass the `bucket` and `s3Prefix`:\n\n```ts\ndeclare const myBucket: s3.Bucket;\ndeclare const myDatabase: glue.Database;\nnew glue.S3Table(this, 'MyTable', {\n  bucket: myBucket,\n  s3Prefix: 'my-table/',\n  // ...\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n```\n\nGlue tables can be configured to contain user-defined properties, to describe the physical storage of table data, through the `storageParameters` property:\n\n```ts\ndeclare const myDatabase: glue.Database;\nnew glue.S3Table(this, 'MyTable', {\n  storageParameters: [\n    glue.StorageParameter.skipHeaderLineCount(1),\n    glue.StorageParameter.compressionType(glue.CompressionType.GZIP),\n    glue.StorageParameter.custom('separatorChar', ',')\n  ],\n  // ...\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n```\n\nGlue tables can also be configured to contain user-defined table properties through the [`parameters`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-table-tableinput.html#cfn-glue-table-tableinput-parameters) property:\n\n```ts\ndeclare const myDatabase: glue.Database;\nnew glue.S3Table(this, 'MyTable', {\n  parameters: {\n    key1: 'val1',\n    key2: 'val2',\n  },\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n```\n\n### Partition Keys\n\nTo improve query performance, a table can specify `partitionKeys` on which data is stored and queried separately. For example, you might partition a table by `year` and `month` to optimize queries based on a time window:\n\n```ts\ndeclare const myDatabase: glue.Database;\nnew glue.S3Table(this, 'MyTable', {\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n```\n\n### Partition Indexes\n\nAnother way to improve query performance is to specify partition indexes. If no partition indexes are\npresent on the table, AWS Glue loads all partitions of the table and filters the loaded partitions using\nthe query expression. The query takes more time to run as the number of partitions increase. With an\nindex, the query will try to fetch a subset of the partitions instead of loading all partitions of the\ntable.\n\nThe keys of a partition index must be a subset of the partition keys of the table. You can have a\nmaximum of 3 partition indexes per table. To specify a partition index, you can use the `partitionIndexes`\nproperty:\n\n```ts\ndeclare const myDatabase: glue.Database;\nnew glue.S3Table(this, 'MyTable', {\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  partitionIndexes: [{\n    indexName: 'my-index', // optional\n    keyNames: ['year'],\n  }], // supply up to 3 indexes\n  dataFormat: glue.DataFormat.JSON,\n});\n```\n\nAlternatively, you can call the `addPartitionIndex()` function on a table:\n\n```ts\ndeclare const myTable: glue.Table;\nmyTable.addPartitionIndex({\n  indexName: 'my-index',\n  keyNames: ['year'],\n});\n```\n\n### Partition Filtering\n\nIf you have a table with a large number of partitions that grows over time, consider using AWS Glue partition indexing and filtering.\n\n```ts\ndeclare const myDatabase: glue.Database;\nnew glue.S3Table(this, 'MyTable', {\n  database: myDatabase,\n  columns: [{\n      name: 'col1',\n      type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n      name: 'year',\n      type: glue.Schema.SMALL_INT,\n  }, {\n      name: 'month',\n      type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n  enablePartitionFiltering: true,\n});\n```\n\n### Glue Connections\n\nGlue connections allow external data connections to third party databases and data warehouses. However, these connections can also be assigned to Glue Tables, allowing you to query external data sources using the Glue Data Catalog.\n\nWhereas `S3Table` will point to (and if needed, create) a bucket to store the tables' data, `ExternalTable` will point to an existing table in a data source. For example, to create a table in Glue that points to a table in Redshift:\n\n```ts\ndeclare const myConnection: glue.Connection;\ndeclare const myDatabase: glue.Database;\nnew glue.ExternalTable(this, 'MyTable', {\n  connection: myConnection,\n  externalDataLocation: 'default_db_public_example', // A table in Redshift\n  // ...\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n```\n\n## [Encryption](https://docs.aws.amazon.com/athena/latest/ug/encryption.html)\n\nYou can enable encryption on a Table's data:\n\n* [S3Managed](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html) - (default) Server side encryption (`SSE-S3`) with an Amazon S3-managed key.\n\n```ts\ndeclare const myDatabase: glue.Database;\nnew glue.S3Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.S3_MANAGED,\n  // ...\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n```\n\n* [Kms](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html) - Server-side encryption (`SSE-KMS`) with an AWS KMS Key managed by the account owner.\n\n```ts\ndeclare const myDatabase: glue.Database;\n// KMS key is created automatically\nnew glue.S3Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.KMS,\n  // ...\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n\n// with an explicit KMS key\nnew glue.S3Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.KMS,\n  encryptionKey: new kms.Key(this, 'MyKey'),\n  // ...\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n```\n\n* [KmsManaged](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html) - Server-side encryption (`SSE-KMS`), like `Kms`, except with an AWS KMS Key managed by the AWS Key Management Service.\n\n```ts\ndeclare const myDatabase: glue.Database;\nnew glue.S3Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.KMS_MANAGED,\n  // ...\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n```\n\n* [ClientSideKms](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingClientSideEncryption.html#client-side-encryption-kms-managed-master-key-intro) - Client-side encryption (`CSE-KMS`) with an AWS KMS Key managed by the account owner.\n\n```ts\ndeclare const myDatabase: glue.Database;\n// KMS key is created automatically\nnew glue.S3Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.CLIENT_SIDE_KMS,\n  // ...\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n\n// with an explicit KMS key\nnew glue.S3Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.CLIENT_SIDE_KMS,\n  encryptionKey: new kms.Key(this, 'MyKey'),\n  // ...\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n```\n\n*Note: you cannot provide a `Bucket` when creating the `S3Table` if you wish to use server-side encryption (`KMS`, `KMS_MANAGED` or `S3_MANAGED`)*.\n\n## Types\n\nA table's schema is a collection of columns, each of which have a `name` and a `type`. Types are recursive structures, consisting of primitive and complex types:\n\n```ts\ndeclare const myDatabase: glue.Database;\nnew glue.S3Table(this, 'MyTable', {\n  columns: [{\n    name: 'primitive_column',\n    type: glue.Schema.STRING,\n  }, {\n    name: 'array_column',\n    type: glue.Schema.array(glue.Schema.INTEGER),\n    comment: 'array<integer>',\n  }, {\n    name: 'map_column',\n    type: glue.Schema.map(\n      glue.Schema.STRING,\n      glue.Schema.TIMESTAMP),\n    comment: 'map<string,string>',\n  }, {\n    name: 'struct_column',\n    type: glue.Schema.struct([{\n      name: 'nested_column',\n      type: glue.Schema.DATE,\n      comment: 'nested comment',\n    }]),\n    comment: \"struct<nested_column:date COMMENT 'nested comment'>\",\n  }],\n  // ...\n  database: myDatabase,\n  dataFormat: glue.DataFormat.JSON,\n});\n```\n\n## Public FAQ\n\n### What are we launching today?\n\nWe’re launching new features to an AWS CDK Glue L2 Construct to provide\nbest-practice defaults and convenience methods to create Glue Jobs, Connections,\nTriggers, Workflows, and the underlying permissions and configuration.\n\n### Why should I use this Construct?\n\nDevelopers should use this Construct to reduce the amount of boilerplate\ncode and complexity each individual has to navigate, and make it easier to\ncreate best-practice Glue resources.\n\n### What’s not in scope?\n\nGlue Crawlers and other resources that are now managed by the AWS LakeFormation\nteam are not in scope for this effort. Developers should use existing methods\nto create these resources, and the new Glue L2 construct assumes they already\nexist as inputs. While best practice is for application and infrastructure code\nto be as close as possible for teams using fully-implemented DevOps mechanisms,\nin practice these ETL scripts are likely managed by a data science team who\nknow Python or Scala and don’t necessarily own or manage their own\ninfrastructure deployments. We want to meet developers where they are, and not\nassume that all of the code resides in the same repository, Developers can\nautomate this themselves via the CDK, however, if they do own both.\n\nValidating Glue version and feature use per AWS region at synth time is also\nnot in scope. AWS’ intention is for all features to eventually be propagated to\nall Global regions, so the complexity involved in creating and updating region-\nspecific configuration to match shifting feature sets does not out-weigh the\nlikelihood that a developer will use this construct to deploy resources to a\nregion without a particular new feature to a region that doesn’t yet support\nit without researching or manually attempting to use that feature before\ndeveloping it via IaC. The developer will, of course, still get feedback from\nthe underlying Glue APIs as CloudFormation deploys the resources similar to the\ncurrent CDK L1 Glue experience.\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-glue-alpha",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.Glue.Alpha",
      "packageId": "Amazon.CDK.AWS.Glue.Alpha"
    },
    "go": {
      "moduleName": "github.com/aws/aws-cdk-go",
      "packageName": "awscdkgluealpha"
    },
    "java": {
      "maven": {
        "artifactId": "glue-alpha",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.glue.alpha"
    },
    "js": {
      "npm": "@aws-cdk/aws-glue-alpha"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 2"
      ],
      "distName": "aws-cdk.aws-glue-alpha",
      "module": "aws_cdk.aws_glue_alpha"
    }
  },
  "types": {
    "@aws-cdk/aws-glue-alpha.Action": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Represents a trigger action.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { aws_glue as glue } from 'aws-cdk-lib';\n\ndeclare const cfnCrawler: glue.CfnCrawler;\ndeclare const job: glue_alpha.Job;\ndeclare const securityConfiguration: glue_alpha.SecurityConfiguration;\nconst action: glue_alpha.Action = {\n  arguments: {\n    argumentsKey: 'arguments',\n  },\n  crawler: cfnCrawler,\n  job: job,\n  securityConfiguration: securityConfiguration,\n  timeout: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.Action",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/triggers/trigger-options.ts",
        "line": 11
      },
      "name": "Action",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no arguments are passed to the job",
            "stability": "experimental",
            "summary": "The job arguments used when this trigger fires."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 24
          },
          "name": "arguments",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no crawler is used",
            "stability": "experimental",
            "summary": "The name of the crawler to be used with this action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 45
          },
          "name": "crawler",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_glue.CfnCrawler"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no job is executed",
            "stability": "experimental",
            "summary": "The job to be executed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 17
          },
          "name": "job",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.IJob"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no security configuration is used",
            "stability": "experimental",
            "summary": "The `SecurityConfiguration` to be used with this action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 38
          },
          "name": "securityConfiguration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ISecurityConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the default timeout value set in the job definition",
            "remarks": "This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status.",
            "stability": "experimental",
            "summary": "The job run timeout."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 31
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.Duration"
          }
        }
      ],
      "symbolId": "lib/triggers/trigger-options:Action"
    },
    "@aws-cdk/aws-glue-alpha.AssetCode": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "@aws-cdk/aws-glue-alpha.Code",
      "docs": {
        "stability": "experimental",
        "summary": "Job Code from a local file.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { aws_iam as iam } from 'aws-cdk-lib';\nimport { aws_kms as kms } from 'aws-cdk-lib';\n\ndeclare const dockerImage: cdk.DockerImage;\ndeclare const grantable: iam.IGrantable;\ndeclare const key: kms.Key;\ndeclare const localBundling: cdk.ILocalBundling;\nconst assetCode = new glue_alpha.AssetCode('path', /* all optional props */ {\n  assetHash: 'assetHash',\n  assetHashType: cdk.AssetHashType.SOURCE,\n  bundling: {\n    image: dockerImage,\n\n    // the properties below are optional\n    bundlingFileAccess: cdk.BundlingFileAccess.VOLUME_COPY,\n    command: ['command'],\n    entrypoint: ['entrypoint'],\n    environment: {\n      environmentKey: 'environment',\n    },\n    local: localBundling,\n    network: 'network',\n    outputType: cdk.BundlingOutput.ARCHIVED,\n    platform: 'platform',\n    securityOpt: 'securityOpt',\n    user: 'user',\n    volumes: [{\n      containerPath: 'containerPath',\n      hostPath: 'hostPath',\n\n      // the properties below are optional\n      consistency: cdk.DockerVolumeConsistency.CONSISTENT,\n    }],\n    volumesFrom: ['volumesFrom'],\n    workingDirectory: 'workingDirectory',\n  },\n  deployTime: false,\n  displayName: 'displayName',\n  exclude: ['exclude'],\n  followSymlinks: cdk.SymlinkFollowMode.NEVER,\n  ignoreMode: cdk.IgnoreMode.GLOB,\n  readers: [grantable],\n  sourceKMSKey: key,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.AssetCode",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/code.ts",
          "line": 65
        },
        "parameters": [
          {
            "docs": {
              "summary": "The path to the Code file."
            },
            "name": "path",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "fqn": "aws-cdk-lib.aws_s3_assets.AssetOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/code.ts",
        "line": 59
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Called when the Job is initialized to allow this object to bind."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 73
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-glue-alpha.Code",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "grantable",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.CodeConfig"
            }
          }
        }
      ],
      "name": "AssetCode",
      "symbolId": "lib/code:AssetCode"
    },
    "@aws-cdk/aws-glue-alpha.ClassificationString": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/glue/latest/dg/add-classifier.html#classifier-built-in",
        "stability": "experimental",
        "summary": "Classification string given to tables with this data format.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nconst classificationString = glue_alpha.ClassificationString.AVRO;",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ClassificationString",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/data-format.ts",
          "line": 176
        },
        "parameters": [
          {
            "name": "value",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/data-format.ts",
        "line": 145
      },
      "name": "ClassificationString",
      "properties": [
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-format.html#aws-glue-programming-etl-format-avro",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 149
          },
          "name": "AVRO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ClassificationString"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-format.html#aws-glue-programming-etl-format-csv",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 154
          },
          "name": "CSV",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ClassificationString"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-format.html#aws-glue-programming-etl-format-json",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 159
          },
          "name": "JSON",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ClassificationString"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-format.html#aws-glue-programming-etl-format-orc",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 174
          },
          "name": "ORC",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ClassificationString"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-format.html#aws-glue-programming-etl-format-parquet",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 169
          },
          "name": "PARQUET",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ClassificationString"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-format.html#aws-glue-programming-etl-format-xml",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 164
          },
          "name": "XML",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ClassificationString"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 176
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/data-format:ClassificationString"
    },
    "@aws-cdk/aws-glue-alpha.CloudWatchEncryption": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "CloudWatch Logs encryption configuration.",
        "example": "new glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.CloudWatchEncryption",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/security-configuration.ts",
        "line": 85
      },
      "name": "CloudWatchEncryption",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Encryption mode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-configuration.ts",
            "line": 89
          },
          "name": "mode",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.CloudWatchEncryptionMode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "A key will be created if one is not provided.",
            "stability": "experimental",
            "summary": "The KMS key to be used to encrypt the data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-configuration.ts",
            "line": 95
          },
          "name": "kmsKey",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_kms.IKey"
          }
        }
      ],
      "symbolId": "lib/security-configuration:CloudWatchEncryption"
    },
    "@aws-cdk/aws-glue-alpha.CloudWatchEncryptionMode": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/glue/latest/webapi/API_CloudWatchEncryption.html#Glue-Type-CloudWatchEncryption-CloudWatchEncryptionMode",
        "stability": "experimental",
        "summary": "Encryption mode for CloudWatch Logs.",
        "example": "new glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.CloudWatchEncryptionMode",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/security-configuration.ts",
        "line": 44
      },
      "members": [
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html",
            "stability": "experimental",
            "summary": "Server-side encryption (SSE) with an AWS KMS key managed by the account owner."
          },
          "name": "KMS"
        }
      ],
      "name": "CloudWatchEncryptionMode",
      "symbolId": "lib/security-configuration:CloudWatchEncryptionMode"
    },
    "@aws-cdk/aws-glue-alpha.Code": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a Glue Job's Code assets (an asset can be a scripts, a jar, a python file or any other file).",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PySparkEtlJob(stack, 'PySparkETLJob', {\n  role,\n  script,\n  jobName: 'PySparkETLJob',\n  jobRunQueuingEnabled: true\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.Code",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/code.ts",
        "line": 12
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Job code from a local disk path."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 27
          },
          "name": "fromAsset",
          "parameters": [
            {
              "docs": {
                "summary": "code file (not a directory)."
              },
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_s3_assets.AssetOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.AssetCode"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Job code as an S3 object."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 18
          },
          "name": "fromBucket",
          "parameters": [
            {
              "docs": {
                "summary": "The S3 bucket."
              },
              "name": "bucket",
              "type": {
                "fqn": "aws-cdk-lib.aws_s3.IBucket"
              }
            },
            {
              "docs": {
                "summary": "The object key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.S3Code"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Called when the Job is initialized to allow this object to bind."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 34
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "grantable",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.CodeConfig"
            }
          }
        }
      ],
      "name": "Code",
      "symbolId": "lib/code:Code"
    },
    "@aws-cdk/aws-glue-alpha.CodeConfig": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Result of binding `Code` into a `Job`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nconst codeConfig: glue_alpha.CodeConfig = {\n  s3Location: {\n    bucketName: 'bucketName',\n    objectKey: 'objectKey',\n\n    // the properties below are optional\n    objectVersion: 'objectVersion',\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.CodeConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/code.ts",
        "line": 104
      },
      "name": "CodeConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The location of the code in S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 108
          },
          "name": "s3Location",
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.Location"
          }
        }
      ],
      "symbolId": "lib/code:CodeConfig"
    },
    "@aws-cdk/aws-glue-alpha.Column": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "A column of a table.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nconst column: glue_alpha.Column = {\n  name: 'name',\n  type: {\n    inputString: 'inputString',\n    isPrimitive: false,\n  },\n\n  // the properties below are optional\n  comment: 'comment',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.Column",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schema.ts",
        "line": 4
      },
      "name": "Column",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Name of the column."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 8
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Type of the column."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 13
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.Type"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "stability": "experimental",
            "summary": "Coment describing the column."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 20
          },
          "name": "comment",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/schema:Column"
    },
    "@aws-cdk/aws-glue-alpha.ColumnCountMismatchHandlingAction": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "remarks": "This property is only available for an uncompressed text file format.",
        "see": "https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_TABLE.html#r_CREATE_EXTERNAL_TABLE-parameters - under _\"TABLE PROPERTIES\"_ > _\"column_count_mismatch_handling\"_",
        "stability": "experimental",
        "summary": "Identifies if the file contains less or more values for a row than the number of columns specified in the external table definition."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ColumnCountMismatchHandlingAction",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/storage-parameter.ts",
        "line": 156
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Column count mismatch handling is turned off."
          },
          "name": "DISABLED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Fail the query if the column count mismatch is detected."
          },
          "name": "FAIL"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Fill missing values with NULL and ignore the additional values in each row."
          },
          "name": "SET_TO_NULL"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Drop all rows that contain column count mismatch error from the scan."
          },
          "name": "DROP_ROW"
        }
      ],
      "name": "ColumnCountMismatchHandlingAction",
      "symbolId": "lib/storage-parameter:ColumnCountMismatchHandlingAction"
    },
    "@aws-cdk/aws-glue-alpha.CompressionType": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_TABLE.html#r_CREATE_EXTERNAL_TABLE-parameters - under _\"TABLE PROPERTIES\"_ > _\"compression_type\"_",
        "stability": "experimental",
        "summary": "The compression type.",
        "example": "declare const myDatabase: glue.Database;\nnew glue.S3Table(this, 'MyTable', {\n  storageParameters: [\n    glue.StorageParameter.skipHeaderLineCount(1),\n    glue.StorageParameter.compressionType(glue.CompressionType.GZIP),\n    glue.StorageParameter.custom('separatorChar', ',')\n  ],\n  // ...\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.CompressionType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/storage-parameter.ts",
        "line": 6
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "No compression."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Burrows-Wheeler compression."
          },
          "name": "BZIP2"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Deflate compression."
          },
          "name": "GZIP"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Compression algorithm focused on high compression and decompression speeds, rather than the maximum possible compression."
          },
          "name": "SNAPPY"
        }
      ],
      "name": "CompressionType",
      "symbolId": "lib/storage-parameter:CompressionType"
    },
    "@aws-cdk/aws-glue-alpha.Condition": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Represents a trigger condition.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\n\ndeclare const job: glue_alpha.Job;\nconst condition: glue_alpha.Condition = {\n  crawlerName: 'crawlerName',\n  crawlState: glue_alpha.CrawlerState.RUNNING,\n  job: job,\n  logicalOperator: glue_alpha.ConditionLogicalOperator.EQUALS,\n  state: glue_alpha.JobState.SUCCEEDED,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.Condition",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/triggers/trigger-options.ts",
        "line": 100
      },
      "name": "Condition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no crawler is specified",
            "stability": "experimental",
            "summary": "The name of the crawler to which this condition applies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 127
          },
          "name": "crawlerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no crawler state is specified",
            "stability": "experimental",
            "summary": "The condition crawler state."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 134
          },
          "name": "crawlState",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.CrawlerState"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no job is specified",
            "stability": "experimental",
            "summary": "The job to which this condition applies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 113
          },
          "name": "job",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.IJob"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ConditionLogicalOperator.EQUALS",
            "stability": "experimental",
            "summary": "The logical operator for the condition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 106
          },
          "name": "logicalOperator",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConditionLogicalOperator"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no job state is specified",
            "stability": "experimental",
            "summary": "The condition job state."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 120
          },
          "name": "state",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.JobState"
          }
        }
      ],
      "symbolId": "lib/triggers/trigger-options:Condition"
    },
    "@aws-cdk/aws-glue-alpha.ConditionLogicalOperator": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents the logical operator for evaluating a single condition in the Glue Trigger API."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ConditionLogicalOperator",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/constants.ts",
        "line": 286
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The condition is true if the values are equal."
          },
          "name": "EQUALS"
        }
      ],
      "name": "ConditionLogicalOperator",
      "symbolId": "lib/constants:ConditionLogicalOperator"
    },
    "@aws-cdk/aws-glue-alpha.ConditionalTriggerOptions": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for configuring a Condition (Predicate) based Glue Trigger.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { aws_glue as glue } from 'aws-cdk-lib';\n\ndeclare const cfnCrawler: glue.CfnCrawler;\ndeclare const job: glue_alpha.Job;\ndeclare const securityConfiguration: glue_alpha.SecurityConfiguration;\nconst conditionalTriggerOptions: glue_alpha.ConditionalTriggerOptions = {\n  actions: [{\n    arguments: {\n      argumentsKey: 'arguments',\n    },\n    crawler: cfnCrawler,\n    job: job,\n    securityConfiguration: securityConfiguration,\n    timeout: cdk.Duration.minutes(30),\n  }],\n  predicate: {\n    conditions: [{\n      crawlerName: 'crawlerName',\n      crawlState: glue_alpha.CrawlerState.RUNNING,\n      job: job,\n      logicalOperator: glue_alpha.ConditionLogicalOperator.EQUALS,\n      state: glue_alpha.JobState.SUCCEEDED,\n    }],\n    logical: glue_alpha.PredicateLogical.AND,\n  },\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  startOnCreation: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ConditionalTriggerOptions",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.DailyScheduleTriggerOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/triggers/trigger-options.ts",
        "line": 225
      },
      "name": "ConditionalTriggerOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The predicate for the trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 229
          },
          "name": "predicate",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.Predicate"
          }
        }
      ],
      "symbolId": "lib/triggers/trigger-options:ConditionalTriggerOptions"
    },
    "@aws-cdk/aws-glue-alpha.Connection": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "An AWS Glue connection to a data source.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.RayJob(stack, 'ImportedJob', {\n  role,\n  script,\n  jobName: 'RayCustomJobName',\n  description: 'This is a description',\n  workerType: glue.WorkerType.Z_2X,\n  numberOfWorkers: 5,\n  runtime: glue.Runtime.RAY_TWO_FOUR,\n  maxRetries: 3,\n  maxConcurrentRuns: 100,\n  timeout: cdk.Duration.hours(2),\n  connections: [glue.Connection.fromConnectionName(stack, 'Connection', 'connectionName')],\n  securityConfiguration: glue.SecurityConfiguration.fromSecurityConfigurationName(stack, 'SecurityConfig', 'securityConfigName'),\n  tags: {\n    FirstTagName: 'FirstTagValue',\n    SecondTagName: 'SecondTagValue',\n    XTagName: 'XTagValue',\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.Connection",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/connection.ts",
          "line": 306
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.ConnectionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.IConnection"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/connection.ts",
        "line": 249
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a Connection construct that represents an external connection."
          },
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 261
          },
          "name": "fromConnectionArn",
          "parameters": [
            {
              "docs": {
                "summary": "The scope creating construct (usually `this`)."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct's id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "arn of external connection."
              },
              "name": "connectionArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.IConnection"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a Connection construct that represents an external connection."
          },
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 277
          },
          "name": "fromConnectionName",
          "parameters": [
            {
              "docs": {
                "summary": "The scope creating construct (usually `this`)."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct's id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "name of external connection."
              },
              "name": "connectionName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.IConnection"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Add additional connection parameters."
          },
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 343
          },
          "name": "addProperty",
          "parameters": [
            {
              "docs": {
                "summary": "parameter key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "parameter value."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "Connection",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Uniquely identifies this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 252
          },
          "name": "PROPERTY_INJECTION_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 297
          },
          "name": "connectionArn",
          "overrides": "@aws-cdk/aws-glue-alpha.IConnection",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 302
          },
          "name": "connectionName",
          "overrides": "@aws-cdk/aws-glue-alpha.IConnection",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/connection:Connection"
    },
    "@aws-cdk/aws-glue-alpha.ConnectionOptions": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Base Connection Options.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport { aws_ec2 as ec2 } from 'aws-cdk-lib';\n\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\nconst connectionOptions: glue_alpha.ConnectionOptions = {\n  connectionName: 'connectionName',\n  description: 'description',\n  matchCriteria: ['matchCriteria'],\n  properties: {\n    propertiesKey: 'properties',\n  },\n  securityGroups: [securityGroup],\n  subnet: subnet,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ConnectionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/connection.ts",
        "line": 196
      },
      "name": "ConnectionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "cloudformation generated name",
            "stability": "experimental",
            "summary": "The name of the connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 201
          },
          "name": "connectionName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "no description",
            "stability": "experimental",
            "summary": "The description of the connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 207
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "no match criteria",
            "remarks": "This is useful for filtering the results of https://awscli.amazonaws.com/v2/documentation/api/latest/reference/glue/get-connections.html",
            "stability": "experimental",
            "summary": "A list of criteria that can be used in selecting this connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 221
          },
          "name": "matchCriteria",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "empty properties",
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-connect.html",
            "stability": "experimental",
            "summary": "Key-Value pairs that define parameters for the connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 214
          },
          "name": "properties",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "no security group",
            "stability": "experimental",
            "summary": "The list of security groups needed to successfully make this connection e.g. to successfully connect to VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 227
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "aws-cdk-lib.aws_ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "no subnet",
            "remarks": "See more at https://docs.aws.amazon.com/glue/latest/dg/start-connecting.html.",
            "stability": "experimental",
            "summary": "The VPC subnet to connect to resources within a VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 233
          },
          "name": "subnet",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_ec2.ISubnet"
          }
        }
      ],
      "symbolId": "lib/connection:ConnectionOptions"
    },
    "@aws-cdk/aws-glue-alpha.ConnectionProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Construction properties for `Connection`.",
        "example": "declare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\nnew glue.Connection(this, 'MyConnection', {\n  type: glue.ConnectionType.NETWORK,\n  // The security groups granting AWS Glue inbound access to the data source within the VPC\n  securityGroups: [securityGroup],\n  // The VPC subnet which contains the data source\n  subnet,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ConnectionProps",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.ConnectionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/connection.ts",
        "line": 239
      },
      "name": "ConnectionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The type of the connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 243
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        }
      ],
      "symbolId": "lib/connection:ConnectionProps"
    },
    "@aws-cdk/aws-glue-alpha.ConnectionType": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "remarks": "If you need to use a connection type that doesn't exist as a static member, you\ncan instantiate a `ConnectionType` object, e.g: `new ConnectionType('NEW_TYPE')`.",
        "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-connection-connectioninput.html#cfn-glue-connection-connectioninput-connectiontype",
        "stability": "experimental",
        "summary": "The type of the glue connection.",
        "example": "declare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\nnew glue.Connection(this, 'MyConnection', {\n  type: glue.ConnectionType.NETWORK,\n  // The security groups granting AWS Glue inbound access to the data source within the VPC\n  securityGroups: [securityGroup],\n  // The VPC subnet which contains the data source\n  subnet,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/connection.ts",
          "line": 164
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/connection.ts",
        "line": 16
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The connection type name as expected by Connection resource."
          },
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 171
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "ConnectionType",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Uses configuration settings contained in a custom connector to read from and write to data stores that are not natively supported by AWS Glue."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 57
          },
          "name": "CUSTOM",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to Facebook Ads."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 62
          },
          "name": "FACEBOOKADS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to Google Ads."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 67
          },
          "name": "GOOGLEADS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to Google Analytics 4."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 77
          },
          "name": "GOOGLEANALYTICS4",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to Google Sheets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 72
          },
          "name": "GOOGLESHEETS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to HubSpot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 82
          },
          "name": "HUBSPOT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to Instagram Ads."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 87
          },
          "name": "INSTAGRAMADS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to Intercom."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 92
          },
          "name": "INTERCOM",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to a database through Java Database Connectivity (JDBC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 20
          },
          "name": "JDBC",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to Jira Cloud."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 97
          },
          "name": "JIRACLOUD",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to an Apache Kafka streaming platform."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 25
          },
          "name": "KAFKA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to Adobe Marketo Engage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 102
          },
          "name": "MARKETO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Uses configuration settings contained in a connector purchased from AWS Marketplace to read from and write to data stores that are not natively supported by AWS Glue."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 51
          },
          "name": "MARKETPLACE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to a MongoDB document database."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 30
          },
          "name": "MONGODB",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to Oracle NetSuite."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 107
          },
          "name": "NETSUITEERP",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a network connection to a data source within an Amazon Virtual Private Cloud environment (Amazon VPC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 45
          },
          "name": "NETWORK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to Salesforce using OAuth authentication."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 112
          },
          "name": "SALESFORCE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to Salesforce Marketing Cloud."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 117
          },
          "name": "SALESFORCEMARKETINGCLOUD",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to Salesforce Marketing Cloud Account Engagement (MCAE)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 122
          },
          "name": "SALESFORCEPARDOT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to SAP OData."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 127
          },
          "name": "SAPODATA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to ServiceNow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 132
          },
          "name": "SERVICENOW",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to Slack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 137
          },
          "name": "SLACK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to Snapchat Ads."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 142
          },
          "name": "SNAPCHATADS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to Stripe."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 147
          },
          "name": "STRIPE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection used for view validation by Amazon Athena."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 40
          },
          "name": "VIEW_VALIDATION_ATHENA",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection used for view validation by Amazon Redshift."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 35
          },
          "name": "VIEW_VALIDATION_REDSHIFT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to Zendesk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 152
          },
          "name": "ZENDESK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Designates a connection to Zoho CRM."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 157
          },
          "name": "ZOHOCRM",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ConnectionType"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of this ConnectionType, as expected by Connection resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 162
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/connection:ConnectionType"
    },
    "@aws-cdk/aws-glue-alpha.ContinuousLoggingProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
        "stability": "experimental",
        "summary": "Properties for enabling Continuous Logging for Glue Jobs.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PySparkEtlJob(stack, 'PySparkETLJob', {\n  jobName: 'PySparkETLJobCustomName',\n  description: 'This is a description',\n  role,\n  script,\n  glueVersion: glue.GlueVersion.V3_0,\n  continuousLogging: { enabled: false },\n  workerType: glue.WorkerType.G_2X,\n  maxConcurrentRuns: 100,\n  timeout: cdk.Duration.hours(2),\n  connections: [glue.Connection.fromConnectionName(stack, 'Connection', 'connectionName')],\n  securityConfiguration: glue.SecurityConfiguration.fromSecurityConfigurationName(stack, 'SecurityConfig', 'securityConfigName'),\n  tags: {\n    FirstTagName: 'FirstTagValue',\n    SecondTagName: 'SecondTagValue',\n    XTagName: 'XTagValue',\n  },\n  numberOfWorkers: 2,\n  maxRetries: 2,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ContinuousLoggingProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jobs/job.ts",
        "line": 89
      },
      "name": "ContinuousLoggingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Enable continuous logging."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 93
          },
          "name": "enabled",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "`%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n`",
            "remarks": "This is a Log4j Conversion Pattern to customize driver and executor logs.",
            "stability": "experimental",
            "summary": "Apply the provided conversion pattern."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 123
          },
          "name": "conversionPattern",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a log group is created with name `/aws-glue/jobs/logs-v2/`.",
            "stability": "experimental",
            "summary": "Specify a custom CloudWatch log group name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 100
          },
          "name": "logGroup",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_logs.ILogGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the job run ID.",
            "stability": "experimental",
            "summary": "Specify a custom CloudWatch log stream prefix."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 107
          },
          "name": "logStreamPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Filter out non-useful Apache Spark driver/executor and Apache Hadoop YARN heartbeat log messages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 114
          },
          "name": "quiet",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/jobs/job:ContinuousLoggingProps"
    },
    "@aws-cdk/aws-glue-alpha.CrawlerState": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents the state of a crawler for a condition in the Glue Trigger API."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.CrawlerState",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/constants.ts",
        "line": 294
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The crawler is currently running."
          },
          "name": "RUNNING"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The crawler is in the process of being cancelled."
          },
          "name": "CANCELLING"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The crawler has been cancelled."
          },
          "name": "CANCELLED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The crawler has completed its operation successfully."
          },
          "name": "SUCCEEDED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The crawler has failed to complete its operation."
          },
          "name": "FAILED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The crawler encountered an error during its operation."
          },
          "name": "ERROR"
        }
      ],
      "name": "CrawlerState",
      "symbolId": "lib/constants:CrawlerState"
    },
    "@aws-cdk/aws-glue-alpha.CustomScheduledTriggerOptions": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for configuring a custom-scheduled Glue Trigger.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { aws_glue as glue } from 'aws-cdk-lib';\n\ndeclare const cfnCrawler: glue.CfnCrawler;\ndeclare const job: glue_alpha.Job;\ndeclare const securityConfiguration: glue_alpha.SecurityConfiguration;\ndeclare const triggerSchedule: glue_alpha.TriggerSchedule;\nconst customScheduledTriggerOptions: glue_alpha.CustomScheduledTriggerOptions = {\n  actions: [{\n    arguments: {\n      argumentsKey: 'arguments',\n    },\n    crawler: cfnCrawler,\n    job: job,\n    securityConfiguration: securityConfiguration,\n    timeout: cdk.Duration.minutes(30),\n  }],\n  schedule: triggerSchedule,\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  startOnCreation: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.CustomScheduledTriggerOptions",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.WeeklyScheduleTriggerOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/triggers/trigger-options.ts",
        "line": 203
      },
      "name": "CustomScheduledTriggerOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The custom schedule for the trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 207
          },
          "name": "schedule",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.TriggerSchedule"
          }
        }
      ],
      "symbolId": "lib/triggers/trigger-options:CustomScheduledTriggerOptions"
    },
    "@aws-cdk/aws-glue-alpha.DailyScheduleTriggerOptions": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for configuring a daily-scheduled Glue Trigger.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { aws_glue as glue } from 'aws-cdk-lib';\n\ndeclare const cfnCrawler: glue.CfnCrawler;\ndeclare const job: glue_alpha.Job;\ndeclare const securityConfiguration: glue_alpha.SecurityConfiguration;\nconst dailyScheduleTriggerOptions: glue_alpha.DailyScheduleTriggerOptions = {\n  actions: [{\n    arguments: {\n      argumentsKey: 'arguments',\n    },\n    crawler: cfnCrawler,\n    job: job,\n    securityConfiguration: securityConfiguration,\n    timeout: cdk.Duration.minutes(30),\n  }],\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  startOnCreation: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.DailyScheduleTriggerOptions",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.TriggerOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/triggers/trigger-options.ts",
        "line": 186
      },
      "name": "DailyScheduleTriggerOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "experimental",
            "summary": "Whether to start the trigger on creation or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 192
          },
          "name": "startOnCreation",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/triggers/trigger-options:DailyScheduleTriggerOptions"
    },
    "@aws-cdk/aws-glue-alpha.DataFormat": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Defines the input/output formats and ser/de for a single DataFormat.",
        "example": "declare const myDatabase: glue.Database;\nnew glue.S3Table(this, 'MyTable', {\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.DataFormat",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/data-format.ts",
          "line": 335
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.DataFormatProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/data-format.ts",
        "line": 209
      },
      "name": "DataFormat",
      "properties": [
        {
          "const": true,
          "docs": {
            "remarks": "Also works for CloudFront logs",
            "see": "https://docs.aws.amazon.com/athena/latest/ug/apache.html",
            "stability": "experimental",
            "summary": "DataFormat for Apache Web Server Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 215
          },
          "name": "APACHE_LOGS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.DataFormat"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/athena/latest/ug/avro.html",
            "stability": "experimental",
            "summary": "DataFormat for Apache Avro."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 226
          },
          "name": "AVRO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.DataFormat"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/athena/latest/ug/cloudtrail.html",
            "stability": "experimental",
            "summary": "DataFormat for CloudTrail logs stored on S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 238
          },
          "name": "CLOUDTRAIL_LOGS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.DataFormat"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/athena/latest/ug/csv.html",
            "stability": "experimental",
            "summary": "DataFormat for CSV Files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 249
          },
          "name": "CSV",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.DataFormat"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "Uses OpenX Json SerDe for serialization and deseralization.",
            "see": "https://docs.aws.amazon.com/athena/latest/ug/json.html",
            "stability": "experimental",
            "summary": "Stored as plain text files in JSON format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 262
          },
          "name": "JSON",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.DataFormat"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/athena/latest/ug/grok.html",
            "stability": "experimental",
            "summary": "DataFormat for Logstash Logs, using the GROK SerDe."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 274
          },
          "name": "LOGSTASH",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.DataFormat"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/athena/latest/ug/orc.html",
            "stability": "experimental",
            "summary": "DataFormat for Apache ORC (Optimized Row Columnar)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 285
          },
          "name": "ORC",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.DataFormat"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/athena/latest/ug/parquet.html",
            "stability": "experimental",
            "summary": "DataFormat for Apache Parquet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 297
          },
          "name": "PARQUET",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.DataFormat"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/athena/latest/ug/lazy-simple-serde.html",
            "stability": "experimental",
            "summary": "DataFormat for TSV (Tab-Separated Values)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 309
          },
          "name": "TSV",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.DataFormat"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "`InputFormat` for this data format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 318
          },
          "name": "inputFormat",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.InputFormat"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "`OutputFormat` for this data format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 323
          },
          "name": "outputFormat",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.OutputFormat"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Serialization library for this data format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 328
          },
          "name": "serializationLibrary",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.SerializationLibrary"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Classification string given to tables with this data format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 333
          },
          "name": "classificationString",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ClassificationString"
          }
        }
      ],
      "symbolId": "lib/data-format:DataFormat"
    },
    "@aws-cdk/aws-glue-alpha.DataFormatProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties of a DataFormat instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\n\ndeclare const classificationString: glue_alpha.ClassificationString;\ndeclare const inputFormat: glue_alpha.InputFormat;\ndeclare const outputFormat: glue_alpha.OutputFormat;\ndeclare const serializationLibrary: glue_alpha.SerializationLibrary;\nconst dataFormatProps: glue_alpha.DataFormatProps = {\n  inputFormat: inputFormat,\n  outputFormat: outputFormat,\n  serializationLibrary: serializationLibrary,\n\n  // the properties below are optional\n  classificationString: classificationString,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.DataFormatProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/data-format.ts",
        "line": 182
      },
      "name": "DataFormatProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "`InputFormat` for this data format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 186
          },
          "name": "inputFormat",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.InputFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "`OutputFormat` for this data format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 191
          },
          "name": "outputFormat",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.OutputFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Serialization library for this data format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 196
          },
          "name": "serializationLibrary",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.SerializationLibrary"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No classification is specified.",
            "stability": "experimental",
            "summary": "Classification string given to tables with this data format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 203
          },
          "name": "classificationString",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ClassificationString"
          }
        }
      ],
      "symbolId": "lib/data-format:DataFormatProps"
    },
    "@aws-cdk/aws-glue-alpha.DataQualityRuleset": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "A Glue Data Quality ruleset.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\n\ndeclare const dataQualityTargetTable: glue_alpha.DataQualityTargetTable;\nconst dataQualityRuleset = new glue_alpha.DataQualityRuleset(this, 'MyDataQualityRuleset', {\n  rulesetDqdl: 'rulesetDqdl',\n  targetTable: dataQualityTargetTable,\n\n  // the properties below are optional\n  clientToken: 'clientToken',\n  description: 'description',\n  rulesetName: 'rulesetName',\n  tags: {\n    tagsKey: 'tags',\n  },\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.DataQualityRuleset",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/data-quality-ruleset.ts",
          "line": 127
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.DataQualityRulesetProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.IDataQualityRuleset"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/data-quality-ruleset.ts",
        "line": 86
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/data-quality-ruleset.ts",
            "line": 91
          },
          "name": "fromRulesetArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "rulesetArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.IDataQualityRuleset"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/data-quality-ruleset.ts",
            "line": 100
          },
          "name": "fromRulesetName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "rulesetName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.IDataQualityRuleset"
            }
          },
          "static": true
        }
      ],
      "name": "DataQualityRuleset",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Uniquely identifies this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-quality-ruleset.ts",
            "line": 89
          },
          "name": "PROPERTY_INJECTION_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "ARN of this ruleset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-quality-ruleset.ts",
            "line": 125
          },
          "name": "rulesetArn",
          "overrides": "@aws-cdk/aws-glue-alpha.IDataQualityRuleset",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Name of this ruleset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-quality-ruleset.ts",
            "line": 120
          },
          "name": "rulesetName",
          "overrides": "@aws-cdk/aws-glue-alpha.IDataQualityRuleset",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/data-quality-ruleset:DataQualityRuleset"
    },
    "@aws-cdk/aws-glue-alpha.DataQualityRulesetProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Construction properties for `DataQualityRuleset`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\n\ndeclare const dataQualityTargetTable: glue_alpha.DataQualityTargetTable;\nconst dataQualityRulesetProps: glue_alpha.DataQualityRulesetProps = {\n  rulesetDqdl: 'rulesetDqdl',\n  targetTable: dataQualityTargetTable,\n\n  // the properties below are optional\n  clientToken: 'clientToken',\n  description: 'description',\n  rulesetName: 'rulesetName',\n  tags: {\n    tagsKey: 'tags',\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.DataQualityRulesetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/data-quality-ruleset.ts",
        "line": 45
      },
      "name": "DataQualityRulesetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The dqdl of the ruleset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-quality-ruleset.ts",
            "line": 68
          },
          "name": "rulesetDqdl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The target table of the ruleset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-quality-ruleset.ts",
            "line": 80
          },
          "name": "targetTable",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.DataQualityTargetTable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The client token of the ruleset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-quality-ruleset.ts",
            "line": 56
          },
          "name": "clientToken",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The description of the ruleset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-quality-ruleset.ts",
            "line": 62
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "cloudformation generated name",
            "stability": "experimental",
            "summary": "The name of the ruleset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-quality-ruleset.ts",
            "line": 50
          },
          "name": "rulesetName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "empty tags",
            "stability": "experimental",
            "summary": "Key-Value pairs that define tags for the ruleset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-quality-ruleset.ts",
            "line": 74
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/data-quality-ruleset:DataQualityRulesetProps"
    },
    "@aws-cdk/aws-glue-alpha.DataQualityTargetTable": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Properties of a DataQualityTargetTable.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nconst dataQualityTargetTable = new glue_alpha.DataQualityTargetTable('databaseName', 'tableName');",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.DataQualityTargetTable",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/data-quality-ruleset.ts",
          "line": 22
        },
        "parameters": [
          {
            "name": "databaseName",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "tableName",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/data-quality-ruleset.ts",
        "line": 11
      },
      "name": "DataQualityTargetTable",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The database name of the target table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-quality-ruleset.ts",
            "line": 15
          },
          "name": "databaseName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The table name of the target table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-quality-ruleset.ts",
            "line": 20
          },
          "name": "tableName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/data-quality-ruleset:DataQualityTargetTable"
    },
    "@aws-cdk/aws-glue-alpha.Database": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "A Glue database.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport { S3Table, Database, DataFormat, Schema } from '@aws-cdk/aws-glue-alpha';\nimport { CfnDataLakeSettings, CfnTag, CfnTagAssociation } from 'aws-cdk-lib/aws-lakeformation';\n\ndeclare const stack: cdk.Stack;\ndeclare const accountId: string;\n\nconst tagKey = 'aws';\nconst tagValues = ['dev'];\n\nconst database = new Database(this, 'Database');\n\nconst table = new S3Table(this, 'Table', {\n  database,\n  columns: [\n    {\n      name: 'col1',\n      type: Schema.STRING,\n    },\n    {\n      name: 'col2',\n      type: Schema.STRING,\n    }\n  ],\n  dataFormat: DataFormat.CSV,\n});\n\nconst synthesizer = stack.synthesizer as cdk.DefaultStackSynthesizer;\nnew CfnDataLakeSettings(this, 'DataLakeSettings', {\n  admins: [\n    {\n      dataLakePrincipalIdentifier: stack.formatArn({\n        service: 'iam',\n        resource: 'role',\n        region: '',\n        account: accountId,\n        resourceName: 'Admin',\n      }),\n    },\n    {\n      // The CDK cloudformation execution role.\n      dataLakePrincipalIdentifier: synthesizer.cloudFormationExecutionRoleArn.replace('${AWS::Partition}', 'aws'),\n    },\n  ],\n});\n\nconst tag = new CfnTag(this, 'Tag', {\n  catalogId: accountId,\n  tagKey,\n  tagValues,\n});\n\nconst lfTagPairProperty: CfnTagAssociation.LFTagPairProperty = {\n  catalogId: accountId,\n  tagKey,\n  tagValues,\n};\n\nconst tagAssociation = new CfnTagAssociation(this, 'TagAssociation', {\n  lfTags: [lfTagPairProperty],\n  resource: {\n    tableWithColumns: {\n      databaseName: database.databaseName,\n      columnNames: ['col1', 'col2'],\n      catalogId: accountId,\n      name: table.tableName,\n    }\n  }\n});\n\ntagAssociation.node.addDependency(tag);\ntagAssociation.node.addDependency(table);",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.Database",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/database.ts",
          "line": 103
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.DatabaseProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.IDatabase"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/database.ts",
        "line": 60
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/database.ts",
            "line": 65
          },
          "name": "fromDatabaseArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "databaseArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.IDatabase"
            }
          },
          "static": true
        }
      ],
      "name": "Database",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Uniquely identifies this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database.ts",
            "line": 63
          },
          "name": "PROPERTY_INJECTION_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "ARN of the Glue catalog in which this database is stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database.ts",
            "line": 81
          },
          "name": "catalogArn",
          "overrides": "@aws-cdk/aws-glue-alpha.IDatabase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The catalog id of the database (usually, the AWS account id)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database.ts",
            "line": 86
          },
          "name": "catalogId",
          "overrides": "@aws-cdk/aws-glue-alpha.IDatabase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "ARN of this database."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database.ts",
            "line": 91
          },
          "name": "databaseArn",
          "overrides": "@aws-cdk/aws-glue-alpha.IDatabase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Name of this database."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database.ts",
            "line": 96
          },
          "name": "databaseName",
          "overrides": "@aws-cdk/aws-glue-alpha.IDatabase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Location URI of this database."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database.ts",
            "line": 101
          },
          "name": "locationUri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/database:Database"
    },
    "@aws-cdk/aws-glue-alpha.DatabaseProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "example": "new glue.Database(this, 'MyDatabase', {\n  databaseName: 'my_database',\n  description: 'my_database_description',\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.DatabaseProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/database.ts",
        "line": 33
      },
      "name": "DatabaseProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- generated by CDK.",
            "stability": "experimental",
            "summary": "The name of the database."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database.ts",
            "line": 39
          },
          "name": "databaseName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no database description",
            "stability": "experimental",
            "summary": "A description of the database."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database.ts",
            "line": 54
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined. This field is optional in AWS::Glue::Database DatabaseInput",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-database-databaseinput.html",
            "stability": "experimental",
            "summary": "The location of the database (for example, an HDFS path)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database.ts",
            "line": 47
          },
          "name": "locationUri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/database:DatabaseProps"
    },
    "@aws-cdk/aws-glue-alpha.EventBatchingCondition": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Represents event trigger batch condition.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport * as cdk from 'aws-cdk-lib';\nconst eventBatchingCondition: glue_alpha.EventBatchingCondition = {\n  batchSize: 123,\n\n  // the properties below are optional\n  batchWindow: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.EventBatchingCondition",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/triggers/trigger-options.ts",
        "line": 140
      },
      "name": "EventBatchingCondition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Number of events that must be received from Amazon EventBridge before EventBridge event trigger fires."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 144
          },
          "name": "batchSize",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 900 seconds",
            "stability": "experimental",
            "summary": "Window of time in seconds after which EventBridge event trigger fires."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 151
          },
          "name": "batchWindow",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.Duration"
          }
        }
      ],
      "symbolId": "lib/triggers/trigger-options:EventBatchingCondition"
    },
    "@aws-cdk/aws-glue-alpha.ExecutionClass": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/glue/latest/dg/add-job.html",
        "stability": "experimental",
        "summary": "The ExecutionClass whether the job is run with a standard or flexible execution class."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ExecutionClass",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/constants.ts",
        "line": 125
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The flexible execution class is appropriate for time-insensitive jobs whose start and completion times may vary."
          },
          "name": "FLEX"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The standard execution class is ideal for time-sensitive workloads that require fast job startup and dedicated resources."
          },
          "name": "STANDARD"
        }
      ],
      "name": "ExecutionClass",
      "symbolId": "lib/constants:ExecutionClass"
    },
    "@aws-cdk/aws-glue-alpha.ExternalTable": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "@aws-cdk/aws-glue-alpha.TableBase",
      "docs": {
        "custom": {
          "resource": "AWS::Glue::Table",
          "exampleMetadata": "infused"
        },
        "stability": "experimental",
        "summary": "A Glue table that targets an external data location (e.g. A table in a Redshift Cluster).",
        "example": "declare const myConnection: glue.Connection;\ndeclare const myDatabase: glue.Database;\nnew glue.ExternalTable(this, 'MyTable', {\n  connection: myConnection,\n  externalDataLocation: 'default_db_public_example', // A table in Redshift\n  // ...\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});"
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ExternalTable",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/external-table.ts",
          "line": 58
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.ExternalTableProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/external-table.ts",
        "line": 32
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grant read permissions to the table."
          },
          "locationInModule": {
            "filename": "lib/external-table.ts",
            "line": 125
          },
          "name": "grantRead",
          "overrides": "@aws-cdk/aws-glue-alpha.TableBase",
          "parameters": [
            {
              "docs": {
                "summary": "the principal."
              },
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grant read and write permissions to the table."
          },
          "locationInModule": {
            "filename": "lib/external-table.ts",
            "line": 147
          },
          "name": "grantReadWrite",
          "overrides": "@aws-cdk/aws-glue-alpha.TableBase",
          "parameters": [
            {
              "docs": {
                "summary": "the principal."
              },
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grant write permissions to the table."
          },
          "locationInModule": {
            "filename": "lib/external-table.ts",
            "line": 136
          },
          "name": "grantWrite",
          "overrides": "@aws-cdk/aws-glue-alpha.TableBase",
          "parameters": [
            {
              "docs": {
                "summary": "the principal."
              },
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_iam.Grant"
            }
          }
        }
      ],
      "name": "ExternalTable",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Uniquely identifies this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/external-table.ts",
            "line": 35
          },
          "name": "PROPERTY_INJECTION_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The connection associated to this table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/external-table.ts",
            "line": 49
          },
          "name": "connection",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.IConnection"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "ARN of this table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/external-table.ts",
            "line": 44
          },
          "name": "tableArn",
          "overrides": "@aws-cdk/aws-glue-alpha.TableBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Name of this table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/external-table.ts",
            "line": 39
          },
          "name": "tableName",
          "overrides": "@aws-cdk/aws-glue-alpha.TableBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/external-table.ts",
            "line": 56
          },
          "name": "tableResource",
          "overrides": "@aws-cdk/aws-glue-alpha.TableBase",
          "protected": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_glue.CfnTable"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "This table's partition indexes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/external-table.ts",
            "line": 54
          },
          "name": "partitionIndexes",
          "optional": true,
          "overrides": "@aws-cdk/aws-glue-alpha.TableBase",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.PartitionIndex"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/external-table:ExternalTable"
    },
    "@aws-cdk/aws-glue-alpha.ExternalTableProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "example": "declare const myConnection: glue.Connection;\ndeclare const myDatabase: glue.Database;\nnew glue.ExternalTable(this, 'MyTable', {\n  connection: myConnection,\n  externalDataLocation: 'default_db_public_example', // A table in Redshift\n  // ...\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ExternalTableProps",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.TableBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/external-table.ts",
        "line": 10
      },
      "name": "ExternalTableProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No connection",
            "stability": "experimental",
            "summary": "The connection the table will use when performing reads and writes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/external-table.ts",
            "line": 16
          },
          "name": "connection",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.IConnection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No outsourced data source location",
            "remarks": "If this property is set, it will override both `bucket` and `s3Prefix`.",
            "stability": "experimental",
            "summary": "The data source location of the glue table, (e.g. `default_db_public_example` for Redshift)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/external-table.ts",
            "line": 25
          },
          "name": "externalDataLocation",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/external-table:ExternalTableProps"
    },
    "@aws-cdk/aws-glue-alpha.GlueVersion": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/glue/latest/dg/add-job.html.",
        "stability": "experimental",
        "summary": "AWS Glue version determines the versions of Apache Spark and Python that are available to the job.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PySparkEtlJob(stack, 'PySparkETLJob', {\n  jobName: 'PySparkETLJobCustomName',\n  description: 'This is a description',\n  role,\n  script,\n  glueVersion: glue.GlueVersion.V3_0,\n  continuousLogging: { enabled: false },\n  workerType: glue.WorkerType.G_2X,\n  maxConcurrentRuns: 100,\n  timeout: cdk.Duration.hours(2),\n  connections: [glue.Connection.fromConnectionName(stack, 'Connection', 'connectionName')],\n  securityConfiguration: glue.SecurityConfiguration.fromSecurityConfigurationName(stack, 'SecurityConfig', 'securityConfigName'),\n  tags: {\n    FirstTagName: 'FirstTagValue',\n    SecondTagName: 'SecondTagValue',\n    XTagName: 'XTagValue',\n  },\n  numberOfWorkers: 2,\n  maxRetries: 2,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.GlueVersion",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/constants.ts",
        "line": 144
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Glue version using Spark 2.2.1 and Python 2.7."
          },
          "name": "V0_9"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Glue version using Spark 2.4.3, Python 2.7 and Python 3.6."
          },
          "name": "V1_0"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Glue version using Spark 2.4.3 and Python 3.7."
          },
          "name": "V2_0"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Glue version using Spark 3.1.1 and Python 3.7."
          },
          "name": "V3_0"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Glue version using Spark 3.3.0 and Python 3.10."
          },
          "name": "V4_0"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Glue version using Spark 3.5.2 and Python 3.11."
          },
          "name": "V5_0"
        }
      ],
      "name": "GlueVersion",
      "symbolId": "lib/constants:GlueVersion"
    },
    "@aws-cdk/aws-glue-alpha.IConnection": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Interface representing a created or an imported `Connection`."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.IConnection",
      "interfaces": [
        "aws-cdk-lib.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/connection.ts",
        "line": 179
      },
      "name": "IConnection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ARN of the connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 190
          },
          "name": "connectionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The name of the connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/connection.ts",
            "line": 184
          },
          "name": "connectionName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/connection:IConnection"
    },
    "@aws-cdk/aws-glue-alpha.IDataQualityRuleset": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-glue-alpha.IDataQualityRuleset",
      "interfaces": [
        "aws-cdk-lib.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/data-quality-ruleset.ts",
        "line": 28
      },
      "name": "IDataQualityRuleset",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ARN of the ruleset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-quality-ruleset.ts",
            "line": 33
          },
          "name": "rulesetArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The name of the ruleset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-quality-ruleset.ts",
            "line": 39
          },
          "name": "rulesetName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/data-quality-ruleset:IDataQualityRuleset"
    },
    "@aws-cdk/aws-glue-alpha.IDatabase": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-glue-alpha.IDatabase",
      "interfaces": [
        "aws-cdk-lib.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/database.ts",
        "line": 7
      },
      "name": "IDatabase",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the catalog."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database.ts",
            "line": 11
          },
          "name": "catalogArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The catalog id of the database (usually, the AWS account id)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database.ts",
            "line": 16
          },
          "name": "catalogId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ARN of the database."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database.ts",
            "line": 23
          },
          "name": "databaseArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The name of the database."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database.ts",
            "line": 30
          },
          "name": "databaseName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/database:IDatabase"
    },
    "@aws-cdk/aws-glue-alpha.IJob": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Interface representing a new or an imported Glue Job."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.IJob",
      "interfaces": [
        "aws-cdk-lib.IResource",
        "aws-cdk-lib.aws_iam.IGrantable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jobs/job.ts",
        "line": 15
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/glue/latest/dg/monitoring-awsglue-with-cloudwatch-metrics.html",
            "stability": "experimental",
            "summary": "Create a CloudWatch metric."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 65
          },
          "name": "metric",
          "parameters": [
            {
              "docs": {
                "summary": "name of the metric typically prefixed with `glue.driver.`, `glue.<executorId>.` or `glue.ALL.`."
              },
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the metric type."
              },
              "name": "type",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.MetricType"
              }
            },
            {
              "docs": {
                "summary": "metric options."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Create a CloudWatch Metric indicating job failure."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 75
          },
          "name": "metricFailure",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Create a CloudWatch Metric indicating job success."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 70
          },
          "name": "metricSuccess",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Create a CloudWatch Metric indicating job timeout."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 80
          },
          "name": "metricTimeout",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/EventTypes.html#glue-event-types",
            "stability": "experimental",
            "summary": "Defines a CloudWatch event rule triggered when something happens with this job."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 33
          },
          "name": "onEvent",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_events.Rule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/EventTypes.html#glue-event-types",
            "stability": "experimental",
            "summary": "Defines a CloudWatch event rule triggered when this job moves to the FAILED state."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 47
          },
          "name": "onFailure",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_events.Rule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/EventTypes.html#glue-event-types",
            "stability": "experimental",
            "summary": "Defines a CloudWatch event rule triggered when this job moves to the SUCCEEDED state."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 40
          },
          "name": "onSuccess",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_events.Rule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/EventTypes.html#glue-event-types",
            "stability": "experimental",
            "summary": "Defines a CloudWatch event rule triggered when this job moves to the TIMEOUT state."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 54
          },
          "name": "onTimeout",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_events.Rule"
            }
          }
        }
      ],
      "name": "IJob",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ARN of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 26
          },
          "name": "jobArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The name of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 20
          },
          "name": "jobName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/jobs/job:IJob"
    },
    "@aws-cdk/aws-glue-alpha.ISecurityConfiguration": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Interface representing a created or an imported `SecurityConfiguration`."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ISecurityConfiguration",
      "interfaces": [
        "aws-cdk-lib.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/security-configuration.ts",
        "line": 12
      },
      "name": "ISecurityConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The name of the security configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-configuration.ts",
            "line": 17
          },
          "name": "securityConfigurationName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/security-configuration:ISecurityConfiguration"
    },
    "@aws-cdk/aws-glue-alpha.ITable": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ITable",
      "interfaces": [
        "aws-cdk-lib.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/table-base.ts",
        "line": 30
      },
      "name": "ITable",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 34
          },
          "name": "tableArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 39
          },
          "name": "tableName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/table-base:ITable"
    },
    "@aws-cdk/aws-glue-alpha.IWorkflow": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/glue/latest/dg/workflows_overview.html",
        "stability": "experimental",
        "summary": "The base interface for Glue Workflow."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.IWorkflow",
      "interfaces": [
        "aws-cdk-lib.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/triggers/workflow.ts",
        "line": 27
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Add an custom-scheduled trigger to the workflow."
          },
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 58
          },
          "name": "addCustomScheduledTrigger",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.CustomScheduledTriggerOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_glue.CfnTrigger"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Add an daily-scheduled trigger to the workflow."
          },
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 48
          },
          "name": "addDailyScheduledTrigger",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.DailyScheduleTriggerOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_glue.CfnTrigger"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Add an on-demand trigger to the workflow."
          },
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 43
          },
          "name": "addOnDemandTrigger",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.OnDemandTriggerOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_glue.CfnTrigger"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Add an weekly-scheduled trigger to the workflow."
          },
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 53
          },
          "name": "addWeeklyScheduledTrigger",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.WeeklyScheduleTriggerOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_glue.CfnTrigger"
            }
          }
        }
      ],
      "name": "IWorkflow",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ARN of the workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 38
          },
          "name": "workflowArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The name of the workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 32
          },
          "name": "workflowName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/triggers/workflow:IWorkflow"
    },
    "@aws-cdk/aws-glue-alpha.InputFormat": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Absolute class name of the Hadoop `InputFormat` to use when reading table files.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nconst inputFormat = glue_alpha.InputFormat.AVRO;",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.InputFormat",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/data-format.ts",
          "line": 43
        },
        "parameters": [
          {
            "name": "className",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/data-format.ts",
        "line": 4
      },
      "name": "InputFormat",
      "properties": [
        {
          "const": true,
          "docs": {
            "see": "https://svn.apache.org/repos/infra/websites/production/hive/content/javadocs/r3.1.3/api/org/apache/hadoop/hive/ql/io/avro/AvroContainerInputFormat.html",
            "stability": "experimental",
            "summary": "InputFormat for Avro files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 10
          },
          "name": "AVRO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.InputFormat"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/athena/latest/ug/cloudtrail.html",
            "stability": "experimental",
            "summary": "InputFormat for Cloudtrail Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 17
          },
          "name": "CLOUDTRAIL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.InputFormat"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://svn.apache.org/repos/infra/websites/production/hive/content/javadocs/r3.1.3/api/org/apache/hadoop/hive/ql/io/orc/OrcInputFormat.html",
            "stability": "experimental",
            "summary": "InputFormat for Orc files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 24
          },
          "name": "ORC",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.InputFormat"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://svn.apache.org/repos/infra/websites/production/hive/content/javadocs/r3.1.3/api/org/apache/hadoop/hive/ql/io/parquet/MapredParquetInputFormat.html",
            "stability": "experimental",
            "summary": "InputFormat for Parquet files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 31
          },
          "name": "PARQUET",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.InputFormat"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "Files are broken into lines. Either linefeed or\ncarriage-return are used to signal end of line. Keys are the position in the file, and\nvalues are the line of text.\nJSON & CSV files are examples of this InputFormat",
            "see": "https://hadoop.apache.org/docs/stable/api/org/apache/hadoop/mapred/TextInputFormat.html",
            "stability": "experimental",
            "summary": "An InputFormat for plain text files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 41
          },
          "name": "TEXT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.InputFormat"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 43
          },
          "name": "className",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/data-format:InputFormat"
    },
    "@aws-cdk/aws-glue-alpha.InvalidCharHandlingAction": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_TABLE.html#r_CREATE_EXTERNAL_TABLE-parameters - under _\"TABLE PROPERTIES\"_ > _\"invalid_char_handling\"_",
        "stability": "experimental",
        "summary": "Specifies the action to perform when query results contain invalid UTF-8 character values."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.InvalidCharHandlingAction",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/storage-parameter.ts",
        "line": 33
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Doesn't perform invalid character handling."
          },
          "name": "DISABLED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Cancels queries that return data containing invalid UTF-8 values."
          },
          "name": "FAIL"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Replaces invalid UTF-8 values with null."
          },
          "name": "SET_TO_NULL"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Replaces each value in the row with null."
          },
          "name": "DROP_ROW"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Replaces the invalid character with the replacement character you specify using `REPLACEMENT_CHAR`."
          },
          "name": "REPLACE"
        }
      ],
      "name": "InvalidCharHandlingAction",
      "symbolId": "lib/storage-parameter:InvalidCharHandlingAction"
    },
    "@aws-cdk/aws-glue-alpha.Job": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "@aws-cdk/aws-glue-alpha.JobBase",
      "docs": {
        "custom": {
          "resource": "AWS::Glue::Job",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "experimental",
        "summary": "A Glue Job.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport { aws_iam as iam } from 'aws-cdk-lib';\n\ndeclare const role: iam.Role;\nconst job = glue_alpha.Job.fromJobAttributes(this, 'MyJob', {\n  jobName: 'jobName',\n\n  // the properties below are optional\n  role: role,\n});"
      },
      "fqn": "@aws-cdk/aws-glue-alpha.Job",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "core/lib/resource.ts",
          "line": 156
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "aws-cdk-lib.ResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/jobs/job.ts",
        "line": 457
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Identifies an existing Glue Job from a subset of attributes that can be referenced from within another Stack or Construct."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 466
          },
          "name": "fromJobAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "The scope creating construct (usually `this`)."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct's id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Attributes for the Glue Job we want to import."
              },
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.JobAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.IJob"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "Check no usage of reserved arguments."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 486
          },
          "name": "checkNoReservedArgs",
          "parameters": [
            {
              "name": "defaultArguments",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "optional": true,
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "map"
              }
            }
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 536
          },
          "name": "codeS3ObjectUrl",
          "parameters": [
            {
              "name": "code",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "returns": "String containing the args for the continuous logging command",
            "stability": "experimental",
            "summary": "Setup Continuous Logging Properties."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 504
          },
          "name": "setupContinuousLogging",
          "parameters": [
            {
              "docs": {
                "summary": "The IAM role to use for continuous logging."
              },
              "name": "role",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IRole"
              }
            },
            {
              "docs": {
                "summary": "The properties for continuous logging configuration."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.ContinuousLoggingProps"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "Job",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The IAM role Glue assumes to run this job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 479
          },
          "name": "role",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        }
      ],
      "symbolId": "lib/jobs/job:Job"
    },
    "@aws-cdk/aws-glue-alpha.JobAttributes": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "remarks": "This is only used when using fromJobAttributes\nto identify and reference the existing job.",
        "stability": "experimental",
        "summary": "A subset of Job attributes are required for importing an existing job into a CDK project.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport { aws_iam as iam } from 'aws-cdk-lib';\n\ndeclare const role: iam.Role;\nconst jobAttributes: glue_alpha.JobAttributes = {\n  jobName: 'jobName',\n\n  // the properties below are optional\n  role: role,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.JobAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jobs/job.ts",
        "line": 288
      },
      "name": "JobAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 292
          },
          "name": "jobName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "stability": "experimental",
            "summary": "The IAM role assumed by Glue to run this job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 299
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        }
      ],
      "symbolId": "lib/jobs/job:JobAttributes"
    },
    "@aws-cdk/aws-glue-alpha.JobBase": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "remarks": "JobBase has the subset\nof attributes required to identify and reference an existing Glue Job,\nas well as some CloudWatch metric convenience functions to configure an\nevent-driven flow using the job.",
        "stability": "experimental",
        "summary": "A base class is needed to be able to import existing Jobs into a CDK app to reference as part of a larger stack or construct."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.JobBase",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "core/lib/resource.ts",
          "line": 156
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "aws-cdk-lib.ResourceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.IJob"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/jobs/job.ts",
        "line": 133
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Returns the job arn."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 274
          },
          "name": "buildJobArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "jobName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/glue/latest/dg/monitoring-awsglue-with-cloudwatch-metrics.html",
            "stability": "experimental",
            "summary": "Create a CloudWatch metric."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 221
          },
          "name": "metric",
          "overrides": "@aws-cdk/aws-glue-alpha.IJob",
          "parameters": [
            {
              "docs": {
                "summary": "name of the metric typically prefixed with `glue.driver.`, `glue.<executorId>.` or `glue.ALL.`."
              },
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the metric type."
              },
              "name": "type",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.MetricType"
              }
            },
            {
              "docs": {
                "summary": "metric options."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "This metric is based on the Rule returned by no-args onFailure() call.",
            "stability": "experimental",
            "summary": "Return a CloudWatch Metric indicating job failure."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 248
          },
          "name": "metricFailure",
          "overrides": "@aws-cdk/aws-glue-alpha.IJob",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "This metric is based on the Rule returned by no-args onSuccess() call.",
            "stability": "experimental",
            "summary": "Return a CloudWatch Metric indicating job success."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 239
          },
          "name": "metricSuccess",
          "overrides": "@aws-cdk/aws-glue-alpha.IJob",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "This metric is based on the Rule returned by no-args onTimeout() call.",
            "stability": "experimental",
            "summary": "Return a CloudWatch Metric indicating job timeout."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 257
          },
          "name": "metricTimeout",
          "overrides": "@aws-cdk/aws-glue-alpha.IJob",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/EventTypes.html#glue-event-types",
            "stability": "experimental",
            "summary": "Create a CloudWatch Event Rule for this Glue Job when it's in a given state."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 149
          },
          "name": "onEvent",
          "overrides": "@aws-cdk/aws-glue-alpha.IJob",
          "parameters": [
            {
              "docs": {
                "summary": "construct id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "Note that some values are overridden if provided, these are\n- eventPattern.source = ['aws.glue']\n- eventPattern.detailType = ['Glue Job State Change', 'Glue Job Run Status']\n- eventPattern.detail.jobName = [this.jobName]",
                "summary": "event options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_events.Rule"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return a CloudWatch Event Rule matching FAILED state."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 198
          },
          "name": "onFailure",
          "overrides": "@aws-cdk/aws-glue-alpha.IJob",
          "parameters": [
            {
              "docs": {
                "summary": "construct id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "default is {}.",
                "summary": "optional event options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_events.Rule"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Create a CloudWatch Event Rule for the transition into the input jobState."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 169
          },
          "name": "onStateChange",
          "parameters": [
            {
              "docs": {
                "summary": "construct id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the job state."
              },
              "name": "jobState",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.JobState"
              }
            },
            {
              "docs": {
                "summary": "optional event options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_events.OnEventOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_events.Rule"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Create a CloudWatch Event Rule matching JobState.SUCCEEDED."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 188
          },
          "name": "onSuccess",
          "overrides": "@aws-cdk/aws-glue-alpha.IJob",
          "parameters": [
            {
              "docs": {
                "summary": "construct id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "default is {}.",
                "summary": "optional event options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_events.Rule"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return a CloudWatch Event Rule matching TIMEOUT state."
          },
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 208
          },
          "name": "onTimeout",
          "overrides": "@aws-cdk/aws-glue-alpha.IJob",
          "parameters": [
            {
              "docs": {
                "summary": "construct id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "default is {}.",
                "summary": "optional event options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "aws-cdk-lib.aws_events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_events.Rule"
            }
          }
        }
      ],
      "name": "JobBase",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 136
          },
          "name": "grantPrincipal",
          "overrides": "aws-cdk-lib.aws_iam.IGrantable",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IPrincipal"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 134
          },
          "name": "jobArn",
          "overrides": "@aws-cdk/aws-glue-alpha.IJob",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 135
          },
          "name": "jobName",
          "overrides": "@aws-cdk/aws-glue-alpha.IJob",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/jobs/job:JobBase"
    },
    "@aws-cdk/aws-glue-alpha.JobBookmarksEncryption": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Job bookmarks encryption configuration.",
        "example": "new glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.JobBookmarksEncryption",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/security-configuration.ts",
        "line": 101
      },
      "name": "JobBookmarksEncryption",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Encryption mode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-configuration.ts",
            "line": 105
          },
          "name": "mode",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.JobBookmarksEncryptionMode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "A key will be created if one is not provided.",
            "stability": "experimental",
            "summary": "The KMS key to be used to encrypt the data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-configuration.ts",
            "line": 111
          },
          "name": "kmsKey",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_kms.IKey"
          }
        }
      ],
      "symbolId": "lib/security-configuration:JobBookmarksEncryption"
    },
    "@aws-cdk/aws-glue-alpha.JobBookmarksEncryptionMode": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/glue/latest/webapi/API_JobBookmarksEncryption.html#Glue-Type-JobBookmarksEncryption-JobBookmarksEncryptionMode",
        "stability": "experimental",
        "summary": "Encryption mode for Job Bookmarks.",
        "example": "new glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.JobBookmarksEncryptionMode",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/security-configuration.ts",
        "line": 57
      },
      "members": [
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingClientSideEncryption.html",
            "stability": "experimental",
            "summary": "Client-side encryption (CSE) with an AWS KMS key managed by the account owner."
          },
          "name": "CLIENT_SIDE_KMS"
        }
      ],
      "name": "JobBookmarksEncryptionMode",
      "symbolId": "lib/security-configuration:JobBookmarksEncryptionMode"
    },
    "@aws-cdk/aws-glue-alpha.JobLanguage": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Runtime language of the Glue job."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.JobLanguage",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/constants.ts",
        "line": 180
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Scala."
          },
          "name": "SCALA"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Python."
          },
          "name": "PYTHON"
        }
      ],
      "name": "JobLanguage",
      "symbolId": "lib/constants:JobLanguage"
    },
    "@aws-cdk/aws-glue-alpha.JobProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "JobProps will be used to create new Glue Jobs using this L2 Construct.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { aws_iam as iam } from 'aws-cdk-lib';\nimport { aws_logs as logs } from 'aws-cdk-lib';\n\ndeclare const code: glue_alpha.Code;\ndeclare const connection: glue_alpha.Connection;\ndeclare const logGroup: logs.LogGroup;\ndeclare const role: iam.Role;\ndeclare const securityConfiguration: glue_alpha.SecurityConfiguration;\nconst jobProps: glue_alpha.JobProps = {\n  role: role,\n  script: code,\n\n  // the properties below are optional\n  connections: [connection],\n  continuousLogging: {\n    enabled: false,\n\n    // the properties below are optional\n    conversionPattern: 'conversionPattern',\n    logGroup: logGroup,\n    logStreamPrefix: 'logStreamPrefix',\n    quiet: false,\n  },\n  defaultArguments: {\n    defaultArgumentsKey: 'defaultArguments',\n  },\n  description: 'description',\n  enableProfilingMetrics: false,\n  glueVersion: glue_alpha.GlueVersion.V0_9,\n  jobName: 'jobName',\n  maxConcurrentRuns: 123,\n  maxRetries: 123,\n  numberOfWorkers: 123,\n  securityConfiguration: securityConfiguration,\n  tags: {\n    tagsKey: 'tags',\n  },\n  timeout: cdk.Duration.minutes(30),\n  workerType: glue_alpha.WorkerType.STANDARD,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.JobProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jobs/job.ts",
        "line": 306
      },
      "name": "JobProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/glue/latest/dg/getting-started-access.html",
            "stability": "experimental",
            "summary": "IAM Role (required) IAM Role to use for Glue job execution Must be specified by the developer because the L2 doesn't have visibility into the actions the script(s) takes during the job execution The role must trust the Glue service principal (glue.amazonaws.com) and be granted sufficient permissions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 325
          },
          "name": "role",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Can be uploaded\nfrom the local directory structure using fromAsset\nor referenced via S3 location using fromBucket",
            "stability": "experimental",
            "summary": "Script Code Location (required) Script to run when the Glue job executes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 313
          },
          "name": "script",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.Code"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[] - no connections are added to the job",
            "stability": "experimental",
            "summary": "Connections (optional) List of connections to use for this Glue job Connections are used to connect to other AWS Service or resources within a VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 389
          },
          "name": "connections",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.IConnection"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- continuous logging is enabled.",
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "Enables continuous logging with the specified props."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 450
          },
          "name": "continuousLogging",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ContinuousLoggingProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no arguments",
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html\nfor a list of reserved parameters",
            "stability": "experimental",
            "summary": "Default Arguments (optional) The default arguments for every run of this Glue job, specified as name-value pairs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 380
          },
          "name": "defaultArguments",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no value",
            "stability": "experimental",
            "summary": "Description (optional) Developer-specified description of the Glue job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 341
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no profiling metrics emitted.",
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "Enables the collection of metrics for job profiling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 440
          },
          "name": "enableProfilingMetrics",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "3.0 for ETL",
            "stability": "experimental",
            "summary": "Glue Version The version of Glue to use to execute this job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 431
          },
          "name": "glueVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.GlueVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a name is automatically generated",
            "stability": "experimental",
            "summary": "Name of the Glue job (optional) Developer-specified name of the Glue job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 333
          },
          "name": "jobName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "remarks": "An error is returned when this threshold is reached. The maximum value\nyou can specify is controlled by a service limit.",
            "stability": "experimental",
            "summary": "Max Concurrent Runs (optional) The maximum number of runs this Glue job can concurrently run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 369
          },
          "name": "maxConcurrentRuns",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "0",
            "stability": "experimental",
            "summary": "Max Retries (optional) Maximum number of retry attempts Glue performs if the job fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 397
          },
          "name": "maxRetries",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "10",
            "stability": "experimental",
            "summary": "Number of Workers (optional) Number of workers for Glue to use during job execution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 349
          },
          "name": "numberOfWorkers",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no security configuration.",
            "stability": "experimental",
            "summary": "Security Configuration (optional) Defines the encryption options for the Glue job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 415
          },
          "name": "securityConfiguration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.ISecurityConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{} - no tags",
            "stability": "experimental",
            "summary": "Tags (optional) A list of key:value pairs of tags to apply to this Glue job resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 423
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "2880 (2 days for non-streaming)",
            "remarks": "Specified in minutes.",
            "stability": "experimental",
            "summary": "Timeout (optional) The maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 407
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "WorkerType.G_1X",
            "remarks": "G_4X, G_8X, Z_2X",
            "stability": "experimental",
            "summary": "Worker Type (optional) Type of Worker for Glue to use during job execution Enum options: Standard, G_1X, G_2X, G_025X."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/job.ts",
            "line": 358
          },
          "name": "workerType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.WorkerType"
          }
        }
      ],
      "symbolId": "lib/jobs/job:JobProps"
    },
    "@aws-cdk/aws-glue-alpha.JobState": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/EventTypes.html#glue-event-types for more information.",
        "stability": "experimental",
        "summary": "Job states emitted by Glue to CloudWatch Events."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.JobState",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/constants.ts",
        "line": 65
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "State indicating job run succeeded."
          },
          "name": "SUCCEEDED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "State indicating job run failed."
          },
          "name": "FAILED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "State indicating job run timed out."
          },
          "name": "TIMEOUT"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "State indicating job is starting."
          },
          "name": "STARTING"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "State indicating job is running."
          },
          "name": "RUNNING"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "State indicating job is stopping."
          },
          "name": "STOPPING"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "State indicating job stopped."
          },
          "name": "STOPPED"
        }
      ],
      "name": "JobState",
      "symbolId": "lib/constants:JobState"
    },
    "@aws-cdk/aws-glue-alpha.JobType": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "remarks": "If you need to use a JobType that doesn't exist as a static member, you\ncan instantiate a `JobType` object, e.g: `JobType.of('other name')`.",
        "stability": "experimental",
        "summary": "The job type."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.JobType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/constants.ts",
        "line": 230
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Command for running a Glue Spark job."
          },
          "name": "ETL"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Command for running a Glue Spark streaming job."
          },
          "name": "STREAMING"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Command for running a Glue python shell job."
          },
          "name": "PYTHON_SHELL"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Command for running a Glue Ray job."
          },
          "name": "RAY"
        }
      ],
      "name": "JobType",
      "symbolId": "lib/constants:JobType"
    },
    "@aws-cdk/aws-glue-alpha.MaxCapacity": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "remarks": "A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory.",
        "stability": "experimental",
        "summary": "The number of AWS Glue data processing units (DPUs) that can be allocated when this job runs.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PythonShellJob(stack, 'PythonShellJob', {\n  jobName: 'PythonShellJobCustomName',\n  description: 'This is a description',\n  pythonVersion: glue.PythonVersion.TWO,\n  maxCapacity: glue.MaxCapacity.DPU_1,\n  role,\n  script,\n  glueVersion: glue.GlueVersion.V2_0,\n  continuousLogging: { enabled: false },\n  workerType: glue.WorkerType.G_2X,\n  maxConcurrentRuns: 100,\n  timeout: cdk.Duration.hours(2),\n  connections: [glue.Connection.fromConnectionName(stack, 'Connection', 'connectionName')],\n  securityConfiguration: glue.SecurityConfiguration.fromSecurityConfigurationName(stack, 'SecurityConfig', 'securityConfigName'),\n  tags: {\n    FirstTagName: 'FirstTagValue',\n    SecondTagName: 'SecondTagValue',\n    XTagName: 'XTagValue',\n  },\n  numberOfWorkers: 2,\n  maxRetries: 2,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.MaxCapacity",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/constants.ts",
        "line": 256
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "DPU value of 1/16th."
          },
          "name": "DPU_1_16TH"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "DPU value of 1."
          },
          "name": "DPU_1"
        }
      ],
      "name": "MaxCapacity",
      "symbolId": "lib/constants:MaxCapacity"
    },
    "@aws-cdk/aws-glue-alpha.MetricType": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/glue/latest/dg/monitoring-awsglue-with-cloudwatch-metrics.html",
        "stability": "experimental",
        "summary": "The Glue CloudWatch metric type."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.MetricType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/constants.ts",
        "line": 107
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "A value at a point in time."
          },
          "name": "GAUGE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "An aggregate number."
          },
          "name": "COUNT"
        }
      ],
      "name": "MetricType",
      "symbolId": "lib/constants:MetricType"
    },
    "@aws-cdk/aws-glue-alpha.NotifyEventTriggerOptions": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for configuring an Event Bridge based Glue Trigger.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { aws_glue as glue } from 'aws-cdk-lib';\n\ndeclare const cfnCrawler: glue.CfnCrawler;\ndeclare const job: glue_alpha.Job;\ndeclare const securityConfiguration: glue_alpha.SecurityConfiguration;\nconst notifyEventTriggerOptions: glue_alpha.NotifyEventTriggerOptions = {\n  actions: [{\n    arguments: {\n      argumentsKey: 'arguments',\n    },\n    crawler: cfnCrawler,\n    job: job,\n    securityConfiguration: securityConfiguration,\n    timeout: cdk.Duration.minutes(30),\n  }],\n\n  // the properties below are optional\n  description: 'description',\n  eventBatchingCondition: {\n    batchSize: 123,\n\n    // the properties below are optional\n    batchWindow: cdk.Duration.minutes(30),\n  },\n  name: 'name',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.NotifyEventTriggerOptions",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.TriggerOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/triggers/trigger-options.ts",
        "line": 213
      },
      "name": "NotifyEventTriggerOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no batch condition",
            "stability": "experimental",
            "summary": "Batch condition for the trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 219
          },
          "name": "eventBatchingCondition",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.EventBatchingCondition"
          }
        }
      ],
      "symbolId": "lib/triggers/trigger-options:NotifyEventTriggerOptions"
    },
    "@aws-cdk/aws-glue-alpha.NumericOverflowHandlingAction": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_TABLE.html#r_CREATE_EXTERNAL_TABLE-parameters - under _\"TABLE PROPERTIES\"_ > _\"numeric_overflow_handling\"_",
        "stability": "experimental",
        "summary": "Specifies the action to perform when ORC data contains an integer (for example, BIGINT or int64) that is larger than the column definition (for example, SMALLINT or int16)."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.NumericOverflowHandlingAction",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/storage-parameter.ts",
        "line": 65
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Invalid character handling is turned off."
          },
          "name": "DISABLED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Cancel the query when the data includes invalid characters."
          },
          "name": "FAIL"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Set invalid characters to null."
          },
          "name": "SET_TO_NULL"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Set each value in the row to null."
          },
          "name": "DROP_ROW"
        }
      ],
      "name": "NumericOverflowHandlingAction",
      "symbolId": "lib/storage-parameter:NumericOverflowHandlingAction"
    },
    "@aws-cdk/aws-glue-alpha.OnDemandTriggerOptions": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for configuring an on-demand Glue Trigger.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { aws_glue as glue } from 'aws-cdk-lib';\n\ndeclare const cfnCrawler: glue.CfnCrawler;\ndeclare const job: glue_alpha.Job;\ndeclare const securityConfiguration: glue_alpha.SecurityConfiguration;\nconst onDemandTriggerOptions: glue_alpha.OnDemandTriggerOptions = {\n  actions: [{\n    arguments: {\n      argumentsKey: 'arguments',\n    },\n    crawler: cfnCrawler,\n    job: job,\n    securityConfiguration: securityConfiguration,\n    timeout: cdk.Duration.minutes(30),\n  }],\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.OnDemandTriggerOptions",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.TriggerOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/triggers/trigger-options.ts",
        "line": 181
      },
      "name": "OnDemandTriggerOptions",
      "symbolId": "lib/triggers/trigger-options:OnDemandTriggerOptions"
    },
    "@aws-cdk/aws-glue-alpha.OrcColumnMappingType": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_TABLE.html#r_CREATE_EXTERNAL_TABLE-parameters - under _\"TABLE PROPERTIES\"_ > _\"orc.schema.resolution\"_",
        "stability": "experimental",
        "summary": "Specifies how to map columns when the table uses ORC data format."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.OrcColumnMappingType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/storage-parameter.ts",
        "line": 200
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Map columns by name."
          },
          "name": "NAME"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Map columns by position."
          },
          "name": "POSITION"
        }
      ],
      "name": "OrcColumnMappingType",
      "symbolId": "lib/storage-parameter:OrcColumnMappingType"
    },
    "@aws-cdk/aws-glue-alpha.OutputFormat": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Absolute class name of the Hadoop `OutputFormat` to use when writing table files.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nconst outputFormat = new glue_alpha.OutputFormat('className');",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.OutputFormat",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/data-format.ts",
          "line": 78
        },
        "parameters": [
          {
            "name": "className",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/data-format.ts",
        "line": 49
      },
      "name": "OutputFormat",
      "properties": [
        {
          "const": true,
          "docs": {
            "see": "https://svn.apache.org/repos/infra/websites/production/hive/content/javadocs/r3.1.3/api/org/apache/hadoop/hive/ql/io/avro/AvroContainerOutputFormat.html",
            "stability": "experimental",
            "summary": "OutputFormat for Avro files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 62
          },
          "name": "AVRO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.InputFormat"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://svn.apache.org/repos/infra/websites/production/hive/content/javadocs/r3.1.3/api/org/apache/hadoop/hive/ql/io/HiveIgnoreKeyTextOutputFormat.html",
            "stability": "experimental",
            "summary": "Writes text data with a null key (value only)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 55
          },
          "name": "HIVE_IGNORE_KEY_TEXT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.OutputFormat"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://svn.apache.org/repos/infra/websites/production/hive/content/javadocs/r3.1.3/api/org/apache/hadoop/hive/ql/io/orc/OrcOutputFormat.html",
            "stability": "experimental",
            "summary": "OutputFormat for Orc files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 69
          },
          "name": "ORC",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.InputFormat"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://svn.apache.org/repos/infra/websites/production/hive/content/javadocs/r3.1.3/api/org/apache/hadoop/hive/ql/io/parquet/MapredParquetOutputFormat.html",
            "stability": "experimental",
            "summary": "OutputFormat for Parquet files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 76
          },
          "name": "PARQUET",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.OutputFormat"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 78
          },
          "name": "className",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/data-format:OutputFormat"
    },
    "@aws-cdk/aws-glue-alpha.PartitionIndex": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties of a Partition Index.",
        "example": "declare const myTable: glue.Table;\nmyTable.addPartitionIndex({\n  indexName: 'my-index',\n  keyNames: ['year'],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.PartitionIndex",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/table-base.ts",
        "line": 15
      },
      "name": "PartitionIndex",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The names must correspond to a name in the\ntable's partition keys.",
            "stability": "experimental",
            "summary": "The partition key names that comprise the partition index."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 28
          },
          "name": "keyNames",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a name will be generated for you.",
            "stability": "experimental",
            "summary": "The name of the partition index."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 21
          },
          "name": "indexName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/table-base:PartitionIndex"
    },
    "@aws-cdk/aws-glue-alpha.Predicate": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Represents a trigger predicate.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\n\ndeclare const job: glue_alpha.Job;\nconst predicate: glue_alpha.Predicate = {\n  conditions: [{\n    crawlerName: 'crawlerName',\n    crawlState: glue_alpha.CrawlerState.RUNNING,\n    job: job,\n    logicalOperator: glue_alpha.ConditionLogicalOperator.EQUALS,\n    state: glue_alpha.JobState.SUCCEEDED,\n  }],\n  logical: glue_alpha.PredicateLogical.AND,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.Predicate",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/triggers/trigger-options.ts",
        "line": 81
      },
      "name": "Predicate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no conditions are provided",
            "stability": "experimental",
            "summary": "A list of the conditions that determine when the trigger will fire."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 94
          },
          "name": "conditions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Condition"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- ConditionLogical.AND if multiple conditions are provided, no logical operator if only one condition",
            "stability": "experimental",
            "summary": "The logical operator to be applied to the conditions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 87
          },
          "name": "logical",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.PredicateLogical"
          }
        }
      ],
      "symbolId": "lib/triggers/trigger-options:Predicate"
    },
    "@aws-cdk/aws-glue-alpha.PredicateLogical": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-glue-alpha.PredicateLogical",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/constants.ts",
        "line": 271
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "All conditions must be true for the predicate to be true."
          },
          "name": "AND"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "At least one condition must be true for the predicate to be true."
          },
          "name": "ANY"
        }
      ],
      "name": "PredicateLogical",
      "symbolId": "lib/constants:PredicateLogical"
    },
    "@aws-cdk/aws-glue-alpha.PySparkEtlJob": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "@aws-cdk/aws-glue-alpha.SparkJob",
      "docs": {
        "remarks": "ETL jobs support pySpark and Scala languages, for which there are separate\nbut similar constructors. ETL jobs default to the G2 worker type, but you\ncan override this default with other supported worker type values\n(G1, G2, G4 and G8). ETL jobs defaults to Glue version 4.0, which you can\noverride to 3.0. The following ETL features are enabled by default:\n—enable-metrics, —enable-spark-ui, —enable-continuous-cloudwatch-log.\nYou can find more details about version, worker type and other features\nin Glue's public documentation.",
        "stability": "experimental",
        "summary": "PySpark ETL Jobs class.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PySparkEtlJob(stack, 'PySparkETLJob', {\n  role,\n  script,\n  jobName: 'PySparkETLJob',\n  jobRunQueuingEnabled: true\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.PySparkEtlJob",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "PySparkEtlJob constructor."
        },
        "locationInModule": {
          "filename": "lib/jobs/pyspark-etl-job.ts",
          "line": 81
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.PySparkEtlJobProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/jobs/pyspark-etl-job.ts",
        "line": 71
      },
      "name": "PySparkEtlJob",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Uniquely identifies this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-etl-job.ts",
            "line": 74
          },
          "name": "PROPERTY_INJECTION_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-etl-job.ts",
            "line": 75
          },
          "name": "jobArn",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-etl-job.ts",
            "line": 76
          },
          "name": "jobName",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/jobs/pyspark-etl-job:PySparkEtlJob"
    },
    "@aws-cdk/aws-glue-alpha.PySparkEtlJobProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for creating a Python Spark ETL job.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PySparkEtlJob(stack, 'PySparkETLJob', {\n  role,\n  script,\n  jobName: 'PySparkETLJob',\n  jobRunQueuingEnabled: true\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.PySparkEtlJobProps",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.SparkJobProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jobs/pyspark-etl-job.ts",
        "line": 12
      },
      "name": "PySparkEtlJobProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no extra files specified.",
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "Additional files, such as configuration files that AWS Glue copies to the working directory of your script before executing it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-etl-job.ts",
            "line": 28
          },
          "name": "extraFiles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no extra jar files",
            "stability": "experimental",
            "summary": "Extra Jars S3 URL (optional) S3 URL where additional jar dependencies are located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-etl-job.ts",
            "line": 35
          },
          "name": "extraJars",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false - priority is not given to user-provided jars",
            "see": " `--user-jars-first` in https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "Setting this value to true prioritizes the customer's extra JAR files in the classpath."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-etl-job.ts",
            "line": 44
          },
          "name": "extraJarsFirst",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no extra files",
            "stability": "experimental",
            "summary": "Extra Python Files S3 URL (optional) S3 URL where additional python dependencies are located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-etl-job.ts",
            "line": 19
          },
          "name": "extraPythonFiles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "A value of true means job run queuing is enabled for the job runs.\nIf false or not populated, the job runs will not be considered for queueing.\nIf this field does not match the value set in the job run, then the value from\nthe job run field will be used. This property must be set to false for flex jobs.\nIf this property is enabled, maxRetries must be set to zero.",
            "stability": "experimental",
            "summary": "Specifies whether job run queuing is enabled for the job runs for this job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-etl-job.ts",
            "line": 56
          },
          "name": "jobRunQueuingEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/jobs/pyspark-etl-job:PySparkEtlJobProps"
    },
    "@aws-cdk/aws-glue-alpha.PySparkFlexEtlJob": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "@aws-cdk/aws-glue-alpha.SparkJob",
      "docs": {
        "remarks": "Flex jobs supports Python and Scala language.\nThe flexible execution class is appropriate for non-urgent jobs such as\npre-production jobs, testing, and one-time data loads.\nFlexible job runs are supported for jobs using AWS Glue version 3.0 or later and G.1X or\nG.2X worker types but will default to the latest version of Glue (currently Glue 3.0.)\n\nSimilar to ETL, we’ll enable these features: —enable-metrics, —enable-spark-ui,\n—enable-continuous-cloudwatch-log",
        "stability": "experimental",
        "summary": "Flex Jobs class.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PySparkFlexEtlJob(stack, 'ImportedJob', { role, script });",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.PySparkFlexEtlJob",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "PySparkFlexEtlJob constructor."
        },
        "locationInModule": {
          "filename": "lib/jobs/pyspark-flex-etl-job.ts",
          "line": 77
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.PySparkFlexEtlJobProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/jobs/pyspark-flex-etl-job.ts",
        "line": 67
      },
      "name": "PySparkFlexEtlJob",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Uniquely identifies this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-flex-etl-job.ts",
            "line": 70
          },
          "name": "PROPERTY_INJECTION_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-flex-etl-job.ts",
            "line": 71
          },
          "name": "jobArn",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-flex-etl-job.ts",
            "line": 72
          },
          "name": "jobName",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/jobs/pyspark-flex-etl-job:PySparkFlexEtlJob"
    },
    "@aws-cdk/aws-glue-alpha.PySparkFlexEtlJobProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for PySparkFlexEtlJob.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PySparkFlexEtlJob(stack, 'ImportedJob', { role, script });",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.PySparkFlexEtlJobProps",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.SparkJobProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jobs/pyspark-flex-etl-job.ts",
        "line": 13
      },
      "name": "PySparkFlexEtlJobProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no extra files specified.",
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "Additional files, such as configuration files that AWS Glue copies to the working directory of your script before executing it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-flex-etl-job.ts",
            "line": 36
          },
          "name": "extraFiles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no extra jar files",
            "stability": "experimental",
            "summary": "Extra Jars S3 URL (optional) S3 URL where additional jar dependencies are located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-flex-etl-job.ts",
            "line": 43
          },
          "name": "extraJars",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false - priority is not given to user-provided jars",
            "see": " `--user-jars-first` in https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "Setting this value to true prioritizes the customer's extra JAR files in the classpath."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-flex-etl-job.ts",
            "line": 52
          },
          "name": "extraJarsFirst",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no extra files",
            "stability": "experimental",
            "summary": "Extra Python Files S3 URL (optional) S3 URL where additional python dependencies are located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-flex-etl-job.ts",
            "line": 27
          },
          "name": "extraPythonFiles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "remarks": "After a job run starts, the number of minutes to wait before sending a job run delay notification.",
            "stability": "experimental",
            "summary": "Specifies configuration properties of a notification (optional)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-flex-etl-job.ts",
            "line": 19
          },
          "name": "notifyDelayAfter",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.Duration"
          }
        }
      ],
      "symbolId": "lib/jobs/pyspark-flex-etl-job:PySparkFlexEtlJobProps"
    },
    "@aws-cdk/aws-glue-alpha.PySparkStreamingJob": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "@aws-cdk/aws-glue-alpha.SparkJob",
      "docs": {
        "remarks": "A Streaming job is similar to an ETL job, except that it performs ETL on data streams\nusing the Apache Spark Structured Streaming framework.\nThese jobs will default to use Python 3.9.\n\nSimilar to ETL jobs, streaming job supports Scala and Python languages. Similar to ETL,\nit supports G1 and G2 worker type and 2.0, 3.0 and 4.0 version. We’ll default to G2 worker\nand 4.0 version for streaming jobs which developers can override.\nWe will enable —enable-metrics, —enable-spark-ui, —enable-continuous-cloudwatch-log.",
        "stability": "experimental",
        "summary": "Python Spark Streaming Jobs class.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PySparkStreamingJob(stack, 'ImportedJob', { role, script });",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.PySparkStreamingJob",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "PySparkStreamingJob constructor."
        },
        "locationInModule": {
          "filename": "lib/jobs/pyspark-streaming-job.ts",
          "line": 81
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.PySparkStreamingJobProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/jobs/pyspark-streaming-job.ts",
        "line": 71
      },
      "name": "PySparkStreamingJob",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Uniquely identifies this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-streaming-job.ts",
            "line": 74
          },
          "name": "PROPERTY_INJECTION_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-streaming-job.ts",
            "line": 75
          },
          "name": "jobArn",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-streaming-job.ts",
            "line": 76
          },
          "name": "jobName",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/jobs/pyspark-streaming-job:PySparkStreamingJob"
    },
    "@aws-cdk/aws-glue-alpha.PySparkStreamingJobProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for creating a Python Spark ETL job.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PySparkStreamingJob(stack, 'ImportedJob', { role, script });",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.PySparkStreamingJobProps",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.SparkJobProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jobs/pyspark-streaming-job.ts",
        "line": 12
      },
      "name": "PySparkStreamingJobProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no extra files specified.",
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "Additional files, such as configuration files that AWS Glue copies to the working directory of your script before executing it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-streaming-job.ts",
            "line": 28
          },
          "name": "extraFiles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no extra jar files",
            "stability": "experimental",
            "summary": "Extra Jars S3 URL (optional) S3 URL where additional jar dependencies are located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-streaming-job.ts",
            "line": 35
          },
          "name": "extraJars",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false - priority is not given to user-provided jars",
            "see": " `--user-jars-first` in https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "Setting this value to true prioritizes the customer's extra JAR files in the classpath."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-streaming-job.ts",
            "line": 44
          },
          "name": "extraJarsFirst",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no extra files",
            "stability": "experimental",
            "summary": "Extra Python Files S3 URL (optional) S3 URL where additional python dependencies are located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-streaming-job.ts",
            "line": 19
          },
          "name": "extraPythonFiles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no job run queuing",
            "remarks": "A value of true means job run queuing is enabled for the job runs.\nIf false or not populated, the job runs will not be considered for queueing.\nIf this field does not match the value set in the job run, then the value from\nthe job run field will be used. This property must be set to false for flex jobs.\nIf this property is enabled, maxRetries must be set to zero.",
            "stability": "experimental",
            "summary": "Specifies whether job run queuing is enabled for the job runs for this job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/pyspark-streaming-job.ts",
            "line": 56
          },
          "name": "jobRunQueuingEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/jobs/pyspark-streaming-job:PySparkStreamingJobProps"
    },
    "@aws-cdk/aws-glue-alpha.PythonShellJob": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "@aws-cdk/aws-glue-alpha.Job",
      "docs": {
        "remarks": "A Python shell job runs Python scripts as a shell and supports a Python version that\ndepends on the AWS Glue version you are using.\nThis can be used to schedule and run tasks that don't require an Apache Spark environment.",
        "stability": "experimental",
        "summary": "Python Shell Jobs class.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PythonShellJob(stack, 'ImportedJob', { role, script });",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.PythonShellJob",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "PythonShellJob constructor."
        },
        "locationInModule": {
          "filename": "lib/jobs/python-shell-job.ts",
          "line": 59
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.PythonShellJobProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/jobs/python-shell-job.ts",
        "line": 47
      },
      "name": "PythonShellJob",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Uniquely identifies this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/python-shell-job.ts",
            "line": 50
          },
          "name": "PROPERTY_INJECTION_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/python-shell-job.ts",
            "line": 54
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/python-shell-job.ts",
            "line": 51
          },
          "name": "jobArn",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/python-shell-job.ts",
            "line": 52
          },
          "name": "jobName",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The IAM role Glue assumes to run this job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/python-shell-job.ts",
            "line": 53
          },
          "name": "role",
          "overrides": "@aws-cdk/aws-glue-alpha.Job",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        }
      ],
      "symbolId": "lib/jobs/python-shell-job:PythonShellJob"
    },
    "@aws-cdk/aws-glue-alpha.PythonShellJobProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for creating a Python Shell job.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PythonShellJob(stack, 'ImportedJob', { role, script });",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.PythonShellJobProps",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.JobProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jobs/python-shell-job.ts",
        "line": 12
      },
      "name": "PythonShellJobProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "A value of true means job run queuing is enabled for the job runs.\nIf false or not populated, the job runs will not be considered for queueing.\nIf this field does not match the value set in the job run, then the value from\nthe job run field will be used. This property must be set to false for flex jobs.\nIf this property is enabled, maxRetries must be set to zero.",
            "stability": "experimental",
            "summary": "Specifies whether job run queuing is enabled for the job runs for this job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/python-shell-job.ts",
            "line": 37
          },
          "name": "jobRunQueuingEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "0.0625",
            "stability": "experimental",
            "summary": "The total number of DPU to assign to the Python Job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/python-shell-job.ts",
            "line": 25
          },
          "name": "maxCapacity",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.MaxCapacity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "3.9 for Shell Jobs",
            "stability": "experimental",
            "summary": "Python Version The version of Python to use to execute this job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/python-shell-job.ts",
            "line": 18
          },
          "name": "pythonVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.PythonVersion"
          }
        }
      ],
      "symbolId": "lib/jobs/python-shell-job:PythonShellJobProps"
    },
    "@aws-cdk/aws-glue-alpha.PythonVersion": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Python version.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PythonShellJob(stack, 'PythonShellJob', {\n  jobName: 'PythonShellJobCustomName',\n  description: 'This is a description',\n  pythonVersion: glue.PythonVersion.TWO,\n  maxCapacity: glue.MaxCapacity.DPU_1,\n  role,\n  script,\n  glueVersion: glue.GlueVersion.V2_0,\n  continuousLogging: { enabled: false },\n  workerType: glue.WorkerType.G_2X,\n  maxConcurrentRuns: 100,\n  timeout: cdk.Duration.hours(2),\n  connections: [glue.Connection.fromConnectionName(stack, 'Connection', 'connectionName')],\n  securityConfiguration: glue.SecurityConfiguration.fromSecurityConfigurationName(stack, 'SecurityConfig', 'securityConfigName'),\n  tags: {\n    FirstTagName: 'FirstTagValue',\n    SecondTagName: 'SecondTagValue',\n    XTagName: 'XTagValue',\n  },\n  numberOfWorkers: 2,\n  maxRetries: 2,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.PythonVersion",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/constants.ts",
        "line": 195
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Python 2 (the exact version depends on GlueVersion and JobCommand used)."
          },
          "name": "TWO"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Python 3 (the exact version depends on GlueVersion and JobCommand used)."
          },
          "name": "THREE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Python 3.9 (the exact version depends on GlueVersion and JobCommand used)."
          },
          "name": "THREE_NINE"
        }
      ],
      "name": "PythonVersion",
      "symbolId": "lib/constants:PythonVersion"
    },
    "@aws-cdk/aws-glue-alpha.RayJob": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "@aws-cdk/aws-glue-alpha.Job",
      "docs": {
        "remarks": "Glue Ray jobs use worker type Z.2X and Glue version 4.0.\nThese are not overrideable since these are the only configuration that\nGlue Ray jobs currently support. The runtime defaults to Ray2.4 and min\nworkers defaults to 3.",
        "stability": "experimental",
        "summary": "Ray Jobs class.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.RayJob(stack, 'ImportedJob', { role, script });",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.RayJob",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "RayJob constructor."
        },
        "locationInModule": {
          "filename": "lib/jobs/ray-job.ts",
          "line": 53
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.RayJobProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/jobs/ray-job.ts",
        "line": 41
      },
      "name": "RayJob",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Uniquely identifies this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/ray-job.ts",
            "line": 44
          },
          "name": "PROPERTY_INJECTION_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/ray-job.ts",
            "line": 48
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/ray-job.ts",
            "line": 45
          },
          "name": "jobArn",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/ray-job.ts",
            "line": 46
          },
          "name": "jobName",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The IAM role Glue assumes to run this job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/ray-job.ts",
            "line": 47
          },
          "name": "role",
          "overrides": "@aws-cdk/aws-glue-alpha.Job",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        }
      ],
      "symbolId": "lib/jobs/ray-job:RayJob"
    },
    "@aws-cdk/aws-glue-alpha.RayJobProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for creating a Ray Glue job.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.RayJob(stack, 'ImportedJob', { role, script });",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.RayJobProps",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.JobProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jobs/ray-job.ts",
        "line": 12
      },
      "name": "RayJobProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no job run queuing",
            "remarks": "A value of true means job run queuing is enabled for the job runs.\nIf false or not populated, the job runs will not be considered for queueing.\nIf this field does not match the value set in the job run, then the value from\nthe job run field will be used. This property must be set to false for flex jobs.\nIf this property is enabled, maxRetries must be set to zero.",
            "stability": "experimental",
            "summary": "Specifies whether job run queuing is enabled for the job runs for this job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/ray-job.ts",
            "line": 30
          },
          "name": "jobRunQueuingEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Runtime version will default to Ray2.4",
            "stability": "experimental",
            "summary": "Sets the Ray runtime environment version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/ray-job.ts",
            "line": 18
          },
          "name": "runtime",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.Runtime"
          }
        }
      ],
      "symbolId": "lib/jobs/ray-job:RayJobProps"
    },
    "@aws-cdk/aws-glue-alpha.Runtime": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "AWS Glue runtime determines the runtime engine of the job.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.RayJob(stack, 'ImportedJob', {\n  role,\n  script,\n  jobName: 'RayCustomJobName',\n  description: 'This is a description',\n  workerType: glue.WorkerType.Z_2X,\n  numberOfWorkers: 5,\n  runtime: glue.Runtime.RAY_TWO_FOUR,\n  maxRetries: 3,\n  maxConcurrentRuns: 100,\n  timeout: cdk.Duration.hours(2),\n  connections: [glue.Connection.fromConnectionName(stack, 'Connection', 'connectionName')],\n  securityConfiguration: glue.SecurityConfiguration.fromSecurityConfigurationName(stack, 'SecurityConfig', 'securityConfigName'),\n  tags: {\n    FirstTagName: 'FirstTagValue',\n    SecondTagName: 'SecondTagValue',\n    XTagName: 'XTagValue',\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.Runtime",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/constants.ts",
        "line": 217
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Runtime for a Glue for Ray 2.4."
          },
          "name": "RAY_TWO_FOUR"
        }
      ],
      "name": "Runtime",
      "symbolId": "lib/constants:Runtime"
    },
    "@aws-cdk/aws-glue-alpha.S3Code": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "@aws-cdk/aws-glue-alpha.Code",
      "docs": {
        "stability": "experimental",
        "summary": "Glue job Code from an S3 bucket.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport { aws_s3 as s3 } from 'aws-cdk-lib';\n\ndeclare const bucket: s3.Bucket;\nconst s3Code = new glue_alpha.S3Code(bucket, 'key');",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.S3Code",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/code.ts",
          "line": 41
        },
        "parameters": [
          {
            "name": "bucket",
            "type": {
              "fqn": "aws-cdk-lib.aws_s3.IBucket"
            }
          },
          {
            "name": "key",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/code.ts",
        "line": 40
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Called when the Job is initialized to allow this object to bind."
          },
          "locationInModule": {
            "filename": "lib/code.ts",
            "line": 45
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-glue-alpha.Code",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "grantable",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.CodeConfig"
            }
          }
        }
      ],
      "name": "S3Code",
      "symbolId": "lib/code:S3Code"
    },
    "@aws-cdk/aws-glue-alpha.S3Encryption": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "S3 encryption configuration.",
        "example": "new glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.S3Encryption",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/security-configuration.ts",
        "line": 69
      },
      "name": "S3Encryption",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Encryption mode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-configuration.ts",
            "line": 73
          },
          "name": "mode",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.S3EncryptionMode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "no kms key if mode = S3_MANAGED. A key will be created if one is not provided and mode = KMS.",
            "stability": "experimental",
            "summary": "The KMS key to be used to encrypt the data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-configuration.ts",
            "line": 79
          },
          "name": "kmsKey",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_kms.IKey"
          }
        }
      ],
      "symbolId": "lib/security-configuration:S3Encryption"
    },
    "@aws-cdk/aws-glue-alpha.S3EncryptionMode": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/glue/latest/webapi/API_S3Encryption.html#Glue-Type-S3Encryption-S3EncryptionMode",
        "stability": "experimental",
        "summary": "Encryption mode for S3.",
        "example": "new glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.S3EncryptionMode",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/security-configuration.ts",
        "line": 24
      },
      "members": [
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html",
            "stability": "experimental",
            "summary": "Server side encryption (SSE) with an Amazon S3-managed key."
          },
          "name": "S3_MANAGED"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html",
            "stability": "experimental",
            "summary": "Server-side encryption (SSE) with an AWS KMS key managed by the account owner."
          },
          "name": "KMS"
        }
      ],
      "name": "S3EncryptionMode",
      "symbolId": "lib/security-configuration:S3EncryptionMode"
    },
    "@aws-cdk/aws-glue-alpha.S3Table": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "@aws-cdk/aws-glue-alpha.TableBase",
      "docs": {
        "custom": {
          "resource": "AWS::Glue::Table",
          "exampleMetadata": "infused"
        },
        "stability": "experimental",
        "summary": "A Glue table that targets a S3 dataset.",
        "example": "declare const myDatabase: glue.Database;\nnew glue.S3Table(this, 'MyTable', {\n  database: myDatabase,\n  columns: [{\n      name: 'col1',\n      type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n      name: 'year',\n      type: glue.Schema.SMALL_INT,\n  }, {\n      name: 'month',\n      type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n  enablePartitionFiltering: true,\n});"
      },
      "fqn": "@aws-cdk/aws-glue-alpha.S3Table",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/s3-table.ts",
          "line": 126
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.S3TableProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/s3-table.ts",
        "line": 85
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/s3-table.ts",
            "line": 231
          },
          "name": "generateS3PrefixForGrant",
          "protected": true,
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grant read permissions to the table and the underlying data stored in S3 to an IAM principal."
          },
          "locationInModule": {
            "filename": "lib/s3-table.ts",
            "line": 197
          },
          "name": "grantRead",
          "overrides": "@aws-cdk/aws-glue-alpha.TableBase",
          "parameters": [
            {
              "docs": {
                "summary": "the principal."
              },
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grant read and write permissions to the table and the underlying data stored in S3 to an IAM principal."
          },
          "locationInModule": {
            "filename": "lib/s3-table.ts",
            "line": 223
          },
          "name": "grantReadWrite",
          "overrides": "@aws-cdk/aws-glue-alpha.TableBase",
          "parameters": [
            {
              "docs": {
                "summary": "the principal."
              },
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grant write permissions to the table and the underlying data stored in S3 to an IAM principal."
          },
          "locationInModule": {
            "filename": "lib/s3-table.ts",
            "line": 210
          },
          "name": "grantWrite",
          "overrides": "@aws-cdk/aws-glue-alpha.TableBase",
          "parameters": [
            {
              "docs": {
                "summary": "the principal."
              },
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_iam.Grant"
            }
          }
        }
      ],
      "name": "S3Table",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Uniquely identifies this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3-table.ts",
            "line": 88
          },
          "name": "PROPERTY_INJECTION_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "S3 bucket in which the table's data resides."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3-table.ts",
            "line": 102
          },
          "name": "bucket",
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.IBucket"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The type of encryption enabled for the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3-table.ts",
            "line": 112
          },
          "name": "encryption",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.TableEncryption"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "S3 Key Prefix under which this table's files are stored in S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3-table.ts",
            "line": 107
          },
          "name": "s3Prefix",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "ARN of this table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3-table.ts",
            "line": 97
          },
          "name": "tableArn",
          "overrides": "@aws-cdk/aws-glue-alpha.TableBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Name of this table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3-table.ts",
            "line": 92
          },
          "name": "tableName",
          "overrides": "@aws-cdk/aws-glue-alpha.TableBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3-table.ts",
            "line": 124
          },
          "name": "tableResource",
          "overrides": "@aws-cdk/aws-glue-alpha.TableBase",
          "protected": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_glue.CfnTable"
          }
        },
        {
          "docs": {
            "remarks": "Otherwise, `undefined`.",
            "stability": "experimental",
            "summary": "The KMS key used to secure the data if `encryption` is set to `CSE-KMS` or `SSE-KMS`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3-table.ts",
            "line": 117
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_kms.IKey"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "This table's partition indexes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3-table.ts",
            "line": 122
          },
          "name": "partitionIndexes",
          "optional": true,
          "overrides": "@aws-cdk/aws-glue-alpha.TableBase",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.PartitionIndex"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/s3-table:S3Table"
    },
    "@aws-cdk/aws-glue-alpha.S3TableProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "example": "declare const myDatabase: glue.Database;\nnew glue.S3Table(this, 'MyTable', {\n  database: myDatabase,\n  columns: [{\n      name: 'col1',\n      type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n      name: 'year',\n      type: glue.Schema.SMALL_INT,\n  }, {\n      name: 'month',\n      type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n  enablePartitionFiltering: true,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.S3TableProps",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.TableBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3-table.ts",
        "line": 44
      },
      "name": "S3TableProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "one is created for you",
            "stability": "experimental",
            "summary": "S3 bucket in which to store data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3-table.ts",
            "line": 50
          },
          "name": "bucket",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "BucketEncryption.S3_MANAGED",
            "remarks": "You can only provide this option if you are not explicitly passing in a bucket.\n\nIf you choose `SSE-KMS`, you *can* provide an un-managed KMS key with `encryptionKey`.\nIf you choose `CSE-KMS`, you *must* provide an un-managed KMS key with `encryptionKey`.",
            "stability": "experimental",
            "summary": "The kind of encryption to secure the data with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3-table.ts",
            "line": 69
          },
          "name": "encryption",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.TableEncryption"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "key is managed by KMS.",
            "remarks": "The `encryption` property must be `SSE-KMS` or `CSE-KMS`.",
            "stability": "experimental",
            "summary": "External KMS key to use for bucket encryption."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3-table.ts",
            "line": 78
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No prefix. The data will be stored under the root of the bucket.",
            "stability": "experimental",
            "summary": "S3 prefix under which table objects are stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3-table.ts",
            "line": 57
          },
          "name": "s3Prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/s3-table:S3TableProps"
    },
    "@aws-cdk/aws-glue-alpha.ScalaSparkEtlJob": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "@aws-cdk/aws-glue-alpha.SparkJob",
      "docs": {
        "remarks": "ETL jobs support pySpark and Scala languages, for which there are separate\nbut similar constructors. ETL jobs default to the G2 worker type, but you\ncan override this default with other supported worker type values\n(G1, G2, G4 and G8). ETL jobs defaults to Glue version 4.0, which you can\noverride to 3.0. The following ETL features are enabled by default:\n—enable-metrics, —enable-spark-ui, —enable-continuous-cloudwatch-log.\nYou can find more details about version, worker type and other features\nin Glue's public documentation.",
        "stability": "experimental",
        "summary": "Spark ETL Jobs class.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { aws_iam as iam } from 'aws-cdk-lib';\nimport { aws_logs as logs } from 'aws-cdk-lib';\nimport { aws_s3 as s3 } from 'aws-cdk-lib';\n\ndeclare const bucket: s3.Bucket;\ndeclare const code: glue_alpha.Code;\ndeclare const connection: glue_alpha.Connection;\ndeclare const logGroup: logs.LogGroup;\ndeclare const role: iam.Role;\ndeclare const securityConfiguration: glue_alpha.SecurityConfiguration;\nconst scalaSparkEtlJob = new glue_alpha.ScalaSparkEtlJob(this, 'MyScalaSparkEtlJob', {\n  className: 'className',\n  role: role,\n  script: code,\n\n  // the properties below are optional\n  connections: [connection],\n  continuousLogging: {\n    enabled: false,\n\n    // the properties below are optional\n    conversionPattern: 'conversionPattern',\n    logGroup: logGroup,\n    logStreamPrefix: 'logStreamPrefix',\n    quiet: false,\n  },\n  defaultArguments: {\n    defaultArgumentsKey: 'defaultArguments',\n  },\n  description: 'description',\n  enableProfilingMetrics: false,\n  extraFiles: [code],\n  extraJars: [code],\n  extraJarsFirst: false,\n  glueVersion: glue_alpha.GlueVersion.V0_9,\n  jobName: 'jobName',\n  jobRunQueuingEnabled: false,\n  maxConcurrentRuns: 123,\n  maxRetries: 123,\n  numberOfWorkers: 123,\n  securityConfiguration: securityConfiguration,\n  sparkUI: {\n    bucket: bucket,\n    prefix: 'prefix',\n  },\n  tags: {\n    tagsKey: 'tags',\n  },\n  timeout: cdk.Duration.minutes(30),\n  workerType: glue_alpha.WorkerType.STANDARD,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ScalaSparkEtlJob",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "ScalaSparkEtlJob constructor."
        },
        "locationInModule": {
          "filename": "lib/jobs/scala-spark-etl-job.ts",
          "line": 80
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.ScalaSparkEtlJobProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/jobs/scala-spark-etl-job.ts",
        "line": 70
      },
      "name": "ScalaSparkEtlJob",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Uniquely identifies this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-etl-job.ts",
            "line": 73
          },
          "name": "PROPERTY_INJECTION_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-etl-job.ts",
            "line": 74
          },
          "name": "jobArn",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-etl-job.ts",
            "line": 75
          },
          "name": "jobName",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/jobs/scala-spark-etl-job:ScalaSparkEtlJob"
    },
    "@aws-cdk/aws-glue-alpha.ScalaSparkEtlJobProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for creating a Scala Spark ETL job.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { aws_iam as iam } from 'aws-cdk-lib';\nimport { aws_logs as logs } from 'aws-cdk-lib';\nimport { aws_s3 as s3 } from 'aws-cdk-lib';\n\ndeclare const bucket: s3.Bucket;\ndeclare const code: glue_alpha.Code;\ndeclare const connection: glue_alpha.Connection;\ndeclare const logGroup: logs.LogGroup;\ndeclare const role: iam.Role;\ndeclare const securityConfiguration: glue_alpha.SecurityConfiguration;\nconst scalaSparkEtlJobProps: glue_alpha.ScalaSparkEtlJobProps = {\n  className: 'className',\n  role: role,\n  script: code,\n\n  // the properties below are optional\n  connections: [connection],\n  continuousLogging: {\n    enabled: false,\n\n    // the properties below are optional\n    conversionPattern: 'conversionPattern',\n    logGroup: logGroup,\n    logStreamPrefix: 'logStreamPrefix',\n    quiet: false,\n  },\n  defaultArguments: {\n    defaultArgumentsKey: 'defaultArguments',\n  },\n  description: 'description',\n  enableProfilingMetrics: false,\n  extraFiles: [code],\n  extraJars: [code],\n  extraJarsFirst: false,\n  glueVersion: glue_alpha.GlueVersion.V0_9,\n  jobName: 'jobName',\n  jobRunQueuingEnabled: false,\n  maxConcurrentRuns: 123,\n  maxRetries: 123,\n  numberOfWorkers: 123,\n  securityConfiguration: securityConfiguration,\n  sparkUI: {\n    bucket: bucket,\n    prefix: 'prefix',\n  },\n  tags: {\n    tagsKey: 'tags',\n  },\n  timeout: cdk.Duration.minutes(30),\n  workerType: glue_alpha.WorkerType.STANDARD,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ScalaSparkEtlJobProps",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.SparkJobProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jobs/scala-spark-etl-job.ts",
        "line": 12
      },
      "name": "ScalaSparkEtlJobProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Class name (required for Scala scripts) Package and class name for the entry point of Glue job execution for Java scripts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-etl-job.ts",
            "line": 18
          },
          "name": "className",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no extra files specified.",
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "Additional files, such as configuration files that AWS Glue copies to the working directory of your script before executing it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-etl-job.ts",
            "line": 27
          },
          "name": "extraFiles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no extra jar files",
            "stability": "experimental",
            "summary": "Extra Jars S3 URL (optional) S3 URL where additional jar dependencies are located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-etl-job.ts",
            "line": 34
          },
          "name": "extraJars",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false - priority is not given to user-provided jars",
            "see": " `--user-jars-first` in https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "Setting this value to true prioritizes the customer's extra JAR files in the classpath."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-etl-job.ts",
            "line": 43
          },
          "name": "extraJarsFirst",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no job run queuing",
            "remarks": "A value of true means job run queuing is enabled for the job runs.\nIf false or not populated, the job runs will not be considered for queueing.\nIf this field does not match the value set in the job run, then the value from\nthe job run field will be used. This property must be set to false for flex jobs.\nIf this property is enabled, maxRetries must be set to zero.",
            "stability": "experimental",
            "summary": "Specifies whether job run queuing is enabled for the job runs for this job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-etl-job.ts",
            "line": 55
          },
          "name": "jobRunQueuingEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/jobs/scala-spark-etl-job:ScalaSparkEtlJobProps"
    },
    "@aws-cdk/aws-glue-alpha.ScalaSparkFlexEtlJob": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "@aws-cdk/aws-glue-alpha.SparkJob",
      "docs": {
        "remarks": "ETL jobs support pySpark and Scala languages, for which there are separate\nbut similar constructors. ETL jobs default to the G2 worker type, but you\ncan override this default with other supported worker type values\n(G1, G2, G4 and G8). ETL jobs defaults to Glue version 4.0, which you can\noverride to 3.0. The following ETL features are enabled by default:\n—enable-metrics, —enable-spark-ui, —enable-continuous-cloudwatch-log.\nYou can find more details about version, worker type and other features\nin Glue's public documentation.",
        "stability": "experimental",
        "summary": "Spark ETL Jobs class.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { aws_iam as iam } from 'aws-cdk-lib';\nimport { aws_logs as logs } from 'aws-cdk-lib';\nimport { aws_s3 as s3 } from 'aws-cdk-lib';\n\ndeclare const bucket: s3.Bucket;\ndeclare const code: glue_alpha.Code;\ndeclare const connection: glue_alpha.Connection;\ndeclare const logGroup: logs.LogGroup;\ndeclare const role: iam.Role;\ndeclare const securityConfiguration: glue_alpha.SecurityConfiguration;\nconst scalaSparkFlexEtlJob = new glue_alpha.ScalaSparkFlexEtlJob(this, 'MyScalaSparkFlexEtlJob', {\n  className: 'className',\n  role: role,\n  script: code,\n\n  // the properties below are optional\n  connections: [connection],\n  continuousLogging: {\n    enabled: false,\n\n    // the properties below are optional\n    conversionPattern: 'conversionPattern',\n    logGroup: logGroup,\n    logStreamPrefix: 'logStreamPrefix',\n    quiet: false,\n  },\n  defaultArguments: {\n    defaultArgumentsKey: 'defaultArguments',\n  },\n  description: 'description',\n  enableProfilingMetrics: false,\n  extraFiles: [code],\n  extraJars: [code],\n  extraJarsFirst: false,\n  glueVersion: glue_alpha.GlueVersion.V0_9,\n  jobName: 'jobName',\n  maxConcurrentRuns: 123,\n  maxRetries: 123,\n  notifyDelayAfter: cdk.Duration.minutes(30),\n  numberOfWorkers: 123,\n  securityConfiguration: securityConfiguration,\n  sparkUI: {\n    bucket: bucket,\n    prefix: 'prefix',\n  },\n  tags: {\n    tagsKey: 'tags',\n  },\n  timeout: cdk.Duration.minutes(30),\n  workerType: glue_alpha.WorkerType.STANDARD,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ScalaSparkFlexEtlJob",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "ScalaSparkFlexEtlJob constructor."
        },
        "locationInModule": {
          "filename": "lib/jobs/scala-spark-flex-etl-job.ts",
          "line": 86
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.ScalaSparkFlexEtlJobProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/jobs/scala-spark-flex-etl-job.ts",
        "line": 76
      },
      "name": "ScalaSparkFlexEtlJob",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Uniquely identifies this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-flex-etl-job.ts",
            "line": 79
          },
          "name": "PROPERTY_INJECTION_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-flex-etl-job.ts",
            "line": 80
          },
          "name": "jobArn",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-flex-etl-job.ts",
            "line": 81
          },
          "name": "jobName",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/jobs/scala-spark-flex-etl-job:ScalaSparkFlexEtlJob"
    },
    "@aws-cdk/aws-glue-alpha.ScalaSparkFlexEtlJobProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "remarks": "Flex jobs supports Python and Scala language.\nThe flexible execution class is appropriate for non-urgent jobs such as\npre-production jobs, testing, and one-time data loads.\nFlexible job runs are supported for jobs using AWS Glue version 3.0 or later and G.1X or\nG.2X worker types but will default to the latest version of Glue (currently Glue 3.0.)\n\nSimilar to ETL, we’ll enable these features: —enable-metrics, —enable-spark-ui,\n—enable-continuous-cloudwatch-log",
        "stability": "experimental",
        "summary": "Flex Jobs class.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { aws_iam as iam } from 'aws-cdk-lib';\nimport { aws_logs as logs } from 'aws-cdk-lib';\nimport { aws_s3 as s3 } from 'aws-cdk-lib';\n\ndeclare const bucket: s3.Bucket;\ndeclare const code: glue_alpha.Code;\ndeclare const connection: glue_alpha.Connection;\ndeclare const logGroup: logs.LogGroup;\ndeclare const role: iam.Role;\ndeclare const securityConfiguration: glue_alpha.SecurityConfiguration;\nconst scalaSparkFlexEtlJobProps: glue_alpha.ScalaSparkFlexEtlJobProps = {\n  className: 'className',\n  role: role,\n  script: code,\n\n  // the properties below are optional\n  connections: [connection],\n  continuousLogging: {\n    enabled: false,\n\n    // the properties below are optional\n    conversionPattern: 'conversionPattern',\n    logGroup: logGroup,\n    logStreamPrefix: 'logStreamPrefix',\n    quiet: false,\n  },\n  defaultArguments: {\n    defaultArgumentsKey: 'defaultArguments',\n  },\n  description: 'description',\n  enableProfilingMetrics: false,\n  extraFiles: [code],\n  extraJars: [code],\n  extraJarsFirst: false,\n  glueVersion: glue_alpha.GlueVersion.V0_9,\n  jobName: 'jobName',\n  maxConcurrentRuns: 123,\n  maxRetries: 123,\n  notifyDelayAfter: cdk.Duration.minutes(30),\n  numberOfWorkers: 123,\n  securityConfiguration: securityConfiguration,\n  sparkUI: {\n    bucket: bucket,\n    prefix: 'prefix',\n  },\n  tags: {\n    tagsKey: 'tags',\n  },\n  timeout: cdk.Duration.minutes(30),\n  workerType: glue_alpha.WorkerType.STANDARD,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ScalaSparkFlexEtlJobProps",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.SparkJobProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jobs/scala-spark-flex-etl-job.ts",
        "line": 23
      },
      "name": "ScalaSparkFlexEtlJobProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": " `--class` in https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "The fully qualified Scala class name that serves as the entry point for the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-flex-etl-job.ts",
            "line": 36
          },
          "name": "className",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no extra files specified.",
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "Additional files, such as configuration files that AWS Glue copies to the working directory of your script before executing it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-flex-etl-job.ts",
            "line": 45
          },
          "name": "extraFiles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no extra jar files",
            "stability": "experimental",
            "summary": "Extra Jars S3 URL (optional) S3 URL where additional jar dependencies are located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-flex-etl-job.ts",
            "line": 52
          },
          "name": "extraJars",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false - priority is not given to user-provided jars",
            "see": " `--user-jars-first` in https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "Setting this value to true prioritizes the customer's extra JAR files in the classpath."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-flex-etl-job.ts",
            "line": 61
          },
          "name": "extraJarsFirst",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "remarks": "After a job run starts, the number of minutes to wait before sending a job run delay notification.",
            "stability": "experimental",
            "summary": "Specifies configuration properties of a notification (optional)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-flex-etl-job.ts",
            "line": 29
          },
          "name": "notifyDelayAfter",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.Duration"
          }
        }
      ],
      "symbolId": "lib/jobs/scala-spark-flex-etl-job:ScalaSparkFlexEtlJobProps"
    },
    "@aws-cdk/aws-glue-alpha.ScalaSparkStreamingJob": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "@aws-cdk/aws-glue-alpha.SparkJob",
      "docs": {
        "remarks": "A Streaming job is similar to an ETL job, except that it performs ETL on data streams\nusing the Apache Spark Structured Streaming framework.\nThese jobs will default to use Python 3.9.\n\nSimilar to ETL jobs, streaming job supports Scala and Python languages. Similar to ETL,\nit supports G1 and G2 worker type and 2.0, 3.0 and 4.0 version. We’ll default to G2 worker\nand 4.0 version for streaming jobs which developers can override.\nWe will enable —enable-metrics, —enable-spark-ui, —enable-continuous-cloudwatch-log.",
        "stability": "experimental",
        "summary": "Scala Streaming Jobs class.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { aws_iam as iam } from 'aws-cdk-lib';\nimport { aws_logs as logs } from 'aws-cdk-lib';\nimport { aws_s3 as s3 } from 'aws-cdk-lib';\n\ndeclare const bucket: s3.Bucket;\ndeclare const code: glue_alpha.Code;\ndeclare const connection: glue_alpha.Connection;\ndeclare const logGroup: logs.LogGroup;\ndeclare const role: iam.Role;\ndeclare const securityConfiguration: glue_alpha.SecurityConfiguration;\nconst scalaSparkStreamingJob = new glue_alpha.ScalaSparkStreamingJob(this, 'MyScalaSparkStreamingJob', {\n  className: 'className',\n  role: role,\n  script: code,\n\n  // the properties below are optional\n  connections: [connection],\n  continuousLogging: {\n    enabled: false,\n\n    // the properties below are optional\n    conversionPattern: 'conversionPattern',\n    logGroup: logGroup,\n    logStreamPrefix: 'logStreamPrefix',\n    quiet: false,\n  },\n  defaultArguments: {\n    defaultArgumentsKey: 'defaultArguments',\n  },\n  description: 'description',\n  enableProfilingMetrics: false,\n  extraFiles: [code],\n  extraJars: [code],\n  extraJarsFirst: false,\n  glueVersion: glue_alpha.GlueVersion.V0_9,\n  jobName: 'jobName',\n  jobRunQueuingEnabled: false,\n  maxConcurrentRuns: 123,\n  maxRetries: 123,\n  numberOfWorkers: 123,\n  securityConfiguration: securityConfiguration,\n  sparkUI: {\n    bucket: bucket,\n    prefix: 'prefix',\n  },\n  tags: {\n    tagsKey: 'tags',\n  },\n  timeout: cdk.Duration.minutes(30),\n  workerType: glue_alpha.WorkerType.STANDARD,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ScalaSparkStreamingJob",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "ScalaSparkStreamingJob constructor."
        },
        "locationInModule": {
          "filename": "lib/jobs/scala-spark-streaming-job.ts",
          "line": 80
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.ScalaSparkStreamingJobProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/jobs/scala-spark-streaming-job.ts",
        "line": 70
      },
      "name": "ScalaSparkStreamingJob",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Uniquely identifies this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-streaming-job.ts",
            "line": 73
          },
          "name": "PROPERTY_INJECTION_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-streaming-job.ts",
            "line": 74
          },
          "name": "jobArn",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-streaming-job.ts",
            "line": 75
          },
          "name": "jobName",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/jobs/scala-spark-streaming-job:ScalaSparkStreamingJob"
    },
    "@aws-cdk/aws-glue-alpha.ScalaSparkStreamingJobProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for creating a Scala Spark ETL job.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { aws_iam as iam } from 'aws-cdk-lib';\nimport { aws_logs as logs } from 'aws-cdk-lib';\nimport { aws_s3 as s3 } from 'aws-cdk-lib';\n\ndeclare const bucket: s3.Bucket;\ndeclare const code: glue_alpha.Code;\ndeclare const connection: glue_alpha.Connection;\ndeclare const logGroup: logs.LogGroup;\ndeclare const role: iam.Role;\ndeclare const securityConfiguration: glue_alpha.SecurityConfiguration;\nconst scalaSparkStreamingJobProps: glue_alpha.ScalaSparkStreamingJobProps = {\n  className: 'className',\n  role: role,\n  script: code,\n\n  // the properties below are optional\n  connections: [connection],\n  continuousLogging: {\n    enabled: false,\n\n    // the properties below are optional\n    conversionPattern: 'conversionPattern',\n    logGroup: logGroup,\n    logStreamPrefix: 'logStreamPrefix',\n    quiet: false,\n  },\n  defaultArguments: {\n    defaultArgumentsKey: 'defaultArguments',\n  },\n  description: 'description',\n  enableProfilingMetrics: false,\n  extraFiles: [code],\n  extraJars: [code],\n  extraJarsFirst: false,\n  glueVersion: glue_alpha.GlueVersion.V0_9,\n  jobName: 'jobName',\n  jobRunQueuingEnabled: false,\n  maxConcurrentRuns: 123,\n  maxRetries: 123,\n  numberOfWorkers: 123,\n  securityConfiguration: securityConfiguration,\n  sparkUI: {\n    bucket: bucket,\n    prefix: 'prefix',\n  },\n  tags: {\n    tagsKey: 'tags',\n  },\n  timeout: cdk.Duration.minutes(30),\n  workerType: glue_alpha.WorkerType.STANDARD,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.ScalaSparkStreamingJobProps",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.SparkJobProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jobs/scala-spark-streaming-job.ts",
        "line": 12
      },
      "name": "ScalaSparkStreamingJobProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Class name (required for Scala scripts) Package and class name for the entry point of Glue job execution for Java scripts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-streaming-job.ts",
            "line": 18
          },
          "name": "className",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no extra files specified.",
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "Additional files, such as configuration files that AWS Glue copies to the working directory of your script before executing it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-streaming-job.ts",
            "line": 27
          },
          "name": "extraFiles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no extra jar files",
            "stability": "experimental",
            "summary": "Extra Jars S3 URL (optional) S3 URL where additional jar dependencies are located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-streaming-job.ts",
            "line": 34
          },
          "name": "extraJars",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false - priority is not given to user-provided jars",
            "see": " `--user-jars-first` in https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "Setting this value to true prioritizes the customer's extra JAR files in the classpath."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-streaming-job.ts",
            "line": 43
          },
          "name": "extraJarsFirst",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no job run queuing",
            "remarks": "A value of true means job run queuing is enabled for the job runs.\nIf false or not populated, the job runs will not be considered for queueing.\nIf this field does not match the value set in the job run, then the value from\nthe job run field will be used. This property must be set to false for flex jobs.\nIf this property is enabled, maxRetries must be set to zero.",
            "stability": "experimental",
            "summary": "Specifies whether job run queuing is enabled for the job runs for this job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/scala-spark-streaming-job.ts",
            "line": 55
          },
          "name": "jobRunQueuingEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/jobs/scala-spark-streaming-job:ScalaSparkStreamingJobProps"
    },
    "@aws-cdk/aws-glue-alpha.Schema": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/athena/latest/ug/data-types.html",
        "stability": "experimental",
        "example": "declare const myDatabase: glue.Database;\nnew glue.S3Table(this, 'MyTable', {\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.Schema",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/schema.ts",
        "line": 41
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates an array of some other type."
          },
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 174
          },
          "name": "array",
          "parameters": [
            {
              "docs": {
                "summary": "type contained by the array."
              },
              "name": "itemType",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.Type"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.Type"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Fixed length character data, with a specified length between 1 and 255."
          },
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 138
          },
          "name": "char",
          "parameters": [
            {
              "docs": {
                "summary": "length between 1 and 255."
              },
              "name": "length",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.Type"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "TODO: Bounds",
            "stability": "experimental",
            "summary": "Creates a decimal type."
          },
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 126
          },
          "name": "decimal",
          "parameters": [
            {
              "docs": {
                "summary": "the total number of digits."
              },
              "name": "precision",
              "type": {
                "primitive": "number"
              }
            },
            {
              "docs": {
                "summary": "the number of digits in fractional part, the default is 0."
              },
              "name": "scale",
              "optional": true,
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.Type"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a map of some primitive key type to some value type."
          },
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 187
          },
          "name": "map",
          "parameters": [
            {
              "docs": {
                "summary": "type of key, must be a primitive."
              },
              "name": "keyType",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.Type"
              }
            },
            {
              "docs": {
                "summary": "type fo the value indexed by the key."
              },
              "name": "valueType",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.Type"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.Type"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a nested structure containing individually named and typed columns."
          },
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 202
          },
          "name": "struct",
          "parameters": [
            {
              "docs": {
                "summary": "the columns of the structure."
              },
              "name": "columns",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-glue-alpha.Column"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.Type"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Variable length character data, with a specified length between 1 and 65535."
          },
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 156
          },
          "name": "varchar",
          "parameters": [
            {
              "docs": {
                "summary": "length between 1 and 65535."
              },
              "name": "length",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.Type"
            }
          },
          "static": true
        }
      ],
      "name": "Schema",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "A 64-bit signed INTEGER in two’s complement format, with a minimum value of -2^63 and a maximum value of 2^63-1."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 55
          },
          "name": "BIG_INT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.Type"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 47
          },
          "name": "BINARY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.Type"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 42
          },
          "name": "BOOLEAN",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.Type"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Date type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 97
          },
          "name": "DATE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.Type"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 60
          },
          "name": "DOUBLE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.Type"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 65
          },
          "name": "FLOAT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.Type"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "A 32-bit signed INTEGER in two’s complement format, with a minimum value of -2^31 and a maximum value of 2^31-1."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 73
          },
          "name": "INTEGER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.Type"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "A 16-bit signed INTEGER in two’s complement format, with a minimum value of -2^15 and a maximum value of 2^15-1."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 81
          },
          "name": "SMALL_INT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.Type"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Arbitrary-length string type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 113
          },
          "name": "STRING",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.Type"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Timestamp type (date and time)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 105
          },
          "name": "TIMESTAMP",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.Type"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "A 8-bit signed INTEGER in two’s complement format, with a minimum value of -2^7 and a maximum value of 2^7-1."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 89
          },
          "name": "TINY_INT",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.Type"
          }
        }
      ],
      "symbolId": "lib/schema:Schema"
    },
    "@aws-cdk/aws-glue-alpha.SecurityConfiguration": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "remarks": "The following scenarios show some of the ways that you can use a security configuration.\n- Attach a security configuration to an AWS Glue crawler to write encrypted Amazon CloudWatch Logs.\n- Attach a security configuration to an extract, transform, and load (ETL) job to write encrypted Amazon Simple Storage Service (Amazon S3) targets and encrypted CloudWatch Logs.\n- Attach a security configuration to an ETL job to write its jobs bookmarks as encrypted Amazon S3 data.\n- Attach a security configuration to a development endpoint to write encrypted Amazon S3 targets.",
        "stability": "experimental",
        "summary": "A security configuration is a set of security properties that can be used by AWS Glue to encrypt data at rest.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.RayJob(stack, 'ImportedJob', {\n  role,\n  script,\n  jobName: 'RayCustomJobName',\n  description: 'This is a description',\n  workerType: glue.WorkerType.Z_2X,\n  numberOfWorkers: 5,\n  runtime: glue.Runtime.RAY_TWO_FOUR,\n  maxRetries: 3,\n  maxConcurrentRuns: 100,\n  timeout: cdk.Duration.hours(2),\n  connections: [glue.Connection.fromConnectionName(stack, 'Connection', 'connectionName')],\n  securityConfiguration: glue.SecurityConfiguration.fromSecurityConfigurationName(stack, 'SecurityConfig', 'securityConfigName'),\n  tags: {\n    FirstTagName: 'FirstTagValue',\n    SecondTagName: 'SecondTagValue',\n    XTagName: 'XTagValue',\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.SecurityConfiguration",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/security-configuration.ts",
          "line": 194
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.SecurityConfigurationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.ISecurityConfiguration"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/security-configuration.ts",
        "line": 153
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a Connection construct that represents an external security configuration."
          },
          "locationInModule": {
            "filename": "lib/security-configuration.ts",
            "line": 165
          },
          "name": "fromSecurityConfigurationName",
          "parameters": [
            {
              "docs": {
                "summary": "The scope creating construct (usually `this`)."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct's id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "name of external security configuration."
              },
              "name": "securityConfigurationName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.ISecurityConfiguration"
            }
          },
          "static": true
        }
      ],
      "name": "SecurityConfiguration",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Uniquely identifies this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-configuration.ts",
            "line": 156
          },
          "name": "PROPERTY_INJECTION_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The name of the security configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-configuration.ts",
            "line": 177
          },
          "name": "securityConfigurationName",
          "overrides": "@aws-cdk/aws-glue-alpha.ISecurityConfiguration",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The KMS key used in CloudWatch encryption if it requires a kms key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-configuration.ts",
            "line": 182
          },
          "name": "cloudWatchEncryptionKey",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_kms.IKey"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The KMS key used in job bookmarks encryption if it requires a kms key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-configuration.ts",
            "line": 187
          },
          "name": "jobBookmarksEncryptionKey",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_kms.IKey"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The KMS key used in S3 encryption if it requires a kms key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-configuration.ts",
            "line": 192
          },
          "name": "s3EncryptionKey",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_kms.IKey"
          }
        }
      ],
      "symbolId": "lib/security-configuration:SecurityConfiguration"
    },
    "@aws-cdk/aws-glue-alpha.SecurityConfigurationProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Constructions properties of `SecurityConfiguration`.",
        "example": "new glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.SecurityConfigurationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/security-configuration.ts",
        "line": 117
      },
      "name": "SecurityConfigurationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "no cloudwatch logs encryption.",
            "stability": "experimental",
            "summary": "The encryption configuration for Amazon CloudWatch Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-configuration.ts",
            "line": 129
          },
          "name": "cloudWatchEncryption",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.CloudWatchEncryption"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "no job bookmarks encryption.",
            "stability": "experimental",
            "summary": "The encryption configuration for Glue Job Bookmarks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-configuration.ts",
            "line": 135
          },
          "name": "jobBookmarksEncryption",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.JobBookmarksEncryption"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "no s3 encryption.",
            "stability": "experimental",
            "summary": "The encryption configuration for Amazon Simple Storage Service (Amazon S3) data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-configuration.ts",
            "line": 141
          },
          "name": "s3Encryption",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.S3Encryption"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- generated by CDK.",
            "stability": "experimental",
            "summary": "The name of the security configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/security-configuration.ts",
            "line": 123
          },
          "name": "securityConfigurationName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/security-configuration:SecurityConfigurationProps"
    },
    "@aws-cdk/aws-glue-alpha.SerializationLibrary": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "see": "https://cwiki.apache.org/confluence/display/Hive/SerDe",
        "stability": "experimental",
        "summary": "Serialization library to use when serializing/deserializing (SerDe) table records.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nconst serializationLibrary = glue_alpha.SerializationLibrary.AVRO;",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.SerializationLibrary",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/data-format.ts",
          "line": 137
        },
        "parameters": [
          {
            "name": "className",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/data-format.ts",
        "line": 86
      },
      "name": "SerializationLibrary",
      "properties": [
        {
          "const": true,
          "docs": {
            "see": "https://svn.apache.org/repos/infra/websites/production/hive/content/javadocs/r3.1.3/api/org/apache/hadoop/hive/serde2/avro/AvroSerDe.html",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 90
          },
          "name": "AVRO",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.SerializationLibrary"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/athena/latest/ug/cloudtrail.html",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 95
          },
          "name": "CLOUDTRAIL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.SerializationLibrary"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/athena/latest/ug/grok.html",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 100
          },
          "name": "GROK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.SerializationLibrary"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://svn.apache.org/repos/infra/websites/production/hive/content/javadocs/r3.1.3/api/org/apache/hive/hcatalog/data/JsonSerDe.html",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 105
          },
          "name": "HIVE_JSON",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.SerializationLibrary"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://svn.apache.org/repos/infra/websites/production/hive/content/javadocs/r3.1.3/api/org/apache/hadoop/hive/serde2/lazy/LazySimpleSerDe.html",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 110
          },
          "name": "LAZY_SIMPLE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.SerializationLibrary"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://svn.apache.org/repos/infra/websites/production/hive/content/javadocs/r3.1.3/api/org/apache/hadoop/hive/serde2/OpenCSVSerde.html",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 115
          },
          "name": "OPEN_CSV",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.SerializationLibrary"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://github.com/rcongiu/Hive-JSON-Serde",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 120
          },
          "name": "OPENX_JSON",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.SerializationLibrary"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://svn.apache.org/repos/infra/websites/production/hive/content/javadocs/r3.1.3/api/org/apache/hadoop/hive/ql/io/orc/OrcSerde.html",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 125
          },
          "name": "ORC",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.SerializationLibrary"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://svn.apache.org/repos/infra/websites/production/hive/content/javadocs/r3.1.3/api/org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe.html",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 130
          },
          "name": "PARQUET",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.SerializationLibrary"
          }
        },
        {
          "const": true,
          "docs": {
            "see": "https://svn.apache.org/repos/infra/websites/production/hive/content/javadocs/r3.1.3/api/org/apache/hadoop/hive/serde2/RegexSerDe.html",
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 135
          },
          "name": "REGEXP",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.SerializationLibrary"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/data-format.ts",
            "line": 137
          },
          "name": "className",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/data-format:SerializationLibrary"
    },
    "@aws-cdk/aws-glue-alpha.SparkExtraCodeProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Code props for different {@link Code} assets used by different types of Spark jobs.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\n\ndeclare const code: glue_alpha.Code;\nconst sparkExtraCodeProps: glue_alpha.SparkExtraCodeProps = {\n  extraFiles: [code],\n  extraJars: [code],\n  extraJarsFirst: false,\n  extraPythonFiles: [code],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.SparkExtraCodeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jobs/spark-job.ts",
        "line": 13
      },
      "name": "SparkExtraCodeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no extra files specified.",
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "Additional files, such as configuration files that AWS Glue copies to the working directory of your script before executing it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/spark-job.ts",
            "line": 29
          },
          "name": "extraFiles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no extra jar files",
            "stability": "experimental",
            "summary": "Extra Jars S3 URL (optional) S3 URL where additional jar dependencies are located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/spark-job.ts",
            "line": 36
          },
          "name": "extraJars",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false - priority is not given to user-provided jars",
            "see": " `--user-jars-first` in https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "Setting this value to true prioritizes the customer's extra JAR files in the classpath."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/spark-job.ts",
            "line": 45
          },
          "name": "extraJarsFirst",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no extra files",
            "stability": "experimental",
            "summary": "Extra Python Files S3 URL (optional) S3 URL where additional python dependencies are located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/spark-job.ts",
            "line": 20
          },
          "name": "extraPythonFiles",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Code"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/jobs/spark-job:SparkExtraCodeProps"
    },
    "@aws-cdk/aws-glue-alpha.SparkJob": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "@aws-cdk/aws-glue-alpha.Job",
      "docs": {
        "stability": "experimental",
        "summary": "Base class for different types of Spark Jobs.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport { aws_iam as iam } from 'aws-cdk-lib';\n\ndeclare const role: iam.Role;\nconst sparkJob = glue_alpha.SparkJob.fromJobAttributes(this, 'MySparkJob', {\n  jobName: 'jobName',\n\n  // the properties below are optional\n  role: role,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.SparkJob",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/jobs/spark-job.ts",
          "line": 121
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.SparkJobProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/jobs/spark-job.ts",
        "line": 109
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/jobs/spark-job.ts",
            "line": 134
          },
          "name": "nonExecutableCommonArguments",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.SparkJobProps"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "map"
              }
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Set the arguments for extra {@link Code}-related properties."
          },
          "locationInModule": {
            "filename": "lib/jobs/spark-job.ts",
            "line": 158
          },
          "name": "setupExtraCodeArguments",
          "parameters": [
            {
              "name": "args",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "map"
                }
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.SparkExtraCodeProps"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "SparkJob",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/spark-job.ts",
            "line": 111
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-glue-alpha.JobBase",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The IAM role Glue assumes to run this job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/spark-job.ts",
            "line": 110
          },
          "name": "role",
          "overrides": "@aws-cdk/aws-glue-alpha.Job",
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "The Spark UI logs location if Spark UI monitoring and debugging is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/spark-job.ts",
            "line": 119
          },
          "name": "sparkUILoggingLocation",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.SparkUILoggingLocation"
          }
        }
      ],
      "symbolId": "lib/jobs/spark-job:SparkJob"
    },
    "@aws-cdk/aws-glue-alpha.SparkJobProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Common properties for different types of Spark jobs.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { aws_iam as iam } from 'aws-cdk-lib';\nimport { aws_logs as logs } from 'aws-cdk-lib';\nimport { aws_s3 as s3 } from 'aws-cdk-lib';\n\ndeclare const bucket: s3.Bucket;\ndeclare const code: glue_alpha.Code;\ndeclare const connection: glue_alpha.Connection;\ndeclare const logGroup: logs.LogGroup;\ndeclare const role: iam.Role;\ndeclare const securityConfiguration: glue_alpha.SecurityConfiguration;\nconst sparkJobProps: glue_alpha.SparkJobProps = {\n  role: role,\n  script: code,\n\n  // the properties below are optional\n  connections: [connection],\n  continuousLogging: {\n    enabled: false,\n\n    // the properties below are optional\n    conversionPattern: 'conversionPattern',\n    logGroup: logGroup,\n    logStreamPrefix: 'logStreamPrefix',\n    quiet: false,\n  },\n  defaultArguments: {\n    defaultArgumentsKey: 'defaultArguments',\n  },\n  description: 'description',\n  enableProfilingMetrics: false,\n  glueVersion: glue_alpha.GlueVersion.V0_9,\n  jobName: 'jobName',\n  maxConcurrentRuns: 123,\n  maxRetries: 123,\n  numberOfWorkers: 123,\n  securityConfiguration: securityConfiguration,\n  sparkUI: {\n    bucket: bucket,\n    prefix: 'prefix',\n  },\n  tags: {\n    tagsKey: 'tags',\n  },\n  timeout: cdk.Duration.minutes(30),\n  workerType: glue_alpha.WorkerType.STANDARD,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.SparkJobProps",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.JobProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jobs/spark-job.ts",
        "line": 94
      },
      "name": "SparkJobProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Spark UI debugging and monitoring is disabled.",
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
            "stability": "experimental",
            "summary": "Enables the Spark UI debugging and monitoring with the specified props."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/spark-job.ts",
            "line": 103
          },
          "name": "sparkUI",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.SparkUIProps"
          }
        }
      ],
      "symbolId": "lib/jobs/spark-job:SparkJobProps"
    },
    "@aws-cdk/aws-glue-alpha.SparkUILoggingLocation": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
        "stability": "experimental",
        "summary": "The Spark UI logging location.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport { aws_s3 as s3 } from 'aws-cdk-lib';\n\ndeclare const bucket: s3.Bucket;\nconst sparkUILoggingLocation: glue_alpha.SparkUILoggingLocation = {\n  bucket: bucket,\n\n  // the properties below are optional\n  prefix: 'prefix',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.SparkUILoggingLocation",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jobs/spark-job.ts",
        "line": 77
      },
      "name": "SparkUILoggingLocation",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The bucket where the Glue job stores the logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/spark-job.ts",
            "line": 81
          },
          "name": "bucket",
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'/' - the logs will be written at the root of the bucket",
            "stability": "experimental",
            "summary": "The path inside the bucket (objects prefix) where the Glue job stores the logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/spark-job.ts",
            "line": 88
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/jobs/spark-job:SparkUILoggingLocation"
    },
    "@aws-cdk/aws-glue-alpha.SparkUIProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html",
        "stability": "experimental",
        "summary": "Properties for enabling Spark UI monitoring feature for Spark-based Glue jobs.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport { aws_s3 as s3 } from 'aws-cdk-lib';\n\ndeclare const bucket: s3.Bucket;\nconst sparkUIProps: glue_alpha.SparkUIProps = {\n  bucket: bucket,\n  prefix: 'prefix',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.SparkUIProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/jobs/spark-job.ts",
        "line": 54
      },
      "name": "SparkUIProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "a new bucket will be created.",
            "stability": "experimental",
            "summary": "The bucket where the Glue job stores the logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/spark-job.ts",
            "line": 60
          },
          "name": "bucket",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the logs will be written at the root of the bucket",
            "remarks": "Use format `'/foo/bar'`",
            "stability": "experimental",
            "summary": "The path inside the bucket (objects prefix) where the Glue job stores the logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/jobs/spark-job.ts",
            "line": 68
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/jobs/spark-job:SparkUIProps"
    },
    "@aws-cdk/aws-glue-alpha.StorageParameter": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "remarks": "If you would like to specify a storage parameter that is not available as a static member of this class, use the `StorageParameter.custom` method.\n\nThe list of storage parameters currently known within the CDK is listed.",
        "see": "https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_TABLE.html#r_CREATE_EXTERNAL_TABLE-parameters - under _\"TABLE PROPERTIES\"_",
        "stability": "experimental",
        "summary": "A storage parameter. The list of storage parameters available is not exhaustive and other keys may be used.",
        "example": "declare const myDatabase: glue.Database;\nnew glue.S3Table(this, 'MyTable', {\n  storageParameters: [\n    glue.StorageParameter.skipHeaderLineCount(1),\n    glue.StorageParameter.compressionType(glue.CompressionType.GZIP),\n    glue.StorageParameter.custom('separatorChar', ',')\n  ],\n  // ...\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/storage-parameter.ts",
          "line": 422
        },
        "parameters": [
          {
            "name": "key",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "value",
            "type": {
              "primitive": "string"
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/storage-parameter.ts",
        "line": 303
      },
      "methods": [
        {
          "docs": {
            "remarks": "This property is only available for an uncompressed text file format.",
            "stability": "experimental",
            "summary": "Identifies if the file contains less or more values for a row than the number of columns specified in the external table definition."
          },
          "locationInModule": {
            "filename": "lib/storage-parameter.ts",
            "line": 363
          },
          "name": "columnCountMismatchHandling",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.ColumnCountMismatchHandlingAction"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This value overrides the compression type specified through the extension.",
            "stability": "experimental",
            "summary": "The type of compression used on the table, when the file name does not contain an extension."
          },
          "locationInModule": {
            "filename": "lib/storage-parameter.ts",
            "line": 321
          },
          "name": "compressionType",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.CompressionType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "A custom storage parameter."
          },
          "locationInModule": {
            "filename": "lib/storage-parameter.ts",
            "line": 418
          },
          "name": "custom",
          "parameters": [
            {
              "docs": {
                "summary": "- The key of the storage parameter."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- The value of the storage parameter."
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Determines whether data handling is on for the table."
          },
          "locationInModule": {
            "filename": "lib/storage-parameter.ts",
            "line": 314
          },
          "name": "dataCleansingEnabled",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Specifies the action to perform when query results contain invalid UTF-8 character values."
          },
          "locationInModule": {
            "filename": "lib/storage-parameter.ts",
            "line": 328
          },
          "name": "invalidCharHandling",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.InvalidCharHandlingAction"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Specifies the action to perform when ORC data contains an integer (for example, BIGINT or int64) that is larger than the column definition (for example, SMALLINT or int16)."
          },
          "locationInModule": {
            "filename": "lib/storage-parameter.ts",
            "line": 342
          },
          "name": "numericOverflowHandling",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.NumericOverflowHandlingAction"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "To explicitly update an external table's statistics, set the numRows property to indicate the size of the table. Amazon Redshift doesn't analyze external tables to generate the table statistics that the query optimizer uses to generate a query plan. If table statistics aren't set for an external table, Amazon Redshift generates a query execution plan based on an assumption that external tables are the larger tables and local tables are the smaller tables.",
            "stability": "experimental",
            "summary": "A property that sets the numRows value for the table definition."
          },
          "locationInModule": {
            "filename": "lib/storage-parameter.ts",
            "line": 370
          },
          "name": "numRows",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "OrcColumnMappingType.NAME",
            "remarks": "This property is ignored for other data formats. If this property is omitted, columns are mapped by `OrcColumnMappingType.NAME` by default.",
            "stability": "experimental",
            "summary": "A property that sets the column mapping type for tables that use ORC data format."
          },
          "locationInModule": {
            "filename": "lib/storage-parameter.ts",
            "line": 386
          },
          "name": "orcSchemaResolution",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.OrcColumnMappingType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Specifies the replacement character to use when you set `INVALID_CHAR_HANDLING` to `REPLACE`."
          },
          "locationInModule": {
            "filename": "lib/storage-parameter.ts",
            "line": 335
          },
          "name": "replacementChar",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "A property that sets number of rows to skip at the beginning of each source file."
          },
          "locationInModule": {
            "filename": "lib/storage-parameter.ts",
            "line": 377
          },
          "name": "serializationNullFormat",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The number of rows to skip at the top of a CSV file when the table is being created."
          },
          "locationInModule": {
            "filename": "lib/storage-parameter.ts",
            "line": 307
          },
          "name": "skipHeaderLineCount",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "By default, Redshift Spectrum sets the value to null for data that exceeds the width of the column.",
            "stability": "experimental",
            "summary": "Specifies how to handle data being loaded that exceeds the length of the data type defined for columns containing VARBYTE data."
          },
          "locationInModule": {
            "filename": "lib/storage-parameter.ts",
            "line": 349
          },
          "name": "surplusBytesHandling",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.SurplusBytesHandlingAction"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "By default, Redshift Spectrum sets the value to null for data that exceeds the width of the column.",
            "stability": "experimental",
            "summary": "Specifies how to handle data being loaded that exceeds the length of the data type defined for columns containing VARCHAR, CHAR, or string data."
          },
          "locationInModule": {
            "filename": "lib/storage-parameter.ts",
            "line": 356
          },
          "name": "surplusCharHandling",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.SurplusCharHandlingAction"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "You can specify an AWS Key Management Service key to enable Server–Side Encryption (SSE) for Amazon S3 objects."
          },
          "locationInModule": {
            "filename": "lib/storage-parameter.ts",
            "line": 409
          },
          "name": "writeKmsKeyId",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The size must be a valid integer between 5 and 6200. The default maximum file size is 6,200 MB. This table property also applies to any subsequent INSERT statement into the same external table.",
            "stability": "experimental",
            "summary": "A property that sets the maximum size (in MB) of each file written to Amazon S3 by CREATE EXTERNAL TABLE AS."
          },
          "locationInModule": {
            "filename": "lib/storage-parameter.ts",
            "line": 402
          },
          "name": "writeMaxFileSizeMb",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter"
            }
          },
          "static": true
        },
        {
          "docs": {
            "default": "WriteParallel.ON",
            "remarks": "When 'write.parallel' is set to off, CREATE EXTERNAL TABLE AS writes to one or more data files serially onto Amazon S3. This table property also applies to any subsequent INSERT statement into the same external table.",
            "stability": "experimental",
            "summary": "A property that sets whether CREATE EXTERNAL TABLE AS should write data in parallel."
          },
          "locationInModule": {
            "filename": "lib/storage-parameter.ts",
            "line": 395
          },
          "name": "writeParallel",
          "parameters": [
            {
              "name": "value",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.WriteParallel"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter"
            }
          },
          "static": true
        }
      ],
      "name": "StorageParameter",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/storage-parameter.ts",
            "line": 422
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/storage-parameter.ts",
            "line": 422
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/storage-parameter:StorageParameter"
    },
    "@aws-cdk/aws-glue-alpha.StorageParameters": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "The storage parameter keys that are currently known, this list is not exhaustive and other keys may be used.",
        "example": "   declare const glueDatabase: glue.IDatabase;\n   const table = new glue.Table(this, 'Table', {\n     storageParameters: [\n         glue.StorageParameter.skipHeaderLineCount(1),\n         glue.StorageParameter.compressionType(glue.CompressionType.GZIP),\n         glue.StorageParameter.custom('foo', 'bar'), // Will have no effect\n         glue.StorageParameter.custom('separatorChar', ','), // Will describe the separator char used in the data\n         glue.StorageParameter.custom(glue.StorageParameters.WRITE_PARALLEL, 'off'),\n     ],\n     // ...\n     database: glueDatabase,\n     columns: [{\n         name: 'col1',\n         type: glue.Schema.STRING,\n     }],\n     dataFormat: glue.DataFormat.CSV,\n   });",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.StorageParameters",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/storage-parameter.ts",
        "line": 215
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The number of rows to skip at the top of a CSV file when the table is being created."
          },
          "name": "SKIP_HEADER_LINE_COUNT"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Determines whether data handling is on for the table."
          },
          "name": "DATA_CLEANSING_ENABLED"
        },
        {
          "docs": {
            "remarks": "This value overrides the compression type specified through the extension.",
            "stability": "experimental",
            "summary": "The type of compression used on the table, when the file name does not contain an extension."
          },
          "name": "COMPRESSION_TYPE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Specifies the action to perform when query results contain invalid UTF-8 character values."
          },
          "name": "INVALID_CHAR_HANDLING"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Specifies the replacement character to use when you set `INVALID_CHAR_HANDLING` to `REPLACE`."
          },
          "name": "REPLACEMENT_CHAR"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Specifies the action to perform when ORC data contains an integer (for example, BIGINT or int64) that is larger than the column definition (for example, SMALLINT or int16)."
          },
          "name": "NUMERIC_OVERFLOW_HANDLING"
        },
        {
          "docs": {
            "remarks": "By default, Redshift Spectrum sets the value to null for data that exceeds the width of the column.",
            "stability": "experimental",
            "summary": "Specifies how to handle data being loaded that exceeds the length of the data type defined for columns containing VARBYTE data."
          },
          "name": "SURPLUS_BYTES_HANDLING"
        },
        {
          "docs": {
            "remarks": "By default, Redshift Spectrum sets the value to null for data that exceeds the width of the column.",
            "stability": "experimental",
            "summary": "Specifies how to handle data being loaded that exceeds the length of the data type defined for columns containing VARCHAR, CHAR, or string data."
          },
          "name": "SURPLUS_CHAR_HANDLING"
        },
        {
          "docs": {
            "remarks": "This property is only available for an uncompressed text file format.",
            "stability": "experimental",
            "summary": "Identifies if the file contains less or more values for a row than the number of columns specified in the external table definition."
          },
          "name": "COLUMN_COUNT_MISMATCH_HANDLING"
        },
        {
          "docs": {
            "remarks": "To explicitly update an external table's statistics, set the numRows property to indicate the size of the table. Amazon Redshift doesn't analyze external tables to generate the table statistics that the query optimizer uses to generate a query plan. If table statistics aren't set for an external table, Amazon Redshift generates a query execution plan based on an assumption that external tables are the larger tables and local tables are the smaller tables.",
            "stability": "experimental",
            "summary": "A property that sets the numRows value for the table definition."
          },
          "name": "NUM_ROWS"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "A property that sets number of rows to skip at the beginning of each source file."
          },
          "name": "SERIALIZATION_NULL_FORMAT"
        },
        {
          "docs": {
            "remarks": "This property is ignored for other data formats.",
            "stability": "experimental",
            "summary": "A property that sets the column mapping type for tables that use ORC data format."
          },
          "name": "ORC_SCHEMA_RESOLUTION"
        },
        {
          "docs": {
            "remarks": "When 'write.parallel' is set to off, CREATE EXTERNAL TABLE AS writes to one or more data files serially onto Amazon S3. This table property also applies to any subsequent INSERT statement into the same external table.",
            "stability": "experimental",
            "summary": "A property that sets whether CREATE EXTERNAL TABLE AS should write data in parallel."
          },
          "name": "WRITE_PARALLEL"
        },
        {
          "docs": {
            "remarks": "The size must be a valid integer between 5 and 6200. The default maximum file size is 6,200 MB. This table property also applies to any subsequent INSERT statement into the same external table.",
            "stability": "experimental",
            "summary": "A property that sets the maximum size (in MB) of each file written to Amazon S3 by CREATE EXTERNAL TABLE AS."
          },
          "name": "WRITE_MAX_FILESIZE_MB"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "You can specify an AWS Key Management Service key to enable Server–Side Encryption (SSE) for Amazon S3 objects."
          },
          "name": "WRITE_KMS_KEY_ID"
        }
      ],
      "name": "StorageParameters",
      "symbolId": "lib/storage-parameter:StorageParameters"
    },
    "@aws-cdk/aws-glue-alpha.SurplusBytesHandlingAction": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "remarks": "By default, Redshift Spectrum sets the value to null for data that exceeds the width of the column.",
        "see": "https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_TABLE.html#r_CREATE_EXTERNAL_TABLE-parameters - under _\"TABLE PROPERTIES\"_ > _\"surplus_bytes_handling\"_",
        "stability": "experimental",
        "summary": "Specifies how to handle data being loaded that exceeds the length of the data type defined for columns containing VARBYTE data."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.SurplusBytesHandlingAction",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/storage-parameter.ts",
        "line": 92
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Replaces data that exceeds the column width with null."
          },
          "name": "SET_TO_NULL"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Doesn't perform surplus byte handling."
          },
          "name": "DISABLED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Cancels queries that return data exceeding the column width."
          },
          "name": "FAIL"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Drop all rows that contain data exceeding column width."
          },
          "name": "DROP_ROW"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Removes the characters that exceed the maximum number of characters defined for the column."
          },
          "name": "TRUNCATE"
        }
      ],
      "name": "SurplusBytesHandlingAction",
      "symbolId": "lib/storage-parameter:SurplusBytesHandlingAction"
    },
    "@aws-cdk/aws-glue-alpha.SurplusCharHandlingAction": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "remarks": "By default, Redshift Spectrum sets the value to null for data that exceeds the width of the column.",
        "see": "https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_TABLE.html#r_CREATE_EXTERNAL_TABLE-parameters - under _\"TABLE PROPERTIES\"_ > _\"surplus_char_handling\"_",
        "stability": "experimental",
        "summary": "Specifies how to handle data being loaded that exceeds the length of the data type defined for columns containing VARCHAR, CHAR, or string data."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.SurplusCharHandlingAction",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/storage-parameter.ts",
        "line": 124
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Replaces data that exceeds the column width with null."
          },
          "name": "SET_TO_NULL"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Doesn't perform surplus character handling."
          },
          "name": "DISABLED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Cancels queries that return data exceeding the column width."
          },
          "name": "FAIL"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Replaces each value in the row with null."
          },
          "name": "DROP_ROW"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Removes the characters that exceed the maximum number of characters defined for the column."
          },
          "name": "TRUNCATE"
        }
      ],
      "name": "SurplusCharHandlingAction",
      "symbolId": "lib/storage-parameter:SurplusCharHandlingAction"
    },
    "@aws-cdk/aws-glue-alpha.Table": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "@aws-cdk/aws-glue-alpha.S3Table",
      "docs": {
        "deprecated": "Use {@link S3Table } instead.",
        "stability": "deprecated",
        "summary": "A Glue table.",
        "example": "   declare const glueDatabase: glue.IDatabase;\n   const table = new glue.Table(this, 'Table', {\n     storageParameters: [\n         glue.StorageParameter.skipHeaderLineCount(1),\n         glue.StorageParameter.compressionType(glue.CompressionType.GZIP),\n         glue.StorageParameter.custom('foo', 'bar'), // Will have no effect\n         glue.StorageParameter.custom('separatorChar', ','), // Will describe the separator char used in the data\n         glue.StorageParameter.custom(glue.StorageParameters.WRITE_PARALLEL, 'off'),\n     ],\n     // ...\n     database: glueDatabase,\n     columns: [{\n         name: 'col1',\n         type: glue.Schema.STRING,\n     }],\n     dataFormat: glue.DataFormat.CSV,\n   });",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.Table",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/s3-table.ts",
          "line": 126
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.S3TableProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/table-deprecated.ts",
        "line": 11
      },
      "name": "Table",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "deprecated",
            "summary": "Uniquely identifies this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-deprecated.ts",
            "line": 14
          },
          "name": "PROPERTY_INJECTION_ID",
          "overrides": "@aws-cdk/aws-glue-alpha.S3Table",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/table-deprecated:Table"
    },
    "@aws-cdk/aws-glue-alpha.TableAttributes": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nconst tableAttributes: glue_alpha.TableAttributes = {\n  tableArn: 'tableArn',\n  tableName: 'tableName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.TableAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/table-base.ts",
        "line": 42
      },
      "name": "TableAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 43
          },
          "name": "tableArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 44
          },
          "name": "tableName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/table-base:TableAttributes"
    },
    "@aws-cdk/aws-glue-alpha.TableBase": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "A Glue table.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nconst tableBase = glue_alpha.TableBase.fromTableArn(this, 'MyTableBase', 'tableArn');",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.TableBase",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/table-base.ts",
          "line": 239
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.TableBaseProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.ITable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/table-base.ts",
        "line": 165
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 166
          },
          "name": "fromTableArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "tableArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.ITable"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Creates a Table construct that represents an external table."
          },
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 182
          },
          "name": "fromTableAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "The scope creating construct (usually `this`)."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct's id."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Import attributes."
              },
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.TableAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.ITable"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "You can have a maximum of 3 partition\nindexes to a table. Partition index keys must be a subset of the table's\npartition keys.",
            "see": "https://docs.aws.amazon.com/glue/latest/dg/partition-indexes.html",
            "stability": "experimental",
            "summary": "Add a partition index to the table."
          },
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 270
          },
          "name": "addPartitionIndex",
          "parameters": [
            {
              "name": "index",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.PartitionIndex"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Grant the given identity custom permissions."
          },
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 333
          },
          "name": "grant",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            },
            {
              "name": "actions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 259
          },
          "name": "grantRead",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 261
          },
          "name": "grantReadWrite",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "Permissions will be granted to the catalog, the database, and the table.",
            "stability": "experimental",
            "summary": "Grant the given identity custom permissions to ALL underlying resources of the table."
          },
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 345
          },
          "name": "grantToUnderlyingResources",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            },
            {
              "name": "actions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 260
          },
          "name": "grantWrite",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "aws-cdk-lib.aws_iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_iam.Grant"
            }
          }
        }
      ],
      "name": "TableBase",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "This table's columns."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 214
          },
          "name": "columns",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Column"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Indicates whether the table's data is compressed or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 204
          },
          "name": "compressed",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Database this table belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 199
          },
          "name": "database",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.IDatabase"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Format of this table's data files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 209
          },
          "name": "dataFormat",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.DataFormat"
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-table-tableinput.html#cfn-glue-table-tableinput-parameters",
            "stability": "experimental",
            "summary": "The tables' properties associated with the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 230
          },
          "name": "parameters",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 193
          },
          "name": "tableArn",
          "overrides": "@aws-cdk/aws-glue-alpha.ITable",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 192
          },
          "name": "tableName",
          "overrides": "@aws-cdk/aws-glue-alpha.ITable",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 191
          },
          "name": "tableResource",
          "protected": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_glue.CfnTable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 194
          },
          "name": "partitionIndexes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.PartitionIndex"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "This table's partition keys if the table is partitioned."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 219
          },
          "name": "partitionKeys",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Column"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The tables' storage descriptor properties."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 224
          },
          "name": "storageParameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/table-base:TableBase"
    },
    "@aws-cdk/aws-glue-alpha.TableBaseProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\n\ndeclare const database: glue_alpha.Database;\ndeclare const dataFormat: glue_alpha.DataFormat;\ndeclare const storageParameter: glue_alpha.StorageParameter;\nconst tableBaseProps: glue_alpha.TableBaseProps = {\n  columns: [{\n    name: 'name',\n    type: {\n      inputString: 'inputString',\n      isPrimitive: false,\n    },\n\n    // the properties below are optional\n    comment: 'comment',\n  }],\n  database: database,\n  dataFormat: dataFormat,\n\n  // the properties below are optional\n  compressed: false,\n  description: 'description',\n  enablePartitionFiltering: false,\n  parameters: {\n    parametersKey: 'parameters',\n  },\n  partitionIndexes: [{\n    keyNames: ['keyNames'],\n\n    // the properties below are optional\n    indexName: 'indexName',\n  }],\n  partitionKeys: [{\n    name: 'name',\n    type: {\n      inputString: 'inputString',\n      isPrimitive: false,\n    },\n\n    // the properties below are optional\n    comment: 'comment',\n  }],\n  storageParameters: [storageParameter],\n  storedAsSubDirectories: false,\n  tableName: 'tableName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.TableBaseProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/table-base.ts",
        "line": 47
      },
      "name": "TableBaseProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Columns of the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 70
          },
          "name": "columns",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Column"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Database in which to store the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 65
          },
          "name": "database",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.IDatabase"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Storage type of the table's data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 91
          },
          "name": "dataFormat",
          "type": {
            "fqn": "@aws-cdk/aws-glue-alpha.DataFormat"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Indicates whether the table's data is compressed or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 98
          },
          "name": "compressed",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "generated",
            "stability": "experimental",
            "summary": "Description of the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 60
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The parameter is not defined",
            "see": "https://docs.aws.amazon.com/athena/latest/ug/glue-best-practices.html#glue-best-practices-partition-index",
            "stability": "experimental",
            "summary": "Enables partition filtering."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 114
          },
          "name": "enablePartitionFiltering",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The parameter is not defined",
            "remarks": "The key/value pairs that are allowed to be submitted are not limited, however their functionality is not guaranteed.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-table-tableinput.html#cfn-glue-table-tableinput-parameters",
            "stability": "experimental",
            "summary": "The key/value pairs define properties associated with the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 159
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "table has no partition indexes",
            "remarks": "A maximum of 3 indexes\nare allowed on a table. Keys in the index must be part\nof the table's partition keys.",
            "stability": "experimental",
            "summary": "Partition indexes on the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 86
          },
          "name": "partitionIndexes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.PartitionIndex"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "table is not partitioned",
            "stability": "experimental",
            "summary": "Partition columns of the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 77
          },
          "name": "partitionKeys",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Column"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The parameter is not defined",
            "example": "   declare const glueDatabase: glue.IDatabase;\n   const table = new glue.Table(this, 'Table', {\n     storageParameters: [\n         glue.StorageParameter.skipHeaderLineCount(1),\n         glue.StorageParameter.compressionType(glue.CompressionType.GZIP),\n         glue.StorageParameter.custom('foo', 'bar'), // Will have no effect\n         glue.StorageParameter.custom('separatorChar', ','), // Will describe the separator char used in the data\n         glue.StorageParameter.custom(glue.StorageParameters.WRITE_PARALLEL, 'off'),\n     ],\n     // ...\n     database: glueDatabase,\n     columns: [{\n         name: 'col1',\n         type: glue.Schema.STRING,\n     }],\n     dataFormat: glue.DataFormat.CSV,\n   });",
            "remarks": "These properties help describe the format of the data that is stored within the crawled data sources.\n\nThe key/value pairs that are allowed to be submitted are not limited, however their functionality is not guaranteed.\n\nSome keys will be auto-populated by glue crawlers, however, you can override them by specifying the key and value in this property.",
            "see": "https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_TABLE.html#r_CREATE_EXTERNAL_TABLE-parameters - under _\"TABLE PROPERTIES\"_",
            "stability": "experimental",
            "summary": "The user-supplied properties for the description of the physical storage of this table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 149
          },
          "name": "storageParameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.StorageParameter"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Indicates whether the table data is stored in subdirectories."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 105
          },
          "name": "storedAsSubDirectories",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- generated by CDK.",
            "stability": "experimental",
            "summary": "Name of the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/table-base.ts",
            "line": 53
          },
          "name": "tableName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/table-base:TableBaseProps"
    },
    "@aws-cdk/aws-glue-alpha.TableEncryption": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/athena/latest/ug/encryption.html",
        "stability": "experimental",
        "summary": "Encryption options for a Table.",
        "example": "declare const myDatabase: glue.Database;\nnew glue.S3Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.S3_MANAGED,\n  // ...\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.TableEncryption",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/s3-table.ts",
        "line": 16
      },
      "members": [
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html",
            "stability": "experimental",
            "summary": "Server side encryption (SSE) with an Amazon S3-managed key."
          },
          "name": "S3_MANAGED"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html",
            "stability": "experimental",
            "summary": "Server-side encryption (SSE) with an AWS KMS key managed by the account owner."
          },
          "name": "KMS"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Server-side encryption (SSE) with an AWS KMS key managed by the KMS service."
          },
          "name": "KMS_MANAGED"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingClientSideEncryption.html",
            "stability": "experimental",
            "summary": "Client-side encryption (CSE) with an AWS KMS key managed by the account owner."
          },
          "name": "CLIENT_SIDE_KMS"
        }
      ],
      "name": "TableEncryption",
      "symbolId": "lib/s3-table:TableEncryption"
    },
    "@aws-cdk/aws-glue-alpha.TableProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport { aws_kms as kms } from 'aws-cdk-lib';\nimport { aws_s3 as s3 } from 'aws-cdk-lib';\n\ndeclare const bucket: s3.Bucket;\ndeclare const database: glue_alpha.Database;\ndeclare const dataFormat: glue_alpha.DataFormat;\ndeclare const key: kms.Key;\ndeclare const storageParameter: glue_alpha.StorageParameter;\nconst tableProps: glue_alpha.TableProps = {\n  columns: [{\n    name: 'name',\n    type: {\n      inputString: 'inputString',\n      isPrimitive: false,\n    },\n\n    // the properties below are optional\n    comment: 'comment',\n  }],\n  database: database,\n  dataFormat: dataFormat,\n\n  // the properties below are optional\n  bucket: bucket,\n  compressed: false,\n  description: 'description',\n  enablePartitionFiltering: false,\n  encryption: glue_alpha.TableEncryption.S3_MANAGED,\n  encryptionKey: key,\n  parameters: {\n    parametersKey: 'parameters',\n  },\n  partitionIndexes: [{\n    keyNames: ['keyNames'],\n\n    // the properties below are optional\n    indexName: 'indexName',\n  }],\n  partitionKeys: [{\n    name: 'name',\n    type: {\n      inputString: 'inputString',\n      isPrimitive: false,\n    },\n\n    // the properties below are optional\n    comment: 'comment',\n  }],\n  s3Prefix: 's3Prefix',\n  storageParameters: [storageParameter],\n  storedAsSubDirectories: false,\n  tableName: 'tableName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.TableProps",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.S3TableProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/table-deprecated.ts",
        "line": 4
      },
      "name": "TableProps",
      "symbolId": "lib/table-deprecated:TableProps"
    },
    "@aws-cdk/aws-glue-alpha.TriggerOptions": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for configuring a Glue Trigger.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { aws_glue as glue } from 'aws-cdk-lib';\n\ndeclare const cfnCrawler: glue.CfnCrawler;\ndeclare const job: glue_alpha.Job;\ndeclare const securityConfiguration: glue_alpha.SecurityConfiguration;\nconst triggerOptions: glue_alpha.TriggerOptions = {\n  actions: [{\n    arguments: {\n      argumentsKey: 'arguments',\n    },\n    crawler: cfnCrawler,\n    job: job,\n    securityConfiguration: securityConfiguration,\n    timeout: cdk.Duration.minutes(30),\n  }],\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.TriggerOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/triggers/trigger-options.ts",
        "line": 157
      },
      "name": "TriggerOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The actions initiated by this trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 175
          },
          "name": "actions",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-glue-alpha.Action"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no description",
            "stability": "experimental",
            "summary": "A description for the trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 170
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no name is provided",
            "stability": "experimental",
            "summary": "A name for the trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 163
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/triggers/trigger-options:TriggerOptions"
    },
    "@aws-cdk/aws-glue-alpha.TriggerSchedule": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a trigger schedule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nconst triggerSchedule = glue_alpha.TriggerSchedule.cron({\n  day: 'day',\n  hour: 'hour',\n  minute: 'minute',\n  month: 'month',\n  weekDay: 'weekDay',\n  year: 'year',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.TriggerSchedule",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/triggers/trigger-options.ts",
        "line": 51
      },
      "methods": [
        {
          "docs": {
            "returns": "A new TriggerSchedule instance.",
            "stability": "experimental",
            "summary": "Creates a new TriggerSchedule instance with a cron expression."
          },
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 58
          },
          "name": "cron",
          "parameters": [
            {
              "docs": {
                "summary": "The cron options for the schedule."
              },
              "name": "options",
              "type": {
                "fqn": "aws-cdk-lib.aws_events.CronOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.TriggerSchedule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "A new TriggerSchedule instance.",
            "stability": "experimental",
            "summary": "Creates a new TriggerSchedule instance with a custom expression."
          },
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 68
          },
          "name": "expression",
          "parameters": [
            {
              "docs": {
                "summary": "The custom expression for the schedule."
              },
              "name": "expression",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.TriggerSchedule"
            }
          },
          "static": true
        }
      ],
      "name": "TriggerSchedule",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The expression string for the schedule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/trigger-options.ts",
            "line": 75
          },
          "name": "expressionString",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/triggers/trigger-options:TriggerSchedule"
    },
    "@aws-cdk/aws-glue-alpha.Type": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Represents a type of a column in a table schema.",
        "example": "declare const myDatabase: glue.Database;\nnew glue.S3Table(this, 'MyTable', {\n  database: myDatabase,\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.Type",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schema.ts",
        "line": 26
      },
      "name": "Type",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Glue InputString for this type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 35
          },
          "name": "inputString",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Indicates whether this type is a primitive data type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schema.ts",
            "line": 30
          },
          "name": "isPrimitive",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/schema:Type"
    },
    "@aws-cdk/aws-glue-alpha.WeeklyScheduleTriggerOptions": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for configuring a weekly-scheduled Glue Trigger.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nimport * as cdk from 'aws-cdk-lib';\nimport { aws_glue as glue } from 'aws-cdk-lib';\n\ndeclare const cfnCrawler: glue.CfnCrawler;\ndeclare const job: glue_alpha.Job;\ndeclare const securityConfiguration: glue_alpha.SecurityConfiguration;\nconst weeklyScheduleTriggerOptions: glue_alpha.WeeklyScheduleTriggerOptions = {\n  actions: [{\n    arguments: {\n      argumentsKey: 'arguments',\n    },\n    crawler: cfnCrawler,\n    job: job,\n    securityConfiguration: securityConfiguration,\n    timeout: cdk.Duration.minutes(30),\n  }],\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  startOnCreation: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.WeeklyScheduleTriggerOptions",
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.DailyScheduleTriggerOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/triggers/trigger-options.ts",
        "line": 198
      },
      "name": "WeeklyScheduleTriggerOptions",
      "symbolId": "lib/triggers/trigger-options:WeeklyScheduleTriggerOptions"
    },
    "@aws-cdk/aws-glue-alpha.WorkerType": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "remarks": "If you need to use a WorkerType that doesn't exist as a static member, you\ncan instantiate a `WorkerType` object, e.g: `WorkerType.of('other type')`",
        "stability": "experimental",
        "summary": "The type of predefined worker that is allocated when a job runs.",
        "example": "import * as cdk from 'aws-cdk-lib';\nimport * as iam from 'aws-cdk-lib/aws-iam';\ndeclare const stack: cdk.Stack;\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nnew glue.PySparkEtlJob(stack, 'PySparkETLJob', {\n  jobName: 'PySparkETLJobCustomName',\n  description: 'This is a description',\n  role,\n  script,\n  glueVersion: glue.GlueVersion.V3_0,\n  continuousLogging: { enabled: false },\n  workerType: glue.WorkerType.G_2X,\n  maxConcurrentRuns: 100,\n  timeout: cdk.Duration.hours(2),\n  connections: [glue.Connection.fromConnectionName(stack, 'Connection', 'connectionName')],\n  securityConfiguration: glue.SecurityConfiguration.fromSecurityConfigurationName(stack, 'SecurityConfig', 'securityConfigName'),\n  tags: {\n    FirstTagName: 'FirstTagValue',\n    SecondTagName: 'SecondTagValue',\n    XTagName: 'XTagValue',\n  },\n  numberOfWorkers: 2,\n  maxRetries: 2,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.WorkerType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/constants.ts",
        "line": 7
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Standard Worker Type 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker."
          },
          "name": "STANDARD"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "G.1X Worker Type 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. Suitable for memory-intensive jobs."
          },
          "name": "G_1X"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "G.2X Worker Type 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. Suitable for memory-intensive jobs."
          },
          "name": "G_2X"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "G.4X Worker Type 4 DPU (16 vCPU, 64 GB of memory, 256 GB disk), and provides 1 executor per worker. We recommend this worker type for jobs whose workloads contain your most demanding transforms, aggregations, joins, and queries. This worker type is available only for AWS Glue version 3.0 or later jobs."
          },
          "name": "G_4X"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "G.8X Worker Type 8 DPU (32 vCPU, 128 GB of memory, 512 GB disk), and provides 1 executor per worker. We recommend this worker type for jobs whose workloads contain your most demanding transforms, aggregations, joins, and queries. This worker type is available only for AWS Glue version 3.0 or later jobs."
          },
          "name": "G_8X"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "G.025X Worker Type 0.25 DPU (2 vCPU, 4 GB of memory, 64 GB disk), and provides 1 executor per worker. Suitable for low volume streaming jobs."
          },
          "name": "G_025X"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Z.2X Worker Type."
          },
          "name": "Z_2X"
        }
      ],
      "name": "WorkerType",
      "symbolId": "lib/constants:WorkerType"
    },
    "@aws-cdk/aws-glue-alpha.Workflow": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "@aws-cdk/aws-glue-alpha.WorkflowBase",
      "docs": {
        "remarks": "AWS Glue Workflows are orchestration services that allow you to create, manage, and monitor complex extract, transform, and load (ETL) activities involving multiple crawlers, jobs, and triggers. Workflows are designed to allow you to manage interdependent jobs and crawlers as a single unit, making it easier to orchestrate and monitor complex ETL pipelines.\n\nTriggers are used to initiate an AWS Glue Workflow. You can configure different types of triggers, such as on-demand, scheduled, event-based, or conditional triggers, to start your Workflow based on specific conditions or events.",
        "see": "https://docs.aws.amazon.com/glue/latest/dg/about-triggers.html\n\n## Usage Example\n\n```ts\nconst app = new App();\nconst stack = new Stack(app, 'TestStack');\n\n// Create a Glue Job\ndeclare const role: iam.IRole;\ndeclare const script: glue.Code;\nconst job = new glue.PySparkStreamingJob(stack, 'ImportedJob', { role, script });\n\n// Create a Glue Workflow\nconst workflow = new glue.Workflow(stack, 'TestWorkflow');\n\n// Add an on-demand trigger to the Workflow\nworkflow.addOnDemandTrigger('OnDemandTrigger', {\nactions: [{ job: job }],\n});\n```",
        "stability": "experimental",
        "summary": "This module defines a construct for creating and managing AWS Glue Workflows and Triggers.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nconst workflow = new glue_alpha.Workflow(this, 'MyWorkflow', /* all optional props */ {\n  defaultRunProperties: {\n    defaultRunPropertiesKey: 'defaultRunProperties',\n  },\n  description: 'description',\n  maxConcurrentRuns: 123,\n  workflowName: 'workflowName',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.Workflow",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/triggers/workflow.ts",
          "line": 412
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.WorkflowProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/triggers/workflow.ts",
        "line": 373
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an workflow from it's name."
          },
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 390
          },
          "name": "fromWorkflowArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "workflowArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.IWorkflow"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing workflow."
          },
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 400
          },
          "name": "fromWorkflowAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.WorkflowAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.IWorkflow"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import a workflow from its name."
          },
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 381
          },
          "name": "fromWorkflowName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "workflowName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-glue-alpha.IWorkflow"
            }
          },
          "static": true
        }
      ],
      "name": "Workflow",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "Uniquely identifies this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 376
          },
          "name": "PROPERTY_INJECTION_ID",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 410
          },
          "name": "workflowArn",
          "overrides": "@aws-cdk/aws-glue-alpha.WorkflowBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 409
          },
          "name": "workflowName",
          "overrides": "@aws-cdk/aws-glue-alpha.WorkflowBase",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/triggers/workflow:Workflow"
    },
    "@aws-cdk/aws-glue-alpha.WorkflowAttributes": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for importing a Workflow using its attributes.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nconst workflowAttributes: glue_alpha.WorkflowAttributes = {\n  workflowName: 'workflowName',\n\n  // the properties below are optional\n  workflowArn: 'workflowArn',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.WorkflowAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/triggers/workflow.ts",
        "line": 64
      },
      "name": "WorkflowAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the workflow to import."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 68
          },
          "name": "workflowName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- derived from the workflow name",
            "stability": "experimental",
            "summary": "The ARN of the workflow to import."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 74
          },
          "name": "workflowArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/triggers/workflow:WorkflowAttributes"
    },
    "@aws-cdk/aws-glue-alpha.WorkflowBase": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-glue-alpha",
      "base": "aws-cdk-lib.Resource",
      "docs": {
        "see": "https://docs.aws.amazon.com/glue/latest/dg/about-triggers.html",
        "stability": "experimental",
        "summary": "Base abstract class for Workflow."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.WorkflowBase",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "core/lib/resource.ts",
          "line": 156
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "aws-cdk-lib.ResourceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-glue-alpha.IWorkflow"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/triggers/workflow.ts",
        "line": 115
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Extract workflowName from arn."
          },
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 119
          },
          "name": "extractNameFromArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "workflowArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "throws": "If a job is provided without a job state, or if a crawler is provided without a crawler state for any condition."
            },
            "returns": "The created CfnTrigger resource.",
            "stability": "experimental",
            "summary": "Add a Condition (Predicate) based trigger to the workflow."
          },
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 252
          },
          "name": "addConditionalTrigger",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the trigger."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Additional options for the trigger."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.ConditionalTriggerOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_glue.CfnTrigger"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "If both job and crawler are provided, or if neither job nor crawler is provided."
            },
            "returns": "The created CfnTrigger resource.",
            "stability": "experimental",
            "summary": "Add a custom-scheduled trigger to the workflow."
          },
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 209
          },
          "name": "addCustomScheduledTrigger",
          "overrides": "@aws-cdk/aws-glue-alpha.IWorkflow",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the trigger."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Additional options for the trigger."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.CustomScheduledTriggerOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_glue.CfnTrigger"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "If both job and crawler are provided, or if neither job nor crawler is provided."
            },
            "returns": "The created CfnTrigger resource.",
            "stability": "experimental",
            "summary": "Add a daily-scheduled trigger to the workflow."
          },
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 156
          },
          "name": "addDailyScheduledTrigger",
          "overrides": "@aws-cdk/aws-glue-alpha.IWorkflow",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the trigger."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Additional options for the trigger."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.DailyScheduleTriggerOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_glue.CfnTrigger"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "If both job and crawler are provided, or if neither job nor crawler is provided."
            },
            "returns": "The created CfnTrigger resource.",
            "stability": "experimental",
            "summary": "Add an Event Bridge based trigger to the workflow."
          },
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 230
          },
          "name": "addNotifyEventTrigger",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the trigger."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Additional options for the trigger."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.NotifyEventTriggerOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_glue.CfnTrigger"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "If both job and crawler are provided, or if neither job nor crawler is provided."
            },
            "returns": "The created CfnTrigger resource.",
            "stability": "experimental",
            "summary": "Add an on-demand trigger to the workflow."
          },
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 136
          },
          "name": "addOnDemandTrigger",
          "overrides": "@aws-cdk/aws-glue-alpha.IWorkflow",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the trigger."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Additional options for the trigger."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.OnDemandTriggerOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_glue.CfnTrigger"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "If both job and crawler are provided, or if neither job nor crawler is provided."
            },
            "returns": "The created CfnTrigger resource.",
            "stability": "experimental",
            "summary": "Add a weekly-scheduled trigger to the workflow."
          },
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 182
          },
          "name": "addWeeklyScheduledTrigger",
          "overrides": "@aws-cdk/aws-glue-alpha.IWorkflow",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the trigger."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Additional options for the trigger."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-glue-alpha.WeeklyScheduleTriggerOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "aws-cdk-lib.aws_glue.CfnTrigger"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 334
          },
          "name": "buildWorkflowArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "workflowName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "WorkflowBase",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 126
          },
          "name": "workflowArn",
          "overrides": "@aws-cdk/aws-glue-alpha.IWorkflow",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 125
          },
          "name": "workflowName",
          "overrides": "@aws-cdk/aws-glue-alpha.IWorkflow",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/triggers/workflow:WorkflowBase"
    },
    "@aws-cdk/aws-glue-alpha.WorkflowProps": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for defining a Workflow.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue_alpha from '@aws-cdk/aws-glue-alpha';\nconst workflowProps: glue_alpha.WorkflowProps = {\n  defaultRunProperties: {\n    defaultRunPropertiesKey: 'defaultRunProperties',\n  },\n  description: 'description',\n  maxConcurrentRuns: 123,\n  workflowName: 'workflowName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-glue-alpha.WorkflowProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/triggers/workflow.ts",
        "line": 80
      },
      "name": "WorkflowProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no default run properties",
            "stability": "experimental",
            "summary": "A map of properties to use when this workflow is executed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 100
          },
          "name": "defaultRunProperties",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no description",
            "stability": "experimental",
            "summary": "A description of the workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 93
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no limit",
            "stability": "experimental",
            "summary": "The maximum number of concurrent runs allowed for the workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 107
          },
          "name": "maxConcurrentRuns",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a name will be generated",
            "stability": "experimental",
            "summary": "Name of the workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/triggers/workflow.ts",
            "line": 86
          },
          "name": "workflowName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/triggers/workflow:WorkflowProps"
    },
    "@aws-cdk/aws-glue-alpha.WriteParallel": {
      "assembly": "@aws-cdk/aws-glue-alpha",
      "docs": {
        "remarks": "By default, Redshift Spectrum sets the value to null for data that exceeds the width of the column.",
        "see": "https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_TABLE.html#r_CREATE_EXTERNAL_TABLE-parameters - under _\"TABLE PROPERTIES\"_ > _\"surplus_char_handling\"_",
        "stability": "experimental",
        "summary": "Specifies how to handle data being loaded that exceeds the length of the data type defined for columns containing VARCHAR, CHAR, or string data."
      },
      "fqn": "@aws-cdk/aws-glue-alpha.WriteParallel",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/storage-parameter.ts",
        "line": 183
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Write data in parallel."
          },
          "name": "ON"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Write data serially."
          },
          "name": "OFF"
        }
      ],
      "name": "WriteParallel",
      "symbolId": "lib/storage-parameter:WriteParallel"
    }
  },
  "version": "2.202.0-alpha.0",
  "fingerprint": "**********"
}